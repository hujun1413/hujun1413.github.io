<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>胡君的个人博客</title>
  <subtitle>你必须非常努力才能看起来毫不费力</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hujun1413.github.io/"/>
  <updated>2018-08-27T09:06:15.844Z</updated>
  <id>http://hujun1413.github.io/</id>
  
  <author>
    <name>hujun1413</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>修改turtlebot2的description以改变tf tree</title>
    <link href="http://hujun1413.github.io/2018/06/13/ROS/%E4%BF%AE%E6%94%B9turtlebot2%E7%9A%84description%E4%BB%A5%E6%94%B9%E5%8F%98tf%20tree/"/>
    <id>http://hujun1413.github.io/2018/06/13/ROS/修改turtlebot2的description以改变tf tree/</id>
    <published>2018-06-13T12:35:26.000Z</published>
    <updated>2018-08-27T09:06:15.844Z</updated>
    
    <content type="html">&lt;h3 id=&quot;调用什么文件来显示机器人及其身上的坐标系转换&quot;&gt;&lt;a href=&quot;#调用什么文件来显示机器人及其身上的坐标系转换&quot; class=&quot;headerlink&quot; title=&quot;调用什么文件来显示机器人及其身上的坐标系转换&quot;&gt;&lt;/a&gt;调用什么文件来显示机器人及其身上的坐标系转换&lt;/h3&gt;&lt;p&gt;在turtlebot_description包中，urdf/turtlebot_library.urdf.xacro文件中引用了基本所有的机器人组件。&lt;/p&gt;
&lt;p&gt;一般的，minimal.launch是用于启动机器人robot.launch.xml和底盘mobile_base.launch.xml&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;robot.launch中调用description.launch.xml来建立机器人的各关节和传感器的坐标系描述，调用robot_state_publisher来读取robot_description文件并发布tf tree。&lt;/p&gt;
&lt;p&gt;description.launch.xml调用$(find turtlebot&lt;em&gt;description)/robots/$(arg base)&lt;/em&gt;$(arg stacks)_$(arg 3d_sensor).urdf.xacro’文件来定义机器人的关节和传感器&lt;/p&gt;
&lt;p&gt;因此，通过调用(find turtlebot&lt;em&gt;description)/robots/$(arg base)&lt;/em&gt;$(arg stacks)_$(arg 3d_sensor).urdf.xacro’文件来显示机器人及其坐标系。可以修改这个文件所包含的文件，来改变机器人的形态和坐标系变换&lt;/p&gt;
&lt;p&gt;例如：&lt;br&gt;在kobuki_hexagons_asus_xtion_pro.urdf.xacro文件中，&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;xacro:include filename=&amp;quot;$(find turtlebot_description)/urdf/turtlebot_library.urdf.xacro&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;kobuki/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;stack_hexagons                 parent=&amp;quot;base_link&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;sensor_asus_xtion_pro          parent=&amp;quot;base_link&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;sensor_rplidar  				  parent=&amp;quot;base_link&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;turtlebot的hexagon平台&quot;&gt;&lt;a href=&quot;#turtlebot的hexagon平台&quot; class=&quot;headerlink&quot; title=&quot;turtlebot的hexagon平台&quot;&gt;&lt;/a&gt;turtlebot的hexagon平台&lt;/h3&gt;&lt;p&gt;以base_link为母坐标系，base_link在turtlebot中代表的是机器人中心，若使用kobuki则在实际世界坐标系中高度为0.0102m，即若以机器人正中心在地面的坐标为origin（0,0,0），则base_link相对于origin的坐标为（0,0,0.0102）。发布base_link与base_footprint之间的tf变换为&lt;code&gt;xyz=&amp;quot;0 0 0.0102&amp;quot; rpy=&amp;quot;0 0 0&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;详情参考urdf/stacks/hexagons.urdf.xacro文件。&lt;/p&gt;
&lt;p&gt;以下坐标都是相对于base_link坐标系而言，即真实的高度都要加上0.0102m，且坐标都是指该物体的中心点坐标。若是柱子则是柱子的中心点，若是平台则是平台的中心点。&lt;/p&gt;
&lt;p&gt;层与层之间支撑的柱子，如：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;stack_top_pole parent=&amp;quot;$&amp;#123;parent&amp;#125;&amp;quot; number=&amp;quot;0&amp;quot; x_loc= &amp;quot;0.0381&amp;quot; y_loc= &amp;quot;0.1505&amp;quot; z_loc=&amp;quot;0.2920&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;代表最高层和中间层之间的柱子，柱子中间点的高度为0.2920m，而urdf/stacks/hexagons.urdf.xacro文件的87行的&lt;code&gt;&amp;lt;cylinder length=&amp;quot;0.2032&amp;quot; radius=&amp;quot;0.006&amp;quot;/&amp;gt;&lt;/code&gt;，说明柱子长度为0.2032m，因此柱子的底部为0.1904m，顶部为0.3936。&lt;/p&gt;
&lt;p&gt;urdf/stacks/hexagons.urdf.xacro文件的157行的&lt;br&gt;&lt;code&gt;&amp;lt;cylinder length=&amp;quot;0.006&amp;quot; radius=&amp;quot;0.170&amp;quot;/&amp;gt;&lt;/code&gt;，说明平台的宽度为0.006m。&lt;br&gt;最高层平台中心的高度为：0.3966m，平台上的物体的高度为0.3996m（平台上物体的真实高度为0.4096m）&lt;br&gt;中间层平台中心的高度为：0.1874m&lt;br&gt;最低层平台中心的高度为：0.1306m&lt;/p&gt;
&lt;h3 id=&quot;turtlebot的asus-xtion-pro&quot;&gt;&lt;a href=&quot;#turtlebot的asus-xtion-pro&quot; class=&quot;headerlink&quot; title=&quot;turtlebot的asus xtion pro&quot;&gt;&lt;/a&gt;turtlebot的asus xtion pro&lt;/h3&gt;&lt;p&gt;urdf/sensors/asus_xtion_pro.urdf.xacro文件中，摄像头的中心camera_rgb_frame相对于base_link的转换为：&lt;br&gt;&lt;code&gt;&amp;lt;origin xyz=&amp;quot;${cam_px} ${asus_xtion_pro_cam_py} ${cam_pz}&amp;quot;
              rpy=&amp;quot;${cam_or} ${cam_op} ${cam_oy}&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;asus_xtion_pro_cam_py在asus_xtion_pro.urdf.xacro文件中设定。&lt;br&gt;cam_px,cam_pz,cam_or,cam_op,cam_oy在urdf/turtlebot_properties.urdf.xacro文件中设定&lt;/p&gt;
&lt;p&gt;/camera_rgb_frame相对于/camera_rgb_optical_frame为&lt;code&gt;&amp;lt;origin xyz=&amp;quot;0 0 0&amp;quot; rpy=&amp;quot;${-M_PI/2} 0 ${-M_PI/2}&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;/camera_link相对于/camera_rgb_frame为&lt;code&gt;&amp;lt;origin xyz=&amp;quot;0 ${asus_xtion_pro_cam_rel_rgb_py} 0&amp;quot; rpy=&amp;quot;0 0 0&amp;quot;/&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;/camera_depth_frame相对于/camera_rgb_frame为&lt;code&gt;&amp;lt;origin xyz=&amp;quot;0 ${asus_xtion_pro_depth_rel_rgb_py} 0&amp;quot; rpy=&amp;quot;0 0 0&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;带入数据，&lt;br&gt;depth_frame rgb_optical_frame base_link camera_link&lt;br&gt;0.027m 0.0205m 0.0225-0.0205=0.002m&lt;/p&gt;
&lt;p&gt;世界坐标系的相对关系为右手坐标系，机器人前方为x轴正方向，机器人左方为y轴正方向，机器人上方为z轴正方向。&lt;/p&gt;
&lt;p&gt;相机坐标系：机器人前方为z轴正方向，机器人右方为x轴正方向，机器人下方为y轴正方向&lt;/p&gt;
&lt;h3 id=&quot;相机坐标系与世界坐标系的变换&quot;&gt;&lt;a href=&quot;#相机坐标系与世界坐标系的变换&quot; class=&quot;headerlink&quot; title=&quot;相机坐标系与世界坐标系的变换&quot;&gt;&lt;/a&gt;相机坐标系与世界坐标系的变换&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cutcat@cutcat:~$ rosrun tf tf_echo /camera_rgb_optical_frame /map&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;At time 1528257902.539&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- Translation: [0.034, 0.685, 0.055]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- Rotation: in Quaternion [0.502, -0.498, 0.498, 0.502]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            in RPY (radian) [1.571, -1.563, 0.000]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            in RPY (degree) [90.000, -89.528, 0.000]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tf_listener.transformPoint(kMapTF, msg-&amp;gt;start, start);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg-&amp;gt;start在/camera_rgb_optical_frame坐标系下，start在/map坐标系下&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;msg-&amp;gt;start_x=2     msg-&amp;gt;satrt_y=-1     msg-&amp;gt;satrt_z=1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;start_x=0.961461     start_y=-1.95825     start_z=1.6848&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(2-0.034)=1.966 (-1-0.685)=-1.685 1-0.055=0.945 #源坐标系下坐标-translation，若正方向相反，则添负号。（相机的x轴正方向是机器人右方，对应于直接坐标系的y轴负方向，将1.966添负号后放在世界坐标系的y坐标上。相机的y轴正方向是机器人的下方，将-1.685添负号后放在世界坐标系的z坐标上。相机的z轴正方向是机器人前方，不添负号直接放在世界坐标系的x坐标上）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.945 -1.966 1.685&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.961461 -1.95825 1.6848&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cutcat@cutcat:~$ rosrun tf tf_echo /base_link /map&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;At time 1528257977.424&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- Translation: [-0.043, -0.013, -0.010]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- Rotation: in Quaternion [0.000, 0.000, -0.004, 1.000]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            in RPY (radian) [0.000, 0.000, -0.008]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            in RPY (degree) [0.000, 0.000, -0.472]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;turtlebot2的description参数&quot;&gt;&lt;a href=&quot;#turtlebot2的description参数&quot; class=&quot;headerlink&quot; title=&quot;turtlebot2的description参数&quot;&gt;&lt;/a&gt;turtlebot2的description参数&lt;/h3&gt;&lt;h4 id=&quot;turtlebot-description-urdf-sensors-rplidar-urdf-xacro&quot;&gt;&lt;a href=&quot;#turtlebot-description-urdf-sensors-rplidar-urdf-xacro&quot; class=&quot;headerlink&quot; title=&quot;turtlebot_description/urdf/sensors/rplidar.urdf.xacro&quot;&gt;&lt;/a&gt;turtlebot_description/urdf/sensors/rplidar.urdf.xacro&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;joint name=&amp;quot;laser&amp;quot; type=&amp;quot;fixed&amp;quot;&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!--&amp;lt;origin xyz=&amp;quot;0.15 0.0 0.15&amp;quot; rpy=&amp;quot;0 0.0 0.0&amp;quot; /&amp;gt;  --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;origin xyz=&amp;quot;0.10 -0.03 0.4716&amp;quot; rpy=&amp;quot;0 0.0 0.0&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;turtlebot-description-urdf-sensors-asus-xtion-pro-urdf-xacro&quot;&gt;&lt;a href=&quot;#turtlebot-description-urdf-sensors-asus-xtion-pro-urdf-xacro&quot; class=&quot;headerlink&quot; title=&quot;turtlebot_description/urdf/sensors/asus_xtion_pro.urdf.xacro&quot;&gt;&lt;/a&gt;turtlebot_description/urdf/sensors/asus_xtion_pro.urdf.xacro&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;joint name=&amp;quot;mount_asus_xtion_pro_joint&amp;quot; type=&amp;quot;fixed&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;origin xyz=&amp;quot;-0.1024 0.0 0.6596&amp;quot; rpy=&amp;quot;0 0 0&amp;quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;!--&amp;lt;origin xyz=&amp;quot;-0.1024 0.0 0.272&amp;quot; rpy=&amp;quot;0 0 0&amp;quot;/&amp;gt;--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;turtlebot-description-urdf-turtlebot-properties-urdf-xacro&quot;&gt;&lt;a href=&quot;#turtlebot-description-urdf-turtlebot-properties-urdf-xacro&quot; class=&quot;headerlink&quot; title=&quot;turtlebot_description/urdf/turtlebot_properties.urdf.xacro&quot;&gt;&lt;/a&gt;turtlebot_description/urdf/turtlebot_properties.urdf.xacro&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--&amp;lt;property name=&amp;quot;cam_px&amp;quot; value=&amp;quot;-0.087&amp;quot; /&amp;gt;--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;property name=&amp;quot;cam_px&amp;quot; value=&amp;quot;-0.098&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--	&amp;lt;property name=&amp;quot;cam_py&amp;quot; value=&amp;quot;-0.0125&amp;quot; /&amp;gt; Y varies for different configurations. get sets in sensors_urdf --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--&amp;lt;property name=&amp;quot;cam_pz&amp;quot; value=&amp;quot;0.2870&amp;quot; /&amp;gt;--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;property name=&amp;quot;cam_pz&amp;quot; value=&amp;quot;0.6746&amp;quot; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;调用什么文件来显示机器人及其身上的坐标系转换&quot;&gt;&lt;a href=&quot;#调用什么文件来显示机器人及其身上的坐标系转换&quot; class=&quot;headerlink&quot; title=&quot;调用什么文件来显示机器人及其身上的坐标系转换&quot;&gt;&lt;/a&gt;调用什么文件来显示机器人及其身上的坐标系转换&lt;/h3&gt;&lt;p&gt;在turtlebot_description包中，urdf/turtlebot_library.urdf.xacro文件中引用了基本所有的机器人组件。&lt;/p&gt;
&lt;p&gt;一般的，minimal.launch是用于启动机器人robot.launch.xml和底盘mobile_base.launch.xml&lt;br&gt;
    
    </summary>
    
      <category term="ROS" scheme="http://hujun1413.github.io/categories/ROS/"/>
    
    
  </entry>
  
  <entry>
    <title>GAN</title>
    <link href="http://hujun1413.github.io/2018/05/25/Deep%20Learning/GAN/"/>
    <id>http://hujun1413.github.io/2018/05/25/Deep Learning/GAN/</id>
    <published>2018-05-25T08:25:26.000Z</published>
    <updated>2018-08-27T09:05:25.290Z</updated>
    
    <content type="html">&lt;h3 id=&quot;简单理解与实验生成对抗网络GAN&quot;&gt;&lt;a href=&quot;#简单理解与实验生成对抗网络GAN&quot; class=&quot;headerlink&quot; title=&quot;简单理解与实验生成对抗网络GAN&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://blog.csdn.net/on2way/article/details/72773771&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简单理解与实验生成对抗网络GAN&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.leiphone.com/news/201706/ty7H504cn7l6EVLd.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;最简单易懂的GAN（生成对抗网络）教程：从理论到实践（附代码&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;生成网络&lt;br&gt;判别网络&lt;/p&gt;
&lt;p&gt;单独交替迭代训练&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;判别网络不仅要做出判断，还要告诉生成网络怎么改进会更好（即：判别网络将学习到的经验反向传递给生成网络）&lt;/p&gt;
&lt;p&gt;DCGAN:将卷积神经网络和对抗网络结合起来&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/25071913&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WGAN&lt;/a&gt;:训练过程中终于有一个像交叉熵、准确率这样的数值来指示训练的进程，这个数值越小代表GAN训练得越好，代表生成器产生的图像质量越高&lt;/p&gt;
&lt;p&gt;WGAN-GP:&lt;a href=&quot;https://arxiv.org/pdf/1704.00028.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Improved Training of Wasserstein GANs&lt;/a&gt;使用正则化（gradient penalty）而非 weight clipping的改进版WGAN&lt;br&gt;&lt;a href=&quot;https://github.com/caogang/wgan-gp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pytorch implementation of WGAN-GP&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LSGAN:最小二乘GAN&lt;/p&gt;
&lt;p&gt;条件GAN：把generator换成一个image to image的网络，比如encoder-decoder和U-Net。&lt;br&gt;G网络从一个Image生成另一个image，比如：Loss是GAN Loss(尽量让D判成真)+L1 Loss(生成的和真实的一致性)；D网络从一个image判断是否为真实，Loss是将真判为真，生成的判为假&lt;/p&gt;
&lt;p&gt;U-Net是将第i层拼接到第n-i层，这样做是因为第i层和第n-i层的图像大小是一致的，可以认为他们承载着类似的信息。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/NVIDIA/pix2pixHD&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pix2pixHD，比pix2pix更好&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;深入浅出理解GAN&quot;&gt;&lt;a href=&quot;#深入浅出理解GAN&quot; class=&quot;headerlink&quot; title=&quot;深入浅出理解GAN&quot;&gt;&lt;/a&gt;深入浅出理解GAN&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.sohu.com/a/143961544_741733&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深入浅出 GAN&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;如何指导GAN的训练&quot;&gt;&lt;a href=&quot;#如何指导GAN的训练&quot; class=&quot;headerlink&quot; title=&quot;如何指导GAN的训练&quot;&gt;&lt;/a&gt;如何指导GAN的训练&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/soumith/ganhacks&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ganhacks&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;GAN用于分类&quot;&gt;&lt;a href=&quot;#GAN用于分类&quot; class=&quot;headerlink&quot; title=&quot;GAN用于分类&quot;&gt;&lt;/a&gt;GAN用于分类&lt;/h3&gt;&lt;h3 id=&quot;知乎&quot;&gt;&lt;a href=&quot;#知乎&quot; class=&quot;headerlink&quot; title=&quot;知乎&quot;&gt;&lt;/a&gt;知乎&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/52602529&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;生成式对抗网络GAN有哪些最新的发展，可以实际应用到哪些场景中？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/268725048&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GAN 研究的应用方向应该如何选择？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/25201511&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深度对抗学习在图像分割和超分辨率中的应用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;图像分割&lt;br&gt;视频后续帧预测&lt;br&gt;pix2pix风格变换&lt;br&gt;低分辨率到高分辨率图片&lt;br&gt;噪声生成图片&lt;br&gt;GAN生成深度图（单帧图像的深度估计）：先做分割，再在此基础上做深度估计，因为一个平面上的深度基本相同&lt;/p&gt;
&lt;p&gt;给一张图和路线，就知道应该怎么导航。是向前还是后，左，右&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简单理解与实验生成对抗网络GAN&quot;&gt;&lt;a href=&quot;#简单理解与实验生成对抗网络GAN&quot; class=&quot;headerlink&quot; title=&quot;简单理解与实验生成对抗网络GAN&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://blog.csdn.net/on2way/article/details/72773771&quot;&gt;简单理解与实验生成对抗网络GAN&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.leiphone.com/news/201706/ty7H504cn7l6EVLd.html&quot;&gt;最简单易懂的GAN（生成对抗网络）教程：从理论到实践（附代码&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;生成网络&lt;br&gt;判别网络&lt;/p&gt;
&lt;p&gt;单独交替迭代训练&lt;br&gt;
    
    </summary>
    
      <category term="Deep Learning" scheme="http://hujun1413.github.io/categories/Deep-Learning/"/>
    
    
      <category term="GAN" scheme="http://hujun1413.github.io/tags/GAN/"/>
    
  </entry>
  
  <entry>
    <title>Pytorch教程</title>
    <link href="http://hujun1413.github.io/2018/05/25/Deep%20Learning/pytorch%E6%95%99%E7%A8%8B/"/>
    <id>http://hujun1413.github.io/2018/05/25/Deep Learning/pytorch教程/</id>
    <published>2018-05-25T08:25:26.000Z</published>
    <updated>2018-08-27T09:05:32.404Z</updated>
    
    <content type="html">&lt;h3 id=&quot;PyTorch-Tutorial&quot;&gt;&lt;a href=&quot;#PyTorch-Tutorial&quot; class=&quot;headerlink&quot; title=&quot;PyTorch-Tutorial&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/MorvanZhou/PyTorch-Tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PyTorch-Tutorial&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;与之配套的说明教程：&lt;br&gt;&lt;a href=&quot;https://morvanzhou.github.io/tutorials/machine-learning/torch/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pytorch动态神经网络&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;《深度学习框架PyTorch：入门与实践》&quot;&gt;&lt;a href=&quot;#《深度学习框架PyTorch：入门与实践》&quot; class=&quot;headerlink&quot; title=&quot;《深度学习框架PyTorch：入门与实践》&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/chenyuntc/pytorch-book&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《深度学习框架PyTorch：入门与实践》&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;softmax分类器&lt;br&gt;fast rcnn&lt;/p&gt;
&lt;h3 id=&quot;pytorch中文文档&quot;&gt;&lt;a href=&quot;#pytorch中文文档&quot; class=&quot;headerlink&quot; title=&quot;pytorch中文文档&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://pytorch-cn.readthedocs.io/zh/latest/package_references/torch-autograd/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pytorch中文文档&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;理解&quot;&gt;&lt;a href=&quot;#理解&quot; class=&quot;headerlink&quot; title=&quot;理解&quot;&gt;&lt;/a&gt;理解&lt;/h3&gt;&lt;p&gt;torch.FloatTensor 相比于numpy，可以使用GPU&lt;br&gt;Variable 相比于Tensor，可以定义计算图，用于自动计算梯度&lt;/p&gt;
&lt;p&gt;The biggest difference between the two is that TensorFlow’s computational graphs are static and PyTorch uses dynamic computational graphs.&lt;/p&gt;
&lt;p&gt;TensorFlow是静态的计算图，而pytorch用动态计算图&lt;/p&gt;
&lt;h3 id=&quot;Dogs-vs-Cats-Kaggle&quot;&gt;&lt;a href=&quot;#Dogs-vs-Cats-Kaggle&quot; class=&quot;headerlink&quot; title=&quot;Dogs vs. Cats Kaggle&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.kaggle.com/c/dogs-vs-cats/data&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dogs vs. Cats Kaggle&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29024978&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PyTorch实战指南6-知乎&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CUDA_VISIBLE_DEVICES=1 python my_script.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CUDA_VISIBLE_DEVICES=0 python main.py train --train-data-root=./data/train/train --use-gpu=True --env=classifier&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CUDA_VISIBLE_DEVICES=0 python main.py test --load-model-path=./checkpoints/resnet34_0426_17\:40\:25.pth&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;使用Jupyter-notebook或IPython等交互式调试&quot;&gt;&lt;a href=&quot;#使用Jupyter-notebook或IPython等交互式调试&quot; class=&quot;headerlink&quot; title=&quot;使用Jupyter notebook或IPython等交互式调试&quot;&gt;&lt;/a&gt;使用Jupyter notebook或IPython等交互式调试&lt;/h3&gt;&lt;h3 id=&quot;二分类随机瞎蒙的loss在0-69左右&quot;&gt;&lt;a href=&quot;#二分类随机瞎蒙的loss在0-69左右&quot; class=&quot;headerlink&quot; title=&quot;二分类随机瞎蒙的loss在0.69左右&quot;&gt;&lt;/a&gt;二分类随机瞎蒙的loss在0.69左右&lt;/h3&gt;&lt;p&gt;0.9这个loss很高   二分类随机瞎蒙的loss应该在0.69左右。&lt;/p&gt;
&lt;p&gt;而且学习率太大了&lt;/p&gt;
&lt;p&gt;建议用resnet 34  学习率 0.001  adam优化器&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;PyTorch-Tutorial&quot;&gt;&lt;a href=&quot;#PyTorch-Tutorial&quot; class=&quot;headerlink&quot; title=&quot;PyTorch-Tutorial&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/MorvanZhou/PyTorch-Tutorial&quot;&gt;PyTorch-Tutorial&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;与之配套的说明教程：&lt;br&gt;&lt;a href=&quot;https://morvanzhou.github.io/tutorials/machine-learning/torch/&quot;&gt;pytorch动态神经网络&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Deep Learning" scheme="http://hujun1413.github.io/categories/Deep-Learning/"/>
    
    
      <category term="Pytorch" scheme="http://hujun1413.github.io/tags/Pytorch/"/>
    
  </entry>
  
  <entry>
    <title>ROS Cartographer</title>
    <link href="http://hujun1413.github.io/2018/04/13/ROS/ros%20cartographer/"/>
    <id>http://hujun1413.github.io/2018/04/13/ROS/ros cartographer/</id>
    <published>2018-04-13T12:35:26.000Z</published>
    <updated>2018-08-27T09:08:03.804Z</updated>
    
    <content type="html">&lt;h3 id=&quot;官网安装教程-Cartographer-ROS-Integration&quot;&gt;&lt;a href=&quot;#官网安装教程-Cartographer-ROS-Integration&quot; class=&quot;headerlink&quot; title=&quot;官网安装教程-Cartographer ROS Integration&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://google-cartographer-ros.readthedocs.io/en/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网安装教程-Cartographer ROS Integration&lt;/a&gt;&lt;/h3&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Install wstool and rosdep.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install -y python-wstool python-rosdep ninja-build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Create a new workspace in &#39;catkin_ws&#39;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir catkin_ws&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; catkin_ws&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wstool init src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Merge the cartographer_ros.rosinstall file and fetch code for dependencies.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#wstool merge -t src https://raw.githubusercontent.com/googlecartographer/cartographer_ros/master/cartographer_ros.rosinstall&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#wstool update -t src&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;由于ceres-solver的地址为https://ceres-solver.googlesource.com/ceres-solver，不翻墙下载不到，所以创建一个名字为a.rosinstall的文件，内容为：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- git: &amp;#123;&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;-name: cartographer, uri: &lt;span class=&quot;string&quot;&gt;&#39;https://github.com/googlecartographer/cartographer.git&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- git: &amp;#123;&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;-name: cartographer_ros, uri: &lt;span class=&quot;string&quot;&gt;&#39;https://github.com/googlecartographer/cartographer_ros.git&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- git: &amp;#123;&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;-name: ceres-solver, uri: &lt;span class=&quot;string&quot;&gt;&#39;https://github.com/ceres-solver/ceres-solver.git&#39;&lt;/span&gt;, version: &lt;span class=&quot;string&quot;&gt;&#39;1.13.0&#39;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;所以执行：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wstool merge -t src a.rosinstall&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wstool update -t src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Install proto3.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;src/cartographer/scripts/install_proto3.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Install deb dependencies.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# The command &#39;sudo rosdep init&#39; will print an error if you have already&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# executed it since installing ROS. This error can be ignored.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo rosdep init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosdep update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosdep install --from-paths src --ignore-src --rosdistro=&lt;span class=&quot;variable&quot;&gt;$&amp;#123;ROS_DISTRO&amp;#125;&lt;/span&gt; -y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Build and install.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;catkin_make_isolated --install --use-ninja&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; install_isolated/setup.bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;将CMakeLists.txt中的find_package(Eigen3 REQUIRED)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;替换成：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;include_directories( &amp;quot;/usr/include/eigen3&amp;quot; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#find_package(Eigen3 REQUIRED)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;因为Eigen3全是头文件，所以可以直接在CMakeLists.txt中添加eigen3的路径&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;官网安装教程-Cartographer-ROS-Integration&quot;&gt;&lt;a href=&quot;#官网安装教程-Cartographer-ROS-Integration&quot; class=&quot;headerlink&quot; title=&quot;官网安装教程-Cartographer ROS Integration&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://google-cartographer-ros.readthedocs.io/en/latest/&quot;&gt;官网安装教程-Cartographer ROS Integration&lt;/a&gt;&lt;/h3&gt;
    
    </summary>
    
      <category term="ROS" scheme="http://hujun1413.github.io/categories/ROS/"/>
    
    
  </entry>
  
  <entry>
    <title>滤波</title>
    <link href="http://hujun1413.github.io/2018/04/09/VSLAM/%E6%BB%A4%E6%B3%A2/"/>
    <id>http://hujun1413.github.io/2018/04/09/VSLAM/滤波/</id>
    <published>2018-04-09T10:35:26.000Z</published>
    <updated>2018-08-27T09:06:50.346Z</updated>
    
    <content type="html">&lt;h3 id=&quot;高翔总结&quot;&gt;&lt;a href=&quot;#高翔总结&quot; class=&quot;headerlink&quot; title=&quot;高翔总结&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.cnblogs.com/gaoxiang12/p/5560360.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;高翔总结&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;KF（卡尔曼滤波）&quot;&gt;&lt;a href=&quot;#KF（卡尔曼滤波）&quot; class=&quot;headerlink&quot; title=&quot;KF（卡尔曼滤波）&quot;&gt;&lt;/a&gt;KF（卡尔曼滤波）&lt;/h3&gt;&lt;p&gt;线性系统，高斯噪声&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;EKF（extended-kalman-filter，扩展卡尔曼滤波）&quot;&gt;&lt;a href=&quot;#EKF（extended-kalman-filter，扩展卡尔曼滤波）&quot; class=&quot;headerlink&quot; title=&quot;EKF（extended kalman filter，扩展卡尔曼滤波）&quot;&gt;&lt;/a&gt;EKF（extended kalman filter，扩展卡尔曼滤波）&lt;/h3&gt;&lt;p&gt;将非线性进行线性化（泰勒展开），然后再做KF。&lt;/p&gt;
&lt;p&gt;存在着精度不高、稳定性差、对目标机动反应迟缓等缺点. &lt;/p&gt;
&lt;h3 id=&quot;UKF（Unscented-Kalman-Filter，无迹-无损卡尔曼滤波）&quot;&gt;&lt;a href=&quot;#UKF（Unscented-Kalman-Filter，无迹-无损卡尔曼滤波）&quot; class=&quot;headerlink&quot; title=&quot;UKF（Unscented Kalman Filter，无迹/无损卡尔曼滤波）&quot;&gt;&lt;/a&gt;UKF（Unscented Kalman Filter，无迹/无损卡尔曼滤波）&lt;/h3&gt;&lt;p&gt;通过无损变换使非线性系统方程适用于线性假设下的标准Kalman滤波体系,而不是像EKF那样,通过线性化非线性函数实现递推滤波。&lt;/p&gt;
&lt;p&gt;UKF是对非线性函数的概率密度分布进行近似，用一系列确定样本来逼近状态的后验概率密度，而不是对非线性函数进行近似，不需要求导计算Jacobian矩阵。&lt;/p&gt;
&lt;h3 id=&quot;BF（贝叶斯滤波）&quot;&gt;&lt;a href=&quot;#BF（贝叶斯滤波）&quot; class=&quot;headerlink&quot; title=&quot;BF（贝叶斯滤波）&quot;&gt;&lt;/a&gt;BF（贝叶斯滤波）&lt;/h3&gt;&lt;p&gt;器人传感器获取的观测数据，利用Bayes公式（概率论）去估计机器人的状态。&lt;/p&gt;
&lt;p&gt;非线性系统，随机噪声&lt;/p&gt;
&lt;h3 id=&quot;PF（粒子滤波）&quot;&gt;&lt;a href=&quot;#PF（粒子滤波）&quot; class=&quot;headerlink&quot; title=&quot;PF（粒子滤波）&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://blog.csdn.net/piaoxuezhong/article/details/78619150&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PF（粒子滤波）&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;粒子集初始化&lt;/p&gt;
&lt;p&gt;计算每个粒子的权重，归一化之后确定目标状态&lt;/p&gt;
&lt;p&gt;重要性重采样&lt;/p&gt;
&lt;p&gt;计算状态估计值&lt;/p&gt;
&lt;p&gt;粒子滤波(PF: Particle Filter)的思想基于蒙特卡洛方法(Monte Carlo methods)，它是利用粒子集来表示概率，可以用在任何形式的状态空间模型上。&lt;/p&gt;
&lt;p&gt;以样本均值代替积分运算，从而获得状态最小方差分布的过程。这里的样本即指粒子,当样本数量N→∝时可以逼近任何形式的概率密度分布。&lt;/p&gt;
&lt;p&gt;摆脱了解决非线性滤波问题时随机量必须满足高斯分布的制约，能表达比高斯模型更广泛的分布，也对变量参数的非线性特性有更强的建模能力。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;高翔总结&quot;&gt;&lt;a href=&quot;#高翔总结&quot; class=&quot;headerlink&quot; title=&quot;高翔总结&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.cnblogs.com/gaoxiang12/p/5560360.html&quot;&gt;高翔总结&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;KF（卡尔曼滤波）&quot;&gt;&lt;a href=&quot;#KF（卡尔曼滤波）&quot; class=&quot;headerlink&quot; title=&quot;KF（卡尔曼滤波）&quot;&gt;&lt;/a&gt;KF（卡尔曼滤波）&lt;/h3&gt;&lt;p&gt;线性系统，高斯噪声&lt;br&gt;
    
    </summary>
    
      <category term="VSLAM" scheme="http://hujun1413.github.io/categories/VSLAM/"/>
    
    
  </entry>
  
  <entry>
    <title>VSLAM入门简介</title>
    <link href="http://hujun1413.github.io/2018/04/09/VSLAM/VSLAM%E5%85%A5%E9%97%A8%E7%AE%80%E4%BB%8B/"/>
    <id>http://hujun1413.github.io/2018/04/09/VSLAM/VSLAM入门简介/</id>
    <published>2018-04-09T10:35:26.000Z</published>
    <updated>2018-08-27T09:06:43.478Z</updated>
    
    <content type="html">&lt;h3 id=&quot;SLAMCN&quot;&gt;&lt;a href=&quot;#SLAMCN&quot; class=&quot;headerlink&quot; title=&quot;SLAMCN&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.slamcn.org/index.php/%E9%A6%96%E9%A1%B5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SLAMCN&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;SLAM是什么？它的未来在哪里？&quot;&gt;&lt;a href=&quot;#SLAM是什么？它的未来在哪里？&quot; class=&quot;headerlink&quot; title=&quot;SLAM是什么？它的未来在哪里？&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_61b61d9d0102wnf2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SLAM是什么？它的未来在哪里？&lt;/a&gt;&lt;/h3&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Visual-SLAM算法笔记&quot;&gt;&lt;a href=&quot;#Visual-SLAM算法笔记&quot; class=&quot;headerlink&quot; title=&quot;Visual SLAM算法笔记&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://blog.csdn.net/mulinb/article/details/53421864&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Visual SLAM算法笔记&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;主要是基于视觉的Visual SLAM或Visual Odometry，也包括一部分图像和IMU融合的Visual-Inertial Odometry相关算法。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/smartxxyx/article/details/53068855&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SLAM方法汇总&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;15-基于视觉SLAM稀疏特征构建可导航地图（IROS-6）&quot;&gt;&lt;a href=&quot;#15-基于视觉SLAM稀疏特征构建可导航地图（IROS-6）&quot; class=&quot;headerlink&quot; title=&quot;15.基于视觉SLAM稀疏特征构建可导航地图（IROS-6）&quot;&gt;&lt;/a&gt;15.基于视觉SLAM稀疏特征构建可导航地图（IROS-6）&lt;/h3&gt;&lt;p&gt;源码地址: &lt;a href=&quot;https://github.com/ygling2008/lightweight_mapping&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/ygling2008/lightweight_mapping&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;自己实现一个slam的后端&quot;&gt;&lt;a href=&quot;#自己实现一个slam的后端&quot; class=&quot;headerlink&quot; title=&quot;自己实现一个slam的后端&quot;&gt;&lt;/a&gt;自己实现一个slam的后端&lt;/h3&gt;&lt;p&gt;先看人家的后端如何实现，然后自己用高博的那个前端+自己写一个后端，构成一个完整的vslam系统。&lt;/p&gt;
&lt;p&gt;熟悉ORB_SLAM2和LSD-SLAM的源码，分别代表特征点法和直接法的代表作。&lt;/p&gt;
&lt;p&gt;SLAM很有可能在未来与深度学习结合得越来越紧密，说不定会形成一个新的SLAM架构。适当学习一点深度学习的技术，看看如何替换SLAM中的一些模块。&lt;/p&gt;
&lt;p&gt;如果你自己能够写出完整一套slam，或者对某个开源方案有很深入的理解（看的懂，改的动）&lt;/p&gt;
&lt;p&gt;你可以尝试自己写个简单的slam project，在kitti，euroc等数据集上与开源方案对比测试后，把结果放到简历里。&lt;/p&gt;
&lt;p&gt;建议读《state estimation for robotics》和《Multi View Geometry》,前者是介绍状态估计理论非常完备的一本书，举例来说，在非线性性非高斯章节中，作者从机器人的运动和测量方程出发，根据马尔科夫假设和贝叶斯公式，将目前主流的滤波（EKF，UKF，PF）方法统一在贝叶斯估计的框架下。后者涵盖了SLAM视觉几何的所有理论知识。对三维旋转的描述计算需要李群李代数的知识，高博的书和《state estimation for robotics》都有详细讲解，简单来说，使用旋转矩阵表示的旋转方便向量的坐标计算，但直接对其优化是有约束优化问题（9个参数3个自由度），解决思路就是在三维旋转群的正切空间上对用李代数表示的旋转误差量进行无约束优化，对正切空间的理解可以参考《Lie groups, Lie algebras, projective geometry and optimization for 3D Geometry, Engineering and Computer Vision》。推公式的时候发现矩阵白学了？宝宝不哭，这有一本《the Matrix CookBook》送给你。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;SLAMCN&quot;&gt;&lt;a href=&quot;#SLAMCN&quot; class=&quot;headerlink&quot; title=&quot;SLAMCN&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.slamcn.org/index.php/%E9%A6%96%E9%A1%B5&quot;&gt;SLAMCN&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;SLAM是什么？它的未来在哪里？&quot;&gt;&lt;a href=&quot;#SLAM是什么？它的未来在哪里？&quot; class=&quot;headerlink&quot; title=&quot;SLAM是什么？它的未来在哪里？&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_61b61d9d0102wnf2.html&quot;&gt;SLAM是什么？它的未来在哪里？&lt;/a&gt;&lt;/h3&gt;
    
    </summary>
    
      <category term="VSLAM" scheme="http://hujun1413.github.io/categories/VSLAM/"/>
    
    
  </entry>
  
  <entry>
    <title>SLAM与深度学习</title>
    <link href="http://hujun1413.github.io/2018/03/09/VSLAM/SLAM%E4%B8%8E%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    <id>http://hujun1413.github.io/2018/03/09/VSLAM/SLAM与深度学习/</id>
    <published>2018-03-09T10:35:26.000Z</published>
    <updated>2018-08-27T09:06:37.671Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Tombone’s-Computer-Vision-Blog&quot;&gt;&lt;a href=&quot;#Tombone’s-Computer-Vision-Blog&quot; class=&quot;headerlink&quot; title=&quot;Tombone’s Computer Vision Blog&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.computervisionblog.com/2016/01/why-slam-matters-future-of-real-time.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tombone’s Computer Vision Blog&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;翻译如下：&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/qq_18661939/article/details/51919329&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ICCV研讨会：实时SLAM的未来以及深度学习与SLAM的比较&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/66006923&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;当前深度学习和slam结合有哪些比较好的论文，有没有一些开源的代码?&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;slam与深度学习结合&quot;&gt;&lt;a href=&quot;#slam与深度学习结合&quot; class=&quot;headerlink&quot; title=&quot;slam与深度学习结合&quot;&gt;&lt;/a&gt;slam与深度学习结合&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u010821666/article/details/78749356&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用深度学习方法替换SLAM中的模块&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;用深度学习方法替换传统slam中的一个/几个模块：&lt;br&gt;目前还不能达到超越传统方法的效果，相较传统SLAM并没有很明显的优势（标注的数据集少且不全，使用视频做训练数据的非常少。SLAM中很多问题都是数学问题，深度学习并不擅长等等原因）。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/u010821666/article/details/78793225&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;语义SLAM &amp;amp; 端到端&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在传统SLAM之上加入语义信息&lt;br&gt;语义SLAM算是在扩展了传统SLAM问题的研究内容，现在出现了一些将语义信息集成到SLAM的研究，比如说用SLAM系统中得到的图像之间的几何一致性促进图像语义分割，也可以用语义分割/建图的结果促进SLAM的定位/闭环等，前者已经有了一些研究，不过还是集中于室内场景，后者貌似还没有什么相关研究。如果SLAM和语义分割能够相互促进相辅相成，应该能达到好的效果。&lt;/p&gt;
&lt;p&gt;另：使用SLAM帮助构建大规模的图像之间有对应关系的数据集，可以降低深度学习数据集的标注难度吧，应该也是一个SLAM助力深度学习的思路。&lt;/p&gt;
&lt;p&gt;1、利用学习的方法辅助几何方法。比如有学习的方法估计出深度信息，学习特征等等，特别是在几何法有时不行的时候。可以增强系统的鲁棒性。TUM实验室的CNN-Slam就是这个范畴，如果没记错的话。2、直接端到端学的，比如PoseNet，DeepVO，UnDeepVO3、语义Slam。不太了解，感觉机器学习做语义分割的很多，结合一下做语义Slam应该可以关联很多。&lt;/p&gt;
&lt;p&gt;提高特征点稳定性（减少outlier）和自动提取不同层级的特征点（点、线、面、物体），&lt;br&gt;快速生成密集的地图（而非稀疏的三维点云）&lt;br&gt;结合语义信息和图像分割&lt;br&gt;生成动态地图（可以实时更新、表达动态物体）&lt;br&gt;降低SLAM调参的难度&lt;/p&gt;
&lt;p&gt;将几何与深度学习结合。&lt;br&gt;&lt;a href=&quot;https://alexgkendall.com/computer_vision/have_we_forgotten_about_geometry_in_computer_vision/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Have We Forgotten about Geometry in Computer Vision?&lt;/a&gt;&lt;br&gt;求解深度，求解两帧间变换，特征点描述和提取，重定位&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29864012&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;单目深度估计-深度学习&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://campar.in.tum.de/Chair/ProjectCNNSLAM&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CNN-SLAM实时稠密单目SLAM&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;论文&quot;&gt;&lt;a href=&quot;#论文&quot; class=&quot;headerlink&quot; title=&quot;论文&quot;&gt;&lt;/a&gt;论文&lt;/h3&gt;&lt;h4 id=&quot;DeepVO-Towards-End-to-End-Visual-Odometry-with-Deep-Recurrent-Convolutional-Neural-Networks&quot;&gt;&lt;a href=&quot;#DeepVO-Towards-End-to-End-Visual-Odometry-with-Deep-Recurrent-Convolutional-Neural-Networks&quot; class=&quot;headerlink&quot; title=&quot;DeepVO: Towards End-to-End Visual Odometry with Deep Recurrent Convolutional Neural Networks&quot;&gt;&lt;/a&gt;DeepVO: Towards End-to-End Visual Odometry with Deep Recurrent Convolutional Neural Networks&lt;/h4&gt;&lt;p&gt;CNN和RNN结合，实现了一个端到端的VO&lt;br&gt;听说复现的效果不好，需考虑&lt;/p&gt;
&lt;p&gt;我的改进idea：将Deep RNN换成更好的注意力模型&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.dataguru.cn/article-12415-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;注意力机制介绍&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Tombone’s-Computer-Vision-Blog&quot;&gt;&lt;a href=&quot;#Tombone’s-Computer-Vision-Blog&quot; class=&quot;headerlink&quot; title=&quot;Tombone’s Computer Vision Blog&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.computervisionblog.com/2016/01/why-slam-matters-future-of-real-time.html&quot;&gt;Tombone’s Computer Vision Blog&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;翻译如下：&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/qq_18661939/article/details/51919329&quot;&gt;ICCV研讨会：实时SLAM的未来以及深度学习与SLAM的比较&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/66006923&quot;&gt;当前深度学习和slam结合有哪些比较好的论文，有没有一些开源的代码?&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="VSLAM" scheme="http://hujun1413.github.io/categories/VSLAM/"/>
    
    
  </entry>
  
  <entry>
    <title>RTAB_Map</title>
    <link href="http://hujun1413.github.io/2018/01/09/VSLAM/RTAB_MAP/"/>
    <id>http://hujun1413.github.io/2018/01/09/VSLAM/RTAB_MAP/</id>
    <published>2018-01-09T10:35:26.000Z</published>
    <updated>2018-08-27T09:05:02.746Z</updated>
    
    <content type="html">&lt;h3 id=&quot;RTAB是什么&quot;&gt;&lt;a href=&quot;#RTAB是什么&quot; class=&quot;headerlink&quot; title=&quot;RTAB是什么&quot;&gt;&lt;/a&gt;RTAB是什么&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://remyspot.blog.51cto.com/8218746/1784914/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RtabMap中文解析&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/severnvergil/p/6671879.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RTABMAP-ROS RGB-D的建图原理&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;RGB-D,可以换输入&lt;/p&gt;
&lt;p&gt;通过sift关键点进行匹配，然后估计相机运动，最后通过闭环检测减少误差。&lt;/p&gt;
&lt;h3 id=&quot;rtabMap源码&quot;&gt;&lt;a href=&quot;#rtabMap源码&quot; class=&quot;headerlink&quot; title=&quot;rtabMap源码&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/introlab/rtabmap&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rtabMap&lt;/a&gt;源码&lt;/h3&gt;&lt;p&gt;RTABMap&lt;/p&gt;
&lt;p&gt;问题可能主要在于 g2o and gtsam没有使用c++11的标准，而作者的工程使用的是c++11标准，所以出现了这个错误。&lt;br&gt;而作者直接给出的解决办法是编译时不使用g2o and gtsam.但是整个工程中是怎么用这两个库的，可能还的看看源码。&lt;/p&gt;
&lt;p&gt;cmake -DWITH_G2O=OFF -DWITH_GTSAM=OFF ..&lt;/p&gt;
&lt;p&gt;app/src/main.cpp中new了一个MainWindow类&lt;br&gt;MainWindow.cpp：&lt;br&gt;4592行：_preferencesDialog这个dialog中获取注入colorOnly之类的参数&lt;/p&gt;
&lt;h3 id=&quot;ros上rtabmap-ros包&quot;&gt;&lt;a href=&quot;#ros上rtabmap-ros包&quot; class=&quot;headerlink&quot; title=&quot;ros上rtabmap_ros包&quot;&gt;&lt;/a&gt;ros上&lt;a href=&quot;http://wiki.ros.org/rtabmap_ros?distro=lunar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rtabmap_ros&lt;/a&gt;包&lt;/h3&gt;&lt;p&gt;安装rtabmap_ros包。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.rosclub.cn/post-118.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rtabmap_ros的安装和使用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/introlab/rtabmap_ros#rtabmap_ros&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github上rtab_map的安装&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;用debian方式安装&lt;br&gt;sudo apt-get install ros-indigo-rtabmap-ros &lt;/p&gt;
&lt;p&gt;debian卸载&lt;br&gt;sudo apt-get remove ros-indigo-rtabmap&lt;/p&gt;
&lt;p&gt;安装rtabmap0.11.8版本，配套rtabmap_ros0.11.8-indigo版本。&lt;br&gt;编译rtabmap0.11.8遇到的问题：&lt;br&gt;&lt;a href=&quot;https://stackoverflow.com/questions/42504592/flann-util-serialization-h-class-stdunordered-mapunsigned-int-stdvectorun&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flann/util/serialization.h class std::unordered_map&lt;unsigned int,=&quot;&quot; std::vector&lt;unsigned=&quot;&quot; int=&quot;&quot;&gt; &amp;gt;’ has no member named ‘serialize’&lt;/unsigned&gt;&lt;/a&gt;&lt;br&gt;解决方法：将include flann.hpp的地方都放在include opencv头文件的前面。&lt;/p&gt;
&lt;h3 id=&quot;用奥比中光跑rtabmap-ros&quot;&gt;&lt;a href=&quot;#用奥比中光跑rtabmap-ros&quot; class=&quot;headerlink&quot; title=&quot;用奥比中光跑rtabmap_ros&quot;&gt;&lt;/a&gt;用奥比中光跑rtabmap_ros&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/tfoote/ros_astra_camera&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ros上跑奥比中光&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/suijideren/article/details/60876382&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;奥比中光3D传感摄像头Ubuntu系统安装ROS说明&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/zhangrelay/article/details/53515859&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;奥比中光Orbbec Astra Pro RGBD 3D视觉传感器在ROS（indigo和kinetic）使用说明 rgb depth同时显示&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;roslaunch astra_launch astra.launch #启动奥比中光摄像头&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch rtabmap_ros rtabmap.launch rtabmap_args:=&amp;quot;--delete_db_on_start&amp;quot; rviz:=true rtabmapviz:=false　#启动rtabmap_ros，如果窗口一闪而过，先执行rtabmap，关闭rtabmap后重新执行这句即可。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rviz　#可以查看奥比中光摄像头产生的rgb图，深度图和三维点云&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rtabmap-databaseViewer ~/.ros/rtabmap.db　#查看地图数据库&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;[ERROR] (2017-10-21 10:34:13.134) RegistrationVis.cpp:1156::computeTransformationImpl() Calibrated camera required (multi-cameras not supported). Id=221 Models=1 StereoModel=0 weight=0&lt;/p&gt;
&lt;h3 id=&quot;用速感摄像头跑rtabmap-ros&quot;&gt;&lt;a href=&quot;#用速感摄像头跑rtabmap-ros&quot; class=&quot;headerlink&quot; title=&quot;用速感摄像头跑rtabmap_ros&quot;&gt;&lt;/a&gt;用速感摄像头跑rtabmap_ros&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;rtabmap启动的node&quot;&gt;&lt;a href=&quot;#rtabmap启动的node&quot; class=&quot;headerlink&quot; title=&quot;rtabmap启动的node&quot;&gt;&lt;/a&gt;rtabmap启动的node&lt;/h3&gt;&lt;p&gt;When launching rtabmap_ros’s nodes, if you have the error error while loading shared libraries…, add the next line at the end of your ~/.bashrc to fix it:&lt;br&gt;&lt;code&gt;$ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/ros/kinetic/lib/x86_64-linux-gnu&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;\&amp;lt;!-- RGB-D Odometry --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rgbd_odometry src/RGBDOdometryNode.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- Visual SLAM (robot side) --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rtabmap src/CoreNode.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- Visualisation RTAB-Map --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rtabmapviz src/GuiNode.cpp src/GuiWrapper.cpp src/PreferencesDialogROS.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或者选择rviz用于可视化&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;rtabmap-ros-入门教程&quot;&gt;&lt;a href=&quot;#rtabmap-ros-入门教程&quot; class=&quot;headerlink&quot; title=&quot;rtabmap_ros-入门教程&quot;&gt;&lt;/a&gt;rtabmap_ros-入门教程&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.ncnynl.com/archives/201709/1992.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ROS与VSLAM入门教程-rtabmap_ros-深度相机手持建图&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.rosclub.cn/thread-25.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用投影地图,使用Handsfree进行三维建图导航&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;RTAB是什么&quot;&gt;&lt;a href=&quot;#RTAB是什么&quot; class=&quot;headerlink&quot; title=&quot;RTAB是什么&quot;&gt;&lt;/a&gt;RTAB是什么&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://remyspot.blog.51cto.com/8218746/1784914/&quot;&gt;RtabMap中文解析&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/severnvergil/p/6671879.html&quot;&gt;RTABMAP-ROS RGB-D的建图原理&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="VSLAM" scheme="http://hujun1413.github.io/categories/VSLAM/"/>
    
    
  </entry>
  
  <entry>
    <title>重要VSLAM系统</title>
    <link href="http://hujun1413.github.io/2018/01/09/VSLAM/%E9%87%8D%E8%A6%81VSLAM%E7%B3%BB%E7%BB%9F/"/>
    <id>http://hujun1413.github.io/2018/01/09/VSLAM/重要VSLAM系统/</id>
    <published>2018-01-09T10:35:26.000Z</published>
    <updated>2018-08-27T09:07:07.651Z</updated>
    
    <content type="html">&lt;h3 id=&quot;推荐入门&quot;&gt;&lt;a href=&quot;#推荐入门&quot; class=&quot;headerlink&quot; title=&quot;推荐入门&quot;&gt;&lt;/a&gt;推荐入门&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;VSLAM的子类：单目，双目/RGBD;滤波和优化&lt;/li&gt;
&lt;li&gt;清华自动化高翔，半闲居士，《视觉SLAM十四讲》&lt;/li&gt;
&lt;li&gt;四篇论文：rgbd:kinectfusion,budlefusion,qianyi.info这个网站上找robust reconstruction;lidar:cartographer(github名字,google的)，以submap的形式结合起来做出整套系统&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/xiaohu50/article/details/51592503&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kinect fusion&lt;/a&gt;:kinectfusion是微软研究院利用kinect进行三维重建的项目，深入了解该算法及其实现可以为3D重建的kinect类应用提供一定的参考。该项目本身需要比较强大的CUDA显卡支持实现实时重建。 &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/yebo92/p/6266717.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cartographer&lt;/a&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
SLAM是技术，手机端的话设计VIO，visual-inertial&lt;br&gt;RGBD是Dense Slam&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;InfiniTAM v3在8月中旬出的，可以趁热，几乎代表行业最高水准。实现可以考虑基于InfiniTAM v3，源码很适合学习，二次开发。&lt;/p&gt;
&lt;p&gt;RGBD,Lidar,imu,odom，基于这些传感器做一个组合SLAM。涉及：前端的tracking和后端的优化&lt;br&gt;多传感器融合是趋势，视觉结合imu等传感器的slam，需要了解和掌握。&lt;/p&gt;
&lt;h3 id=&quot;总结归纳&quot;&gt;&lt;a href=&quot;#总结归纳&quot; class=&quot;headerlink&quot; title=&quot;总结归纳&quot;&gt;&lt;/a&gt;总结归纳&lt;/h3&gt;&lt;p&gt;直接法的缺点：&lt;br&gt;怕模糊（需要全局曝光相机）&lt;br&gt;怕大运动（图像非凸性）&lt;br&gt;怕光照变化（灰度不变假设）&lt;br&gt;直接法的优点：&lt;br&gt;速度快&lt;/p&gt;
&lt;h3 id=&quot;视觉SLAM系统&quot;&gt;&lt;a href=&quot;#视觉SLAM系统&quot; class=&quot;headerlink&quot; title=&quot;视觉SLAM系统&quot;&gt;&lt;/a&gt;视觉SLAM系统&lt;/h3&gt;&lt;p&gt;单目SLAM:     &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;PTAM 2007 很牛逼的工作，论文中提出的关键帧以及多线程处理思想成为之后视觉slam标配；甚至能够实时运行在手机上。不少AR是基于ptam的；     &lt;/li&gt;
&lt;li&gt;DTAM 2011 direct  slam方法的鼻祖；    &lt;/li&gt;
&lt;li&gt;LSD-SLAM 2014年，将直接法应用到了半稠密的单目SLAM中。&lt;/li&gt;
&lt;li&gt;ORB-SLAM 2015年，代表着主流的特征点SLAM的一个高峰，属于稀疏建图。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;RGBD:     &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;KinectFusion 2011     &lt;/li&gt;
&lt;li&gt;RGBD-SLAM2 2014     &lt;/li&gt;
&lt;li&gt;ElasticFusion  2015&lt;/li&gt;
&lt;li&gt;RTAB-MAP  RGB-D在CPU上实现实时稠密地图&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;以我相对熟悉的单目slam为例，SLAM可分为前端和后台；前端主要负责tracking相机的姿态位置，并筛选关键帧；而后台则主要负责姿态图的优化。而优化的方法多采用G2O或者SBA。&lt;/p&gt;
&lt;h3 id=&quot;一起做RGB-D-SLAM&quot;&gt;&lt;a href=&quot;#一起做RGB-D-SLAM&quot; class=&quot;headerlink&quot; title=&quot;一起做RGB-D SLAM&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cnblogs.com/gaoxiang12/p/4719156.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一起做RGB-D SLAM&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;机器人会议：IJRR/TRO/RAM/JFD/ICRA/IROS&lt;/p&gt;
&lt;h3 id=&quot;主流的VSLAM&quot;&gt;&lt;a href=&quot;#主流的VSLAM&quot; class=&quot;headerlink&quot; title=&quot;主流的VSLAM&quot;&gt;&lt;/a&gt;主流的VSLAM&lt;/h3&gt;&lt;p&gt;视觉稀疏法：ORB-SLAM 、PTAM、MonoSLAM&lt;/p&gt;
&lt;p&gt;半稠密法：LSD-SLAM、DSO、SVO&lt;/p&gt;
&lt;p&gt;稠密法：DTAM、Elastic Fusion、Kintinous、DVO、RGBD-SLAM-V2、RTAB-MAP、MLM等&lt;/p&gt;
&lt;p&gt;激光：Hector SLAM、Gmapping、tinySLAM&lt;/p&gt;
&lt;p&gt;后端优化：g2o、ceres、GTSAM&lt;/p&gt;
&lt;p&gt;数据：RGB-D SLAM Dataset and Benchmark、KITTI Vision Benchmark Suite、The EuRoC MAV Dataset等。&lt;/p&gt;
&lt;p&gt;直接法：SVO、LSD-SLAM&lt;/p&gt;
&lt;h4 id=&quot;MonoSLAM-2003-2007&quot;&gt;&lt;a href=&quot;#MonoSLAM-2003-2007&quot; class=&quot;headerlink&quot; title=&quot;MonoSLAM(2003-2007)&quot;&gt;&lt;/a&gt;MonoSLAM(2003-2007)&lt;/h4&gt;&lt;p&gt;2007年，A.J.Davison教授提出的第一个实时的单目视觉SLAM系统。扩展卡尔曼滤波为后端，追踪前段非常稀疏的特征点。&lt;/p&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用场景很窄&lt;/li&gt;
&lt;li&gt;路标数量有限&lt;/li&gt;
&lt;li&gt;特征点稀疏非常容易丢失&lt;/li&gt;
&lt;li&gt;开发已经停止&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;PTAM-2007-2008&quot;&gt;&lt;a href=&quot;#PTAM-2007-2008&quot; class=&quot;headerlink&quot; title=&quot;PTAM(2007-2008)&quot;&gt;&lt;/a&gt;PTAM(2007-2008)&lt;/h4&gt;&lt;p&gt;2007年，Klein等人提出。基于FAST角点&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跟踪和建图的并行化&lt;/li&gt;
&lt;li&gt;第一个使用非线性优化。&lt;/li&gt;
&lt;li&gt;同时是一个增强现实的软件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缺乏回环检测和重定位&lt;/li&gt;
&lt;li&gt;场景小，跟踪容易丢失&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;ORB-SLAM-2014-2015&quot;&gt;&lt;a href=&quot;#ORB-SLAM-2014-2015&quot; class=&quot;headerlink&quot; title=&quot;ORB-SLAM(2014-2015)&quot;&gt;&lt;/a&gt;ORB-SLAM(2014-2015)&lt;/h4&gt;&lt;p&gt;2015年，代表着主流的特征点SLAM的一个高峰，属于稀疏建图。&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持单目，双目，RGB-D。&lt;/li&gt;
&lt;li&gt;围绕ORB特征进行计算，包括视觉里程计和回环检测的ORB字典。&lt;/li&gt;
&lt;li&gt;回环检测是亮点，但要加载很大的ORB字典。&lt;/li&gt;
&lt;li&gt;创新式地使用了三个线程：实时跟踪的Tracking，局部BA(小图)，全局Pose Graph的回环检测和优化(大图)。&lt;/li&gt;
&lt;li&gt;围绕特征点进行了不少的优化。保证了特征点的均匀分布，在优化位姿时使用了一种循环优化4遍以得到更多正确匹配的方法，比PTAM更为宽松的关键帧选取策略。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每副图像计算一遍ORB特征，非常耗时。&lt;/li&gt;
&lt;li&gt;三线程结构也给CPU带来了较重的负担，移植到嵌入式设备上有一定的困难。&lt;/li&gt;
&lt;li&gt;建图为稀疏特征点，没有开放存储和读取地图后进行重新定位的功能。&lt;/li&gt;
&lt;li&gt;稀疏特征点地图只能满足定位要求，无法提供导航，避障，交互等功能，因此仅用ORB-SLAM来处理定位问题太重量级。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;LSD-SLAM-2013-2014&quot;&gt;&lt;a href=&quot;#LSD-SLAM-2013-2014&quot; class=&quot;headerlink&quot; title=&quot;LSD-SLAM(2013-2014)&quot;&gt;&lt;/a&gt;LSD-SLAM(2013-2014)&lt;/h4&gt;&lt;p&gt;2014年，J.Engle等人提出。标志着单目直接法的成功应用，将直接法应用到了半稠密的单目SLAM中。&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接法是针对像素进行的。有创见地提出了像素梯度与直接法的关系，以及像素梯度与极线方向在稠密重建中的角度关系。&lt;/li&gt;
&lt;li&gt;在CPU上实现了实时半稠密场景的重建。&lt;/li&gt;
&lt;li&gt;不是利用单个像素，而是在极线上等距离取5个点，度量其SSD。用了很多精妙的手段来保证追踪的实时性和稳定性。&lt;/li&gt;
&lt;li&gt;直接法的优点：对特征缺失区域不敏感&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对相机内参和曝光非常敏感，在相机快速运动时容易丢失&lt;/li&gt;
&lt;li&gt;没有基于直接法的回环检测。因此必须依赖于特征点方法来进行回环检测，尚未摆脱特征点的计算。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;SVO-Semi-direct-Visual-Odoemtry，半直接视觉里程计-2014&quot;&gt;&lt;a href=&quot;#SVO-Semi-direct-Visual-Odoemtry，半直接视觉里程计-2014&quot; class=&quot;headerlink&quot; title=&quot;SVO(Semi-direct Visual Odoemtry，半直接视觉里程计)(2014)&quot;&gt;&lt;/a&gt;SVO(Semi-direct Visual Odoemtry，半直接视觉里程计)(2014)&lt;/h4&gt;&lt;p&gt;2014年，Forster等人提出。基于稀疏直接法的视觉里程计。特征点和直接法混合：跟踪一些关键点（角点，没有描述子），然后像直接法那样将关键点周围4×4的小块进行块匹配，来估计相机自身的运动。&lt;/p&gt;
&lt;p&gt;SVO 2.0 2016年：&lt;br&gt;C. Forster, Z. Zhang, M. Gassner, M. Werlberger, and D. Scaramuzza.&lt;br&gt;SVO 2.0: Semi-direct visual odometry for monocular and multicamera&lt;br&gt;systems. TRO, 2016.&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;速度极快。在PC平台上能达到每秒100多帧，后续的SVO 2.0能达到每秒400帧。&lt;/li&gt;
&lt;li&gt;非常适用于无人机，手持AR/VR设备这些计算平台受限场合的定位&lt;/li&gt;
&lt;li&gt;创新之处：提出了深度滤波器的概念，并推导了基于均匀－高斯混合分布的深度滤波器。&lt;/li&gt;
&lt;li&gt;代码清晰易读&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;目标应用平台是无人机的俯视相机，所以在平视相机中表现不佳&lt;/li&gt;
&lt;li&gt;为了速度和轻量化，舍弃了后端优化和回环检测，基本没有建图功能。所以位姿估计存在累计误差，丢失后不太容易进行重定位，所以SVO只是个VO。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;DSO-直接稀疏VO，2016&quot;&gt;&lt;a href=&quot;#DSO-直接稀疏VO，2016&quot; class=&quot;headerlink&quot; title=&quot;DSO(直接稀疏VO，2016)&quot;&gt;&lt;/a&gt;DSO(直接稀疏VO，2016)&lt;/h4&gt;&lt;p&gt;DSO [13]是LSD-SLAM的作者Jakob Engel放出的另一个大杀器，从其展示的实验结果看，无论是robustness，或是accuracy，或是计算速度，都完爆LSD-SLAM和ORB-SLAM，上个月又放出了code。&lt;/p&gt;
&lt;h4 id=&quot;RTAB-MAP&quot;&gt;&lt;a href=&quot;#RTAB-MAP&quot; class=&quot;headerlink&quot; title=&quot;RTAB-MAP&quot;&gt;&lt;/a&gt;RTAB-MAP&lt;/h4&gt;&lt;p&gt;RGB-D在CPU上实现实时稠密地图。&lt;/p&gt;
&lt;p&gt;支持常见的RGB-D和双目传感器，提供实时的建图和定位功能&lt;/p&gt;
&lt;p&gt;集成度较高，进行二次开发比较困难，更适合作为SLAM应用而非研究使用&lt;/p&gt;
&lt;h4 id=&quot;DVO-SLAM（RGBD）&quot;&gt;&lt;a href=&quot;#DVO-SLAM（RGBD）&quot; class=&quot;headerlink&quot; title=&quot;DVO-SLAM（RGBD）&quot;&gt;&lt;/a&gt;DVO-SLAM（RGBD）&lt;/h4&gt;&lt;p&gt;TUM的基于RGBD camera的VO方法 &lt;/p&gt;
&lt;h4 id=&quot;RGBD-SLAM-V2&quot;&gt;&lt;a href=&quot;#RGBD-SLAM-V2&quot; class=&quot;headerlink&quot; title=&quot;RGBD-SLAM-V2&quot;&gt;&lt;/a&gt;RGBD-SLAM-V2&lt;/h4&gt;&lt;h4 id=&quot;Kinect-Fusion&quot;&gt;&lt;a href=&quot;#Kinect-Fusion&quot; class=&quot;headerlink&quot; title=&quot;Kinect Fusion&quot;&gt;&lt;/a&gt;Kinect Fusion&lt;/h4&gt;&lt;h4 id=&quot;Google-Cartographer&quot;&gt;&lt;a href=&quot;#Google-Cartographer&quot; class=&quot;headerlink&quot; title=&quot;Google Cartographer&quot;&gt;&lt;/a&gt;Google Cartographer&lt;/h4&gt;&lt;h4 id=&quot;DTAM-RGBD&quot;&gt;&lt;a href=&quot;#DTAM-RGBD&quot; class=&quot;headerlink&quot; title=&quot;DTAM(RGBD)&quot;&gt;&lt;/a&gt;DTAM(RGBD)&lt;/h4&gt;&lt;h4 id=&quot;Elastic-Fusion-RGBD-2015&quot;&gt;&lt;a href=&quot;#Elastic-Fusion-RGBD-2015&quot; class=&quot;headerlink&quot; title=&quot;Elastic Fusion(RGBD 2015)&quot;&gt;&lt;/a&gt;Elastic Fusion(RGBD 2015)&lt;/h4&gt;&lt;h4 id=&quot;Kintinous-RGBD&quot;&gt;&lt;a href=&quot;#Kintinous-RGBD&quot; class=&quot;headerlink&quot; title=&quot;Kintinous(RGBD)&quot;&gt;&lt;/a&gt;Kintinous(RGBD)&lt;/h4&gt;&lt;h4 id=&quot;FAB-MAP&quot;&gt;&lt;a href=&quot;#FAB-MAP&quot; class=&quot;headerlink&quot; title=&quot;FAB-MAP&quot;&gt;&lt;/a&gt;FAB-MAP&lt;/h4&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;推荐入门&quot;&gt;&lt;a href=&quot;#推荐入门&quot; class=&quot;headerlink&quot; title=&quot;推荐入门&quot;&gt;&lt;/a&gt;推荐入门&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;VSLAM的子类：单目，双目/RGBD;滤波和优化&lt;/li&gt;
&lt;li&gt;清华自动化高翔，半闲居士，《视觉SLAM十四讲》&lt;/li&gt;
&lt;li&gt;四篇论文：rgbd:kinectfusion,budlefusion,qianyi.info这个网站上找robust reconstruction;lidar:cartographer(github名字,google的)，以submap的形式结合起来做出整套系统&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/xiaohu50/article/details/51592503&quot;&gt;kinect fusion&lt;/a&gt;:kinectfusion是微软研究院利用kinect进行三维重建的项目，深入了解该算法及其实现可以为3D重建的kinect类应用提供一定的参考。该项目本身需要比较强大的CUDA显卡支持实现实时重建。 &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/yebo92/p/6266717.html&quot;&gt;cartographer&lt;/a&gt;
    
    </summary>
    
      <category term="VSLAM" scheme="http://hujun1413.github.io/categories/VSLAM/"/>
    
    
  </entry>
  
  <entry>
    <title>生成点云</title>
    <link href="http://hujun1413.github.io/2017/12/09/VSLAM/%E7%94%9F%E6%88%90%E7%82%B9%E4%BA%91/"/>
    <id>http://hujun1413.github.io/2017/12/09/VSLAM/生成点云/</id>
    <published>2017-12-09T10:35:26.000Z</published>
    <updated>2018-08-27T09:06:55.624Z</updated>
    
    <content type="html">&lt;h2 id=&quot;深度摄像机的原理&quot;&gt;&lt;a href=&quot;#深度摄像机的原理&quot; class=&quot;headerlink&quot; title=&quot;深度摄像机的原理&quot;&gt;&lt;/a&gt;深度摄像机的原理&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/bingoplus/article/details/56667475&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RGBD-SLAM（一）——深度摄像机&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;一-使用速感M3获取RGB和Depth&quot;&gt;&lt;a href=&quot;#一-使用速感M3获取RGB和Depth&quot; class=&quot;headerlink&quot; title=&quot;一. 使用速感M3获取RGB和Depth&quot;&gt;&lt;/a&gt;一. 使用速感M3获取RGB和Depth&lt;/h2&gt;&lt;p&gt;用速感的demo获取彩色和深度图像，用cv::Mat存储后可以存成图片&lt;/p&gt;
&lt;h2 id=&quot;二-相机内参标定&quot;&gt;&lt;a href=&quot;#二-相机内参标定&quot; class=&quot;headerlink&quot; title=&quot;二. 相机内参标定&quot;&gt;&lt;/a&gt;二. 相机内参标定&lt;/h2&gt;&lt;h3 id=&quot;深度相机内参的标定&quot;&gt;&lt;a href=&quot;#深度相机内参的标定&quot; class=&quot;headerlink&quot; title=&quot;深度相机内参的标定&quot;&gt;&lt;/a&gt;深度相机内参的标定&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/honyniu/article/details/51004397&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; 相机标定(Camera calibration)原理&lt;/a&gt;&lt;br&gt;根据相机坐标系到图像坐标系之间的关系，得到的转换是由相机的内参K确定的。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/yangdashi888/article/details/51356385&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;内参、外参、畸变参数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;再根据世界坐标系到相机坐标系，得到世界坐标系到像素坐标系之间的转换，而这个转换就是相机内参 K，相机外参 R 和 t，以及畸变参数 D 经过一系列的矩阵变换得到。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.360doc.com/content/15/1220/10/9200790_521674713.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kinect深度图和RGB的标定配准&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://lib.csdn.net/article/computervison/58972?knId=1818&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【OpenCV】双目测距（双目标定、双目校正和立体匹配）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/Jessica-jie/p/6602286.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;双目标定&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;深度摄像机的标定思路：用红外光照射棋盘格，遮住红外发射器，得到两个深度摄像头的红外图，再用&lt;strong&gt;双目标定&lt;/strong&gt;的方法对深度摄像头进行标定。进而得到深度摄像机的内参。&lt;/p&gt;
&lt;h3 id=&quot;深度图和RGB的配准（如果不给深度图上色，可以暂时不需要配准）&quot;&gt;&lt;a href=&quot;#深度图和RGB的配准（如果不给深度图上色，可以暂时不需要配准）&quot; class=&quot;headerlink&quot; title=&quot;深度图和RGB的配准（如果不给深度图上色，可以暂时不需要配准）&quot;&gt;&lt;/a&gt;深度图和RGB的配准（如果不给深度图上色，可以暂时不需要配准）&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/cv-pr/p/5769617.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深度图像配准（Registration）原理&lt;/a&gt;&lt;br&gt;配准的目的就是想让深度图和彩色图重合在一起，即是将深度图像的图像坐标系转换到彩色图像的图像坐标系下。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/carson2005/article/details/38757379&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;图像配准&lt;/a&gt;指的是获取的两幅或多幅图像进行匹配、叠加的过程。最终需要在变换空间中寻找一种最有效的变换，这种变换能够使两幅图像之间在某种意义上达到匹配&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/jiaojialulu/article/details/53154045&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kinect 2.0 SDK学习笔记（四）–深度图与彩色图对齐&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;配准的思路：根据深度摄像机和rgb相机的内参，再由同一棋盘格在两个相机坐标系上的位置计算出两个摄像头之间的R,T变换关系。从而得到rgb相机上的像素点对应于深度摄像头的像素点，再知道rgb上每个像素点的深度信息&lt;/p&gt;
&lt;h3 id=&quot;根据相机的外参（相机相对于世界坐标系的位姿R-T）得到三维点云的世界坐标&quot;&gt;&lt;a href=&quot;#根据相机的外参（相机相对于世界坐标系的位姿R-T）得到三维点云的世界坐标&quot; class=&quot;headerlink&quot; title=&quot;根据相机的外参（相机相对于世界坐标系的位姿R,T）得到三维点云的世界坐标&quot;&gt;&lt;/a&gt;根据相机的外参（相机相对于世界坐标系的位姿R,T）得到三维点云的世界坐标&lt;/h3&gt;&lt;p&gt;世界坐标系：用机器人中心建立的坐标系&lt;/p&gt;
&lt;h2 id=&quot;三-由深度图生成点云&quot;&gt;&lt;a href=&quot;#三-由深度图生成点云&quot; class=&quot;headerlink&quot; title=&quot;三. 由深度图生成点云&quot;&gt;&lt;/a&gt;三. 由深度图生成点云&lt;/h2&gt;&lt;h3 id=&quot;深度图转点云原理&quot;&gt;&lt;a href=&quot;#深度图转点云原理&quot; class=&quot;headerlink&quot; title=&quot;深度图转点云原理&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cnblogs.com/cv-pr/p/5719350.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深度图转点云原理&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;代码：利用Kinect深度图像生成三维点云&quot;&gt;&lt;a href=&quot;#代码：利用Kinect深度图像生成三维点云&quot; class=&quot;headerlink&quot; title=&quot;代码：利用Kinect深度图像生成三维点云&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://blog.csdn.net/u012700322/article/details/51821249&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;代码：利用Kinect深度图像生成三维点云&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;参考：结合彩色图和深度图创建点云（OpenCV-OpenNI-PCL）&quot;&gt;&lt;a href=&quot;#参考：结合彩色图和深度图创建点云（OpenCV-OpenNI-PCL）&quot; class=&quot;headerlink&quot; title=&quot;参考：结合彩色图和深度图创建点云（OpenCV+OpenNI+PCL）&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://blog.csdn.net/kh1445291129/article/details/44636685&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考：结合彩色图和深度图创建点云（OpenCV+OpenNI+PCL）&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;源码demo见savePoint项目 或者 高博的slambook的ch13章的pointcloud_mapping.cpp&lt;/p&gt;
&lt;p&gt;读取彩色和深度图像，利用摄像头的内参生成三维的点云&lt;/p&gt;
&lt;h2 id=&quot;三-用生成的点云识别并去除地面&quot;&gt;&lt;a href=&quot;#三-用生成的点云识别并去除地面&quot; class=&quot;headerlink&quot; title=&quot;三. 用生成的点云识别并去除地面&quot;&gt;&lt;/a&gt;三. 用生成的点云识别并去除地面&lt;/h2&gt;&lt;h2 id=&quot;四-将去除地面的点云视作障碍物，压到平面上和激光的栅格地图结合&quot;&gt;&lt;a href=&quot;#四-将去除地面的点云视作障碍物，压到平面上和激光的栅格地图结合&quot; class=&quot;headerlink&quot; title=&quot;四. 将去除地面的点云视作障碍物，压到平面上和激光的栅格地图结合&quot;&gt;&lt;/a&gt;四. 将去除地面的点云视作障碍物，压到平面上和激光的栅格地图结合&lt;/h2&gt;&lt;p&gt;地面如果是斜面如何处理？&lt;br&gt;但如果障碍物在机器人的高度之上，则可以认为机器人可以通过，并不是障碍物。&lt;/p&gt;
&lt;h3 id=&quot;点云转换成octoMap&quot;&gt;&lt;a href=&quot;#点云转换成octoMap&quot; class=&quot;headerlink&quot; title=&quot;点云转换成octoMap&quot;&gt;&lt;/a&gt;点云转换成octoMap&lt;/h3&gt;&lt;h3 id=&quot;octoMap再转换成grid-map&quot;&gt;&lt;a href=&quot;#octoMap再转换成grid-map&quot; class=&quot;headerlink&quot; title=&quot;octoMap再转换成grid_map&quot;&gt;&lt;/a&gt;octoMap再转换成grid_map&lt;/h3&gt;&lt;p&gt;目前，将自己生成的点云利用维达的grid_map demo，rviz中看不到正确的grid_map。调整参数后成功看到正确的grid_map&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;深度摄像机的原理&quot;&gt;&lt;a href=&quot;#深度摄像机的原理&quot; class=&quot;headerlink&quot; title=&quot;深度摄像机的原理&quot;&gt;&lt;/a&gt;深度摄像机的原理&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/bingoplus/article/details/56667475&quot;&gt;RGBD-SLAM（一）——深度摄像机&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="VSLAM" scheme="http://hujun1413.github.io/categories/VSLAM/"/>
    
    
  </entry>
  
  <entry>
    <title>OctoMap</title>
    <link href="http://hujun1413.github.io/2017/12/09/VSLAM/Octomap/"/>
    <id>http://hujun1413.github.io/2017/12/09/VSLAM/Octomap/</id>
    <published>2017-12-09T10:35:26.000Z</published>
    <updated>2018-08-27T09:06:25.492Z</updated>
    
    <content type="html">&lt;h3 id=&quot;octomap-Reference&quot;&gt;&lt;a href=&quot;#octomap-Reference&quot; class=&quot;headerlink&quot; title=&quot;octomap Reference&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://octomap.github.io/octomap/doc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;octomap Reference&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;SLAM拾萃-1-：octomap&quot;&gt;&lt;a href=&quot;#SLAM拾萃-1-：octomap&quot; class=&quot;headerlink&quot; title=&quot;SLAM拾萃(1)：octomap&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.cnblogs.com/gaoxiang12/p/5041142.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SLAM拾萃(1)：octomap&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/hujun1413/octomap_tutor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hujun1413基于高博的修改&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;octomap的网页见：&lt;a href=&quot;https://octomap.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://octomap.github.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;它的github源码在：&lt;a href=&quot;https://github.com/OctoMap/octomap&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/OctoMap/octomap&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;它还有ROS下的安装方式：&lt;a href=&quot;http://wiki.ros.org/octomap&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://wiki.ros.org/octomap&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;编译octovis提示链接出错&quot;&gt;&lt;a href=&quot;#编译octovis提示链接出错&quot; class=&quot;headerlink&quot; title=&quot;编译octovis提示链接出错&quot;&gt;&lt;/a&gt;编译octovis提示链接出错&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CMakeFiles/octovis.dir/src/ViewerGui.cpp.o: In function `octomap::OcTreeBaseImpl&amp;lt;octomap::ColorOcTreeNode, octomap::AbstractOccupancyOcTree&amp;gt;::writeData(std::ostream&amp;amp;) const&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ViewerGui.cpp:(.text._ZNK7octomap14OcTreeBaseImplINS_15ColorOcTreeNodeENS_23AbstractOccupancyOcTreeEE9writeDataERSo[_ZNK7octomap14OcTreeBaseImplINS_15ColorOcTreeNodeENS_23AbstractOccupancyOcTreeEE9writeDataERSo]+0xe): undefined reference to `octomap::ColorOcTreeNode::writeValue(std::ostream&amp;amp;) const&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_36420239/article/details/79488181&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;编译octovis提示链接出错的解决措施&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cd octomap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout v1.6.9   //校验为/opt/ros/indigo/share/octpmap/octomap-config-version文件中的自己的版本&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;重新编译即可&lt;/p&gt;
&lt;h4 id=&quot;正确安装octomap&quot;&gt;&lt;a href=&quot;#正确安装octomap&quot; class=&quot;headerlink&quot; title=&quot;正确安装octomap&quot;&gt;&lt;/a&gt;正确安装octomap&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone https://github.com/OctoMap/octomap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd octomap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout v1.6.9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cmake ..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;点云转换为不带颜色的octomap&quot;&gt;&lt;a href=&quot;#点云转换为不带颜色的octomap&quot; class=&quot;headerlink&quot; title=&quot;点云转换为不带颜色的octomap&quot;&gt;&lt;/a&gt;点云转换为不带颜色的octomap&lt;/h3&gt;&lt;p&gt;将点云中的点一个一个地插入到OcTree中&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;octomap::OcTree tree( 0.05 );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for (auto p:cloud.points)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 将点云里的点插入到octomap中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tree.updateNode( octomap::point3d(p.x, p.y, p.z), true );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 更新octomap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tree.updateInnerOccupancy();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 存储octomap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tree.writeBinary( output_file );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cout&amp;lt;&amp;lt;&amp;quot;done.&amp;quot;&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;点云转换成带颜色的octomap&quot;&gt;&lt;a href=&quot;#点云转换成带颜色的octomap&quot; class=&quot;headerlink&quot; title=&quot;点云转换成带颜色的octomap&quot;&gt;&lt;/a&gt;点云转换成带颜色的octomap&lt;/h3&gt;&lt;p&gt;将点云经过一个变换后，插入到ColorOcTree中&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;octomap::ColorOcTree tree( 0.05 ); //全局map&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;octomap::Pointcloud cloud_octo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for (auto p:temp-&amp;gt;points)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cloud_octo.push_back( p.x, p.y, p.z );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tree.insertPointCloud( cloud_octo, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        octomap::point3d( pose(0,3), pose(1,3), pose(2,3) ) );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for (auto p:temp-&amp;gt;points)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tree.integrateNodeColor( p.x, p.y, p.z, p.r, p.g, p.b );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tree.updateInnerOccupancy();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tree.write( &amp;quot;./data/map.ot&amp;quot; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//带颜色的octomap，调用integrateNodeColor来混合颜色。后缀名改成了.ot文件。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cout&amp;lt;&amp;lt;&amp;quot;done.&amp;quot;&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;octomap-Reference&quot;&gt;&lt;a href=&quot;#octomap-Reference&quot; class=&quot;headerlink&quot; title=&quot;octomap Reference&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://octomap.github.io/octomap/doc/&quot;&gt;octomap Reference&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;SLAM拾萃-1-：octomap&quot;&gt;&lt;a href=&quot;#SLAM拾萃-1-：octomap&quot; class=&quot;headerlink&quot; title=&quot;SLAM拾萃(1)：octomap&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.cnblogs.com/gaoxiang12/p/5041142.html&quot;&gt;SLAM拾萃(1)：octomap&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/hujun1413/octomap_tutor&quot;&gt;hujun1413基于高博的修改&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="VSLAM" scheme="http://hujun1413.github.io/categories/VSLAM/"/>
    
    
  </entry>
  
  <entry>
    <title>move_base源码学习</title>
    <link href="http://hujun1413.github.io/2017/11/25/Navigation/move_base%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    <id>http://hujun1413.github.io/2017/11/25/Navigation/move_base源码学习/</id>
    <published>2017-11-25T08:25:26.000Z</published>
    <updated>2018-08-27T09:05:51.528Z</updated>
    
    <content type="html">&lt;h3 id=&quot;move-base代码学习一&quot;&gt;&lt;a href=&quot;#move-base代码学习一&quot; class=&quot;headerlink&quot; title=&quot;move_base代码学习一&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cnblogs.com/shhu1993/p/6323699.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;move_base代码学习一&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/david_han008/article/details/72032898&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;move_base导航的源码心得&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;源码架构分析&quot;&gt;&lt;a href=&quot;#源码架构分析&quot; class=&quot;headerlink&quot; title=&quot;源码架构分析&quot;&gt;&lt;/a&gt;源码架构分析&lt;/h3&gt;&lt;h4 id=&quot;move-base&quot;&gt;&lt;a href=&quot;#move-base&quot; class=&quot;headerlink&quot; title=&quot;move_base&quot;&gt;&lt;/a&gt;move_base&lt;/h4&gt;&lt;p&gt;move_base 提供的是框架，在move_base 中是通过nav_core 中规定的planner 与 recovery_behavior 的基类的接口进行调用。与具体的实现方法隔离开来。&lt;/p&gt;
&lt;p&gt;planThread是全局路径规划的线程，在有新的目标到达时等需要进行全局规划时被唤醒，用于规划出一条全局路径。&lt;/p&gt;
&lt;p&gt;executeCycle是局部路径规划的工作函数，其中会调用computeVelocityCommands来规划出当前机器人的速度&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MoveBase::MoveBase(tf::TransformListener&amp;amp; tf)　&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//MoveBase类的构造函数，读取配置参数，加载所选择的插件，开启global　planner的线程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; MoveBase::reconfigureCB(move_base::MoveBaseConfig &amp;amp;config, &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; level)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//动态更改节点参数的回调函数，用于修改参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; MoveBase::goalCB(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; geometry_msgs::PoseStamped::ConstPtr&amp;amp; goal)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//In ROS goal callback, wrapping the PoseStamped in the action message and re-sending to the server.将接收到的目标重新发送给action_goal server&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; MoveBase::clearCostmapWindows(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; size_x, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; size_y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//clear the planner&#39;s costmap and the controller&#39;s costmap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; MoveBase::clearCostmapsService(std_srvs::Empty::Request &amp;amp;req, std_srvs::Empty::Response &amp;amp;resp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//a service for clearing the costmaps&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; MoveBase::planService(nav_msgs::GetPlan::Request &amp;amp;req, nav_msgs::GetPlan::Response &amp;amp;resp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//a service for getting a plan&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MoveBase::~MoveBase()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//MoveBase类的析构函数，清除并关闭线程，退出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; MoveBase::makePlan(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; geometry_msgs::PoseStamped&amp;amp; goal, &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;geometry_msgs::PoseStamped&amp;gt;&amp;amp; plan)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//global planner function, 调用planner_-&amp;gt;makePlan，这里即调用bool NavfnROS::makePlan(const geometry_msgs::PoseStamped&amp;amp; start, const geometry_msgs::PoseStamped&amp;amp; goal, std::vector&amp;lt;geometry_msgs::PoseStamped&amp;gt;&amp;amp; plan)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; MoveBase::planThread()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//global planner thread，会被executeCb,executeCycle唤醒或挂起&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; MoveBase::executeCb(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; move_base_msgs::MoveBaseGoalConstPtr&amp;amp; move_base_goal)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//MoveBaseActionServer，每次goal到来都被调用,如果有新目标到来而被抢占则唤醒planThread线程处理，否则为取消目标并挂起处理线程。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; MoveBase::executeCycle(geometry_msgs::PoseStamped&amp;amp; goal, &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;geometry_msgs::PoseStamped&amp;gt;&amp;amp; global_plan)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//local planner 核心工作函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; MoveBase::loadRecoveryBehaviors(ros::NodeHandle node)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//加载指定的void MoveBase::loadDefaultRecoveryBehaviors()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; MoveBase::loadDefaultRecoveryBehaviors()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//加载默认的void MoveBase::loadDefaultRecoveryBehaviors()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; MoveBase::resetState()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//状态重置，速度归零&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;navfn-ros&quot;&gt;&lt;a href=&quot;#navfn-ros&quot; class=&quot;headerlink&quot; title=&quot;navfn_ros&quot;&gt;&lt;/a&gt;navfn_ros&lt;/h3&gt;&lt;p&gt;为navigation的全局规划器，接受costmap生成的 global costmap 规划出从起始点到目标点的路径，为local_planner 作出参考。&lt;/p&gt;
&lt;p&gt;所有的global planner都必须实现nav_core::BaseGlobalPlanner定义的接口(即纯虚函数)&lt;/p&gt;
&lt;p&gt;makePlan用于规划出全局路径，调用calcNavFnDijkstra和getPlanFromPotential。calcNavFnDijkstra会调用propNavFnDijkstra的Dijkstra算法来计算全局路径。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NavfnROS::initialize(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; name, costmap_2d::Costmap2DROS* costmap_ros)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; NavfnROS::makePlan(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; geometry_msgs::PoseStamped&amp;amp; start, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; geometry_msgs::PoseStamped&amp;amp; goal, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; tolerance, &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;geometry_msgs::PoseStamped&amp;gt;&amp;amp; plan)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//global planner function&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; NavFn::calcNavFnDijkstra(&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; atStart)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//调用propNavFnDijkstra，找到全局规划路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; NavFn::propNavFnDijkstra(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; cycles, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; atStart)	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//main propagation function，Dijkstra method, breadth-first&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; NavFn::calcPath(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; *st)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Path construction,Find gradient at array points, interpolate path, Use step size of pathStep, usually 0.5 pixel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; NavfnROS::getPlanFromPotential(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; geometry_msgs::PoseStamped&amp;amp; goal, &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;geometry_msgs::PoseStamped&amp;gt;&amp;amp; plan)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//从potential中选出最佳的下一个pose，调用了calcPath&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;base-local-planner&quot;&gt;&lt;a href=&quot;#base-local-planner&quot; class=&quot;headerlink&quot; title=&quot;base_local_planner&quot;&gt;&lt;/a&gt;base_local_planner&lt;/h3&gt;&lt;p&gt;所有的local planner都必须实现nav_core::BaseLocalPlanner定义的接口(纯虚函数)&lt;/p&gt;
&lt;p&gt;为navigation 的局部规划器，接受costmap 生成的local costmap 规划出速度。&lt;/p&gt;
&lt;p&gt;setPlan()用于设置之前全局规划得到的全局路径，然后转换成相对于机器人位置的路径之后，调用findBestPath来得到当前的速度。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Given the current position, orientation, and velocity of the robot, compute velocity commands to send to the base&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;computeVelocityCommands&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(geometry_msgs::Twist &amp;amp;cmd_vel)&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initialize&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; name, tf::TransformListener *tf, costmap_2d::Costmap2DROS *costmap_ros)&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isGoalReached&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setPlan&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt; geometry_msgs::PoseStamped &amp;gt; &amp;amp;plan)&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; TrajectoryPlannerROS::computeVelocityCommands(geometry_msgs::Twist&amp;amp; cmd_vel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//计算得到当前的速度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Trajectory TrajectoryPlanner::findBestPath(tf::Stamped&amp;lt;tf::Pose&amp;gt; global_pose, tf::Stamped&amp;lt;tf::Pose&amp;gt; global_vel, tf::Stamped&amp;lt;tf::Pose&amp;gt;&amp;amp; drive_velocities)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//given the current state of the robot, find a good trajectory&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;clear-costmap-recovery&quot;&gt;&lt;a href=&quot;#clear-costmap-recovery&quot; class=&quot;headerlink&quot; title=&quot;clear_costmap_recovery&quot;&gt;&lt;/a&gt;clear_costmap_recovery&lt;/h3&gt;&lt;p&gt;所有的recovery behaviors都必须实现nav_core::RecoveryBehavior定义的接口(纯虚函数)&lt;/p&gt;
&lt;p&gt;规定move_base 行为集合中处理异常情况的行为，可以定义多种恢复行为的插件。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initialize&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; name, tf::TransformListener *tf, costmap_2d::Costmap2DROS *global_costmap, costmap_2d::Costmap2DROS *local_costmap)&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;runBehavior&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//executeCycle中的CLEARING模式，调用runBehavior，是把local,global costmap在reset_distance半径之外的free，occupied都清除，变成NO_INFORMATION。不对static layer操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;rotate-recovery&quot;&gt;&lt;a href=&quot;#rotate-recovery&quot; class=&quot;headerlink&quot; title=&quot;rotate_recovery&quot;&gt;&lt;/a&gt;rotate_recovery&lt;/h3&gt;&lt;p&gt;他的作用只是在原地旋转，这样costmap就会自己更新，mark或者clear一点的值&lt;/p&gt;
&lt;h3 id=&quot;costmap-2d&quot;&gt;&lt;a href=&quot;#costmap-2d&quot; class=&quot;headerlink&quot; title=&quot;costmap_2d&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://blog.csdn.net/sonictl/article/details/51518492&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;costmap_2d&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;使用分层的机制，每层的信息都加到costmap_2d::LayeredCostmap进行管理。&lt;br&gt;可看作为navigation的输入处理器。不同的传感器输入的数据差异很大（激光雷达 &amp;amp; RGBD-camera）通过costmap_2d ， 不同的数据被处理成统一的格式：栅格地图，权值用经过概率方法处理过的，表示空间中障碍物，未知与安全区域。生成出来的costmap则是planner的输入。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/mllearnertj/article/details/74838981&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;costmap_2d中类的解析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;StaticLayer：订阅map消息&lt;br&gt;ObstacleLayer：监听Laser回调&lt;br&gt;inflation_layer：Given a distance, compute a cost.&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; Costmap2DROS::reconfigureCB(costmap_2d::Costmap2DConfig &amp;amp;config, &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; level)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//动态更改节点参数的回调函数，用于修改参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; Costmap2DROS::mapUpdateLoop(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; frequency)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//根据频率更新costmap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; Costmap2DROS::updateMap()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; LayeredCostmap::updateMap(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; robot_x, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; robot_y, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; robot_yaw)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(*plugin)-&amp;gt;updateCosts(costmap_, x0, y0, xn, yn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//cost 值的更新，每个plugin都实现这个函数,是一份costmap在不同的plugin下的更新，costmap是一样的，cost值是叠加上去的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; StaticLayer::updateCosts(costmap_2d::Costmap2D&amp;amp; master_grid, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; min_i, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; min_j, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; max_i, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; max_j)或者obstacle_layer,inflation_layer等插件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;dwa-planner&quot;&gt;&lt;a href=&quot;#dwa-planner&quot; class=&quot;headerlink&quot; title=&quot;dwa_planner&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://wiki.ros.org/dwa_local_planner&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dwa_planner&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.bubuko.com/infodetail-720132.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ROS局部规划模块分析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/x_r_su/article/details/53393872&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ROS Navigation—–dwa_local_planner（DWA）简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/david_han008/article/details/72171602&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;agv 路径规划move_base&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/heyijia0327/article/details/44983551&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器人局部避障的动态窗口法(dynamic window approach)&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SimpleTrajectoryGenerator::generateTrajectory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//生成轨迹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DWAPlanner::findBestPath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//given the current state of the robot, find a good trajectory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SimpleTrajectoryGenerator::initialise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//初始化路径生成器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SimpleScoredSamplingPlanner::findBestTrajectory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SimpleTrajectoryGenerator::nextTrajectory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SimpleTrajectoryGenerator::generateTrajectory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SimpleScoredSamplingPlanner::scoreTrajectory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;base_local_planner::LocalPlannerLimits* limits的min_vel和max_vel之间平均采样vsamples次，作为sample_params_数组的值&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;问题记录&quot;&gt;&lt;a href=&quot;#问题记录&quot; class=&quot;headerlink&quot; title=&quot;问题记录&quot;&gt;&lt;/a&gt;问题记录&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;导航中是如何使用costmap_2d的&lt;/li&gt;
&lt;li&gt;所需设置的参数及含义&lt;/li&gt;
&lt;li&gt;几个线程及功能：&lt;ul&gt;
&lt;li&gt;move_base.cpp的line 86，planner&lt;em&gt;thread&lt;/em&gt;：做全局规划的线程&lt;/li&gt;
&lt;li&gt;主线程，ros::spin()&lt;/li&gt;
&lt;li&gt;move_base，MoveBase::executeCb，MoveBaseActionServer&lt;/li&gt;
&lt;li&gt;MoveBase::reconfigureCB，dynamic_reconfigure::Server&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;make_plan，MoveBase::planService，private_nh.advertiseService&lt;/li&gt;
&lt;li&gt;clear_costmaps，MoveBase::clearCostmapsService，private_nh.advertiseService&lt;/li&gt;
&lt;li&gt;提供两种方式send goal目标位置的信息&lt;br&gt;SimpleActionServer(可以追踪移动到目标过程的状态信息，到了没有，是不是没有plan，取消了etc)&lt;br&gt;Subscribe topic(move_base_simple/goal),直接发布这个topic的信息，不会有目标执行过程中的反馈信息&lt;br&gt;提供的service&lt;br&gt;~make_plan(只会提供plan该怎么走的位置信息，不会使机器人移动)&lt;br&gt;~clear_unknown_space(告诉move_base清楚机器人周围的unknown space)&lt;br&gt;~clear_costmaps(告诉move_base清楚costmap中的障碍物信息，可能导致撞到障碍物)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;global local　整合&lt;/li&gt;
&lt;li&gt;有了plan怎么得速度&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;move-base代码学习一&quot;&gt;&lt;a href=&quot;#move-base代码学习一&quot; class=&quot;headerlink&quot; title=&quot;move_base代码学习一&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cnblogs.com/shhu1993/p/6323699.html&quot;&gt;move_base代码学习一&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/david_han008/article/details/72032898&quot;&gt;move_base导航的源码心得&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;源码架构分析&quot;&gt;&lt;a href=&quot;#源码架构分析&quot; class=&quot;headerlink&quot; title=&quot;源码架构分析&quot;&gt;&lt;/a&gt;源码架构分析&lt;/h3&gt;&lt;h4 id=&quot;move-base&quot;&gt;&lt;a href=&quot;#move-base&quot; class=&quot;headerlink&quot; title=&quot;move_base&quot;&gt;&lt;/a&gt;move_base&lt;/h4&gt;&lt;p&gt;move_base 提供的是框架，在move_base 中是通过nav_core 中规定的planner 与 recovery_behavior 的基类的接口进行调用。与具体的实现方法隔离开来。&lt;/p&gt;
&lt;p&gt;planThread是全局路径规划的线程，在有新的目标到达时等需要进行全局规划时被唤醒，用于规划出一条全局路径。&lt;/p&gt;
&lt;p&gt;executeCycle是局部路径规划的工作函数，其中会调用computeVelocityCommands来规划出当前机器人的速度&lt;br&gt;
    
    </summary>
    
      <category term="Navigation" scheme="http://hujun1413.github.io/categories/Navigation/"/>
    
    
      <category term="move_base" scheme="http://hujun1413.github.io/tags/move-base/"/>
    
  </entry>
  
  <entry>
    <title>机器人导航框架</title>
    <link href="http://hujun1413.github.io/2017/11/09/Navigation/%E5%AF%BC%E8%88%AA/"/>
    <id>http://hujun1413.github.io/2017/11/09/Navigation/导航/</id>
    <published>2017-11-09T10:35:26.000Z</published>
    <updated>2018-08-27T09:09:14.513Z</updated>
    
    <content type="html">&lt;h2 id=&quot;所需硬件&quot;&gt;&lt;a href=&quot;#所需硬件&quot; class=&quot;headerlink&quot; title=&quot;所需硬件&quot;&gt;&lt;/a&gt;所需硬件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;RGBD摄像头（Kinet或Xtion）/激光雷达&lt;/li&gt;
&lt;li&gt;里程计，即编码器，或者叫码盘&lt;/li&gt;
&lt;li&gt;上位机，装ubuntu ROS&lt;/li&gt;
&lt;li&gt;下位机，给轮子发速度，返回码盘数据给上位机&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;速度接口&quot;&gt;&lt;a href=&quot;#速度接口&quot; class=&quot;headerlink&quot; title=&quot;速度接口&quot;&gt;&lt;/a&gt;速度接口&lt;/h2&gt;总的来说，上位机发布topic “cmd_vel”，将速度平滑等处理后发送给下位机，然后下位机底盘解算将速度发给每个轮子。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;上位机发送速度的接口&quot;&gt;&lt;a href=&quot;#上位机发送速度的接口&quot; class=&quot;headerlink&quot; title=&quot;上位机发送速度的接口&quot;&gt;&lt;/a&gt;上位机发送速度的接口&lt;/h3&gt;&lt;p&gt;输出都是一个topic “cmd_vel”&lt;br&gt;里面的数据类型为 &lt;a href=&quot;http://docs.ros.org/api/geometry_msgs/html/msg/Twist.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;geometry_msgs/Twist&lt;/a&gt; 这个数据类型表示的是3d空间中的速度，2d的移动机器人只会用到三个值：linear.x，linear.y与angular.z，分别表示水平分速度，垂直分速度，与角速度。&lt;br&gt;‘[2.0, 0.0, 0.0]’’[0.0,0.0,1.8]’表示：以2.0大小的线速度和1.8大小的角速度开始移动。&lt;/p&gt;
&lt;h3 id=&quot;下位机底盘运动学解算&quot;&gt;&lt;a href=&quot;#下位机底盘运动学解算&quot; class=&quot;headerlink&quot; title=&quot;下位机底盘运动学解算&quot;&gt;&lt;/a&gt;下位机底盘运动学解算&lt;/h3&gt;&lt;p&gt;将一个描述一个平面刚体的三个分速度映射成驱动部分的速度&lt;br&gt;分为：差动底盘（turtlebot那种两轮差速来实现转弯）和全向底盘这两种&lt;/p&gt;
&lt;p&gt;曾经实现过的三轮解算为全向轮，四轮解算为麦伦&lt;/p&gt;
&lt;h3 id=&quot;下位机发送速度给轮子&quot;&gt;&lt;a href=&quot;#下位机发送速度给轮子&quot; class=&quot;headerlink&quot; title=&quot;下位机发送速度给轮子&quot;&gt;&lt;/a&gt;下位机发送速度给轮子&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;发送频率：看板子性能&lt;/li&gt;
&lt;li&gt;速度平滑：过大的加速减速，不定的发送频率会导致运动的不理想，解决办法：上位机在速度接口这边执行一个平滑的过程，turtlebot中给出了一个非常好的&lt;a href=&quot;http://wiki.ros.org/yocs_velocity_smoother&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;速度插值&lt;/a&gt;的包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;里程计接口&quot;&gt;&lt;a href=&quot;#里程计接口&quot; class=&quot;headerlink&quot; title=&quot;里程计接口&quot;&gt;&lt;/a&gt;里程计接口&lt;/h2&gt;&lt;p&gt;总的来说，下位机发送topic “odom”&lt;br&gt;里面的数据类型为 &lt;a href=&quot;http://docs.ros.org/api/nav_msgs/html/msg/Odometry.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nav_msgs/Odometry&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Header header&lt;br&gt;string child_frame_id&lt;br&gt;geometry_msgs/PoseWithCovariance pose&lt;br&gt;geometry_msgs/TwistWithCovariance twist&lt;/p&gt;
&lt;h3 id=&quot;下位机采集里程计数据，发送里程计接口给上位机&quot;&gt;&lt;a href=&quot;#下位机采集里程计数据，发送里程计接口给上位机&quot; class=&quot;headerlink&quot; title=&quot;下位机采集里程计数据，发送里程计接口给上位机&quot;&gt;&lt;/a&gt;下位机采集里程计数据，发送里程计接口给上位机&lt;/h3&gt;&lt;p&gt;下位机得到各个里程计的位移，然后逆运动学解算，得到机器人中心相对坐标“原点”的坐标，发送当前位姿geometry_msgs/Pose和速度geometry_msgs/Twist给上位机&lt;/p&gt;
&lt;p&gt;教程在这儿，&lt;a href=&quot;http://wiki.ros.org/navigation/Tutorials/RobotSetup/Odom&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://wiki.ros.org/navigation/Tutorials/RobotSetup/Odom&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;上位机接收里程计接口&quot;&gt;&lt;a href=&quot;#上位机接收里程计接口&quot; class=&quot;headerlink&quot; title=&quot;上位机接收里程计接口&quot;&gt;&lt;/a&gt;上位机接收里程计接口&lt;/h3&gt;&lt;p&gt;上位机从里程计接口得到机器人当前的位姿和速度&lt;/p&gt;
&lt;h2 id=&quot;图像接口&quot;&gt;&lt;a href=&quot;#图像接口&quot; class=&quot;headerlink&quot; title=&quot;图像接口&quot;&gt;&lt;/a&gt;图像接口&lt;/h2&gt;&lt;p&gt;一般rgbd-camera与激光雷达都有相应的sensor driver 提供，roslaunch相应文件就可以了。&lt;br&gt;传感器一般在消息的 header中都需要相应的传感器采集坐标系，对于固定的传感器使用 &lt;a href=&quot;http://wiki.ros.org/tf#static_transform_publisher&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://wiki.ros.org/tf#static_transform_publisher&lt;/a&gt; tf中的static_transform_publisher 给定传感器与机器人中心相对位姿就可以了。&lt;/p&gt;
&lt;h2 id=&quot;SLAM及navigaion-ROS-工具&quot;&gt;&lt;a href=&quot;#SLAM及navigaion-ROS-工具&quot; class=&quot;headerlink&quot; title=&quot;SLAM及navigaion ROS 工具&quot;&gt;&lt;/a&gt;SLAM及navigaion ROS 工具&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://openslam.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;OpenSLAM&lt;/a&gt;上面有几乎所有主流slam方法的C++/C实现，ROS的gmapping就是调用的这个上面的代码。不管是视觉还是激光雷达算法都非常丰富。&lt;/p&gt;
&lt;p&gt;路径规划：move_base:，作为navigation的逻辑核心。它实现了一个供上层节点调用的action 接口（通过&lt;a href=&quot;http://wiki.ros.org/actionlib&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;actionlib&lt;/a&gt; 实现），即给定坐标信息与相应坐标位置，执行相应的安全导航动作。对于下层控制器，之前说过了输出为cmd_vel 2d速度。 它规定了这个navigation的行为。&lt;/p&gt;
&lt;p&gt;建图：gmapping/hector_slam，从激光扫描数据建图&lt;/p&gt;
&lt;p&gt;定位：amcl，利用map和激光数据进行定位&lt;/p&gt;
&lt;h3 id=&quot;导航规划&quot;&gt;&lt;a href=&quot;#导航规划&quot; class=&quot;headerlink&quot; title=&quot;导航规划&quot;&gt;&lt;/a&gt;导航规划&lt;/h3&gt;&lt;p&gt;navigation metapackage：一般输入为激光雷达（使用rgbd-camera 效果不佳）与里程计数据，输出为cmd_vel 机器人在2d平面上的速度。与之类似的是hector_navigation。这一部分主要解决安全路径的规划问题。&lt;/p&gt;
&lt;p&gt;costmap_2d ：这一部分可看作为navigation的输入处理器。不同的传感器输入的数据差异很大（激光雷达 &amp;amp; RGBD-camera）通过costmap_2d ， 不同的数据被处理成统一的格式：栅格地图，权值用经过概率方法处理过的，表示空间中障碍物，未知与安全区域。生成出来的costmap则是planner的输入。&lt;br&gt;global_planner：为navigation的全局规划器，接受costmap生成的 global costmap规划出从起始点到目标点的路径，为local_planner 作出参考。&lt;br&gt;local_planner：为navigation的局部规划器，接受costmap 生成的local costmap 规划出速度。&lt;br&gt;recovery_behavior : 规定move_base 行为集合中处理异常情况的行为&lt;/p&gt;
&lt;p&gt;nav_core: 这个包里面就包含了global_planner，local_planner 与 recovery_behavior的基类的头文件。但是极其重要。&lt;br&gt;在ROS navigation中，move_base提供的是框架，在move_base 中是通过nav_core中规定的planner与recovery_behavior 的基类的接口进行调用。与具体的实现方法隔离开来。而具体采用的方法由pluginlib根据不同参数导入。这样的实现方法使得navigation的可定制性大大增加。像base_local_planner 中就实现了两种局部路径规划方法，global_planner 实现了A* 与Dijkstra两种方法，在navigation_experimental 中还有更多这样的实现。这赋予了这个框架很大的灵活性。通过不同的配置方法可以让navigation适应很多不同的任务。&lt;/p&gt;
&lt;h3 id=&quot;定位部分&quot;&gt;&lt;a href=&quot;#定位部分&quot; class=&quot;headerlink&quot; title=&quot;定位部分&quot;&gt;&lt;/a&gt;定位部分&lt;/h3&gt;&lt;p&gt;定位模块作为规划层的输入与参考数据所存在。而对于ROS navigation 体系而言，因为它先天的模块间通讯方式实现了模块间的完全解耦，所以对于导航规划层而言（具体就是move_base 这个node），什么定位方法，静态还是动态的地图，对于导航层内部几乎没有区别。&lt;br&gt;navigation metapackage中就有了为仿真器环境下的定位工具包fake_localization：用于把仿真器中的位姿（就是直接把odom 变换成map）估计直接变换成关于全局地图的定位，简化定位部分；&lt;br&gt;amcl:适应性蒙特卡洛定位方法，在base_scan的topic上利用激光数据来定位&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;所需硬件&quot;&gt;&lt;a href=&quot;#所需硬件&quot; class=&quot;headerlink&quot; title=&quot;所需硬件&quot;&gt;&lt;/a&gt;所需硬件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;RGBD摄像头（Kinet或Xtion）/激光雷达&lt;/li&gt;
&lt;li&gt;里程计，即编码器，或者叫码盘&lt;/li&gt;
&lt;li&gt;上位机，装ubuntu ROS&lt;/li&gt;
&lt;li&gt;下位机，给轮子发速度，返回码盘数据给上位机
    
    </summary>
    
      <category term="Navigation" scheme="http://hujun1413.github.io/categories/Navigation/"/>
    
    
  </entry>
  
  <entry>
    <title>LLVM的编程技巧</title>
    <link href="http://hujun1413.github.io/2017/01/15/LLVM/3.LLVM%E7%9A%84%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    <id>http://hujun1413.github.io/2017/01/15/LLVM/3.LLVM的编程技巧/</id>
    <published>2017-01-15T10:35:26.000Z</published>
    <updated>2018-08-27T08:54:14.692Z</updated>
    
    <content type="html">&lt;h3 id=&quot;先获取模块中的每个函数，再获取每个函数中的每个BasicBlock，再获取每个BasicBlock中的每条instruction（最常用）&quot;&gt;&lt;a href=&quot;#先获取模块中的每个函数，再获取每个函数中的每个BasicBlock，再获取每个BasicBlock中的每条instruction（最常用）&quot; class=&quot;headerlink&quot; title=&quot;先获取模块中的每个函数，再获取每个函数中的每个BasicBlock，再获取每个BasicBlock中的每条instruction（最常用）&quot;&gt;&lt;/a&gt;先获取模块中的每个函数，再获取每个函数中的每个BasicBlock，再获取每个BasicBlock中的每条instruction（最常用）&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Module::iterator FunIt = mod-&amp;gt;begin() ; FunIt != mod-&amp;gt;end() ; ++FunIt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Function::iterator b = FunIt-&amp;gt;begin(), e = FunIt-&amp;gt;end(); b != e; ++b)  //获取每个函数中的basic block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cout&amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;Basic block name=&quot;&lt;/span&gt; &amp;lt;&amp;lt; b-&amp;gt;getName().str() &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (BasicBlock::iterator i = b-&amp;gt;begin(), e = b-&amp;gt;end(); i != e; ++i)  //获取每个basic block中的instruction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            outs() &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Instruction* inst = &amp;amp;(*i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;获取Module中的每一个Function&quot;&gt;&lt;a href=&quot;#获取Module中的每一个Function&quot; class=&quot;headerlink&quot; title=&quot;获取Module中的每一个Function&quot;&gt;&lt;/a&gt;获取Module中的每一个Function&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Module::iterator FunIt = mod-&amp;gt;begin() ; FunIt != mod-&amp;gt;end() ; ++FunIt) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Function* F = &amp;amp;(*FunIt);  //获取模块中的每一个函数&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;直接获取Function中的instruction&quot;&gt;&lt;a href=&quot;#直接获取Function中的instruction&quot; class=&quot;headerlink&quot; title=&quot;直接获取Function中的instruction&quot;&gt;&lt;/a&gt;直接获取Function中的instruction&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (inst_iterator I = inst_begin(F), E = inst_end(F); I != E; ++I)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Instruction* inst = &amp;amp;(*I);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    outs() &amp;lt;&amp;lt; inst-&amp;gt;getName() &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;    &quot;&lt;/span&gt; &amp;lt;&amp;lt; inst-&amp;gt;getOpcode() &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取Function中的每个BasicBlock，直接打印整个BasicBlock的内容&quot;&gt;&lt;a href=&quot;#获取Function中的每个BasicBlock，直接打印整个BasicBlock的内容&quot; class=&quot;headerlink&quot; title=&quot;获取Function中的每个BasicBlock，直接打印整个BasicBlock的内容&quot;&gt;&lt;/a&gt;获取Function中的每个BasicBlock，直接打印整个BasicBlock的内容&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Function::iterator i = FunIt-&amp;gt;begin(), e = FunIt-&amp;gt;end(); i != e; ++i) &amp;#123;  //获取每个函数中的basic block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cout&amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;Basic block name=&quot;&lt;/span&gt; &amp;lt;&amp;lt; i-&amp;gt;getName().str() &amp;lt;&amp;lt; std::endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    outs() &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;;   //打印basic blocks的名字和内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;声明一个函数&quot;&gt;&lt;a href=&quot;#声明一个函数&quot; class=&quot;headerlink&quot; title=&quot;声明一个函数&quot;&gt;&lt;/a&gt;声明一个函数&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//先创造函数的类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IntegerType *IntTy32 = IntegerType::get(mod-&amp;gt;getContext(), 32);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;std::vector&amp;lt;Type*&amp;gt;FuncTy_args;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FuncTy_args.push_back(IntTy32);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FuncTy_args.push_back(IntTy32);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FunctionType* FuncTy = FunctionType::get(/*Result=*/Type::getVoidTy(mod-&amp;gt;getContext()),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/*Params=*/FuncTy_args,/*isVarArg=*/&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//再声明函数，设置链接类型，函数名，调用惯例和属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Function* func = mod-&amp;gt;getFunction(&lt;span class=&quot;string&quot;&gt;&quot;PrintWrite&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!func)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Function* func =Function::Create(/*Type=*/FuncTy, /*Linkage=*/GlobalValue::ExternalLinkage,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;									 /*Name=*/&lt;span class=&quot;string&quot;&gt;&quot;PrintWrite&quot;&lt;/span&gt;,mod);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	func-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;CallingConv(CallingConv::C);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AttrListPtr func_Add_PAL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Attributes(func_Add_PAL);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;调用一个函数&quot;&gt;&lt;a href=&quot;#调用一个函数&quot; class=&quot;headerlink&quot; title=&quot;调用一个函数&quot;&gt;&lt;/a&gt;调用一个函数&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//BasicBlock::iterator i   i是BasicBlock迭代器，通过Instruction* inst = &amp;amp;(*i)获取指令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//在i指令后插入一条函数调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;++i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CallInst *newcall;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;std::vector&amp;lt;Value*&amp;gt; para;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Constant *content = CreateWords(mod, &lt;span class=&quot;string&quot;&gt;&quot;sum outputted by Hujun:\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;para.push_back(content);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;newcall = CallInst::Create(&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;, para1, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, i);  //在i之前插入一条函数调用，&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;是函数的指针&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;newcall-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;CallingConv(CallingConv::C);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;newcall-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;TailCall(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--i;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建一个指向字符串的指针，若已存在则直接返回指针&quot;&gt;&lt;a href=&quot;#创建一个指向字符串的指针，若已存在则直接返回指针&quot; class=&quot;headerlink&quot; title=&quot;创建一个指向字符串的指针，若已存在则直接返回指针&quot;&gt;&lt;/a&gt;创建一个指向字符串的指针，若已存在则直接返回指针&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Constant *CreateWords(Module *mod, string str)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//look up the word &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; global value table&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	string mystr = &lt;span class=&quot;string&quot;&gt;&quot;%%&quot;&lt;/span&gt; + str;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	GlobalValue *my_name = mod-&amp;gt;getNamedValue(mystr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (my_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		GlobalVariable *my_global = cast &amp;lt;GlobalVariable&amp;gt; (my_name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ConstantInt* const_int = ConstantInt::get(mod-&amp;gt;getContext(), APInt(32, 0));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		std::vector&amp;lt;Constant*&amp;gt; const_ptr_indices;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		const_ptr_indices.push_back(const_int);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		const_ptr_indices.push_back(const_int);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Constant* const_ptr = ConstantExpr::getGetElementPtr(my_global, const_ptr_indices);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		//ConstantExpr - a constant value that is initialized with an expression using other constant values.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; const_ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; not find it, &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; create a new word &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; global value table&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ArrayType *ArrayTy = ArrayType::get(IntegerType::get(mod-&amp;gt;getContext(), 8), str.length()+1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	GlobalVariable *global_name = new GlobalVariable(*mod, ArrayTy, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;									GlobalValue::PrivateLinkage, 0, mystr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	global_name-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Alignment(1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//Constant Definitions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Constant* const_array = ConstantDataArray::getString(mod-&amp;gt;getContext(), str, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //This method constructs a CDS and initializes it with a text string.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ConstantInt* const_int = ConstantInt::get(mod-&amp;gt;getContext(), APInt(32, 0));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	std::vector&amp;lt;Constant*&amp;gt; const_ptr_indices;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	const_ptr_indices.push_back(const_int);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	const_ptr_indices.push_back(const_int);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Constant* const_ptr = ConstantExpr::getGetElementPtr(global_name, const_ptr_indices);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//Global Variable Definitions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	global_name-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Initializer(const_array);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; const_ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;itoa用sprintf替代&quot;&gt;&lt;a href=&quot;#itoa用sprintf替代&quot; class=&quot;headerlink&quot; title=&quot;itoa用sprintf替代&quot;&gt;&lt;/a&gt;itoa用sprintf替代&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int nValue = 80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;char* szBuffer = (char *)malloc(20);//分配动态内存&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;memset(szBuffer, 0, 20);    //内存块初始化&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sprintf(szBuffer, &lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;, nValue);//整数转化为字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;free(szBuffer);        //释放动态分配的内存&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;llvm中调用printf&quot;&gt;&lt;a href=&quot;#llvm中调用printf&quot; class=&quot;headerlink&quot; title=&quot;llvm中调用printf&quot;&gt;&lt;/a&gt;llvm中调用printf&lt;/h3&gt;&lt;p&gt;直接创建一个string类型的字串，然后获取它的地址Value*，调用printf的Function*即可。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Function *&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt; = mod-&amp;gt;getFunction(&lt;span class=&quot;string&quot;&gt;&quot;printf&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CallInst *newcall;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	std::vector&amp;lt;Value*&amp;gt; para;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Constant *content = CreateWords(mod, &lt;span class=&quot;string&quot;&gt;&quot;output something\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    para.push_back(content);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	++i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	newcall = CallInst::Create(&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;, para, &lt;span class=&quot;string&quot;&gt;&quot;printRand&quot;&lt;/span&gt;, i);  //CallInst represents a &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; call，在i指令之前插入一条func_record&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	newcall-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;CallingConv(CallingConv::C);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	newcall-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;TailCall(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	--i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;从Value-得到int类型数据&quot;&gt;&lt;a href=&quot;#从Value-得到int类型数据&quot; class=&quot;headerlink&quot; title=&quot;从Value*得到int类型数据&quot;&gt;&lt;/a&gt;从Value*得到int类型数据&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Value *oneInt = %add = add nsw i32 %call, %total.06&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ConstantInt* CI = dyn_cast&amp;lt;ConstantInt&amp;gt;(oneInt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Value *ten_int = ConstantInt::get(mod-&amp;gt;getContext(), APInt(32, 10));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ConstantInt* CI = dyn_cast&amp;lt;ConstantInt&amp;gt;(ten_int))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    outs() &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;转换成功\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (CI-&amp;gt;getBitWidth() &amp;lt;= 64)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int constIntValue = CI-&amp;gt;getSExtValue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        outs() &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;整型值为：&quot;&lt;/span&gt; &amp;lt;&amp;lt; constIntValue &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;;    //这里输出10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    outs() &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;转换失败！\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;从Value得到string字符串&quot;&gt;&lt;a href=&quot;#从Value得到string字符串&quot; class=&quot;headerlink&quot; title=&quot;从Value得到string字符串&quot;&gt;&lt;/a&gt;从Value得到string字符串&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;有getName方法时：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;StringRef oriValue = Funtion.getName(); //Funtion的名字，类型为StringRef&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;string mystr = oriValue.str();  //StringRef::str: Get the contents as an std::string.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;无getName方法时（比如要打印整条指令的内容时）：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Instruction *MyIn = &amp;amp;(*it_BB);  //MyIn为一条指令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;string mystr(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;raw_string_ostream stream(mystr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stream &amp;lt;&amp;lt; *MyIn;  //重载实现了&amp;lt;&amp;lt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mystr = stream.str()  //raw_string_ostream::str: Flushes the stream contents to the target string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      //and returns the string&lt;span class=&quot;string&quot;&gt;&#39;s reference.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;从Value得到char-字符串-由string转char-得到&quot;&gt;&lt;a href=&quot;#从Value得到char-字符串-由string转char-得到&quot; class=&quot;headerlink&quot; title=&quot;从Value得到char* 字符串(由string转char*得到)&quot;&gt;&lt;/a&gt;从Value得到char* 字符串(由string转char*得到)&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;string getString = MyIn-&amp;gt;getName().str();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;char mystr[100];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;strcpy(mystr, getString.c_str());  //mystr中为函数名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/*extern int strcmp(const char *s1,const char *s2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当s1&amp;lt;s2时，返回为负数；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当s1==s2时，返回值= 0；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当s1&amp;gt;s2时，返回正数。*/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(strcmp(mystr, &lt;span class=&quot;string&quot;&gt;&quot;printf&quot;&lt;/span&gt;) == 0)  //判断mystr是否等于&lt;span class=&quot;string&quot;&gt;&quot;printf&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;调用外部的C函数（生成静态库）&quot;&gt;&lt;a href=&quot;#调用外部的C函数（生成静态库）&quot; class=&quot;headerlink&quot; title=&quot;调用外部的C函数（生成静态库）&quot;&gt;&lt;/a&gt;调用外部的C函数（生成静态库）&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/dlite/article/details/44118865&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LLVM IR和C/C++函数相互调用时的注意事项&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;生成静态库.a:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gcc -c &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;Int.c &lt;span class=&quot;comment&quot;&gt;#生成printInt.o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ar -cr libmyprint.a &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;Int.o &lt;span class=&quot;comment&quot;&gt;#printInt.o生成静态库libmyprint.a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./RandSum ../../hello.bc  &lt;span class=&quot;comment&quot;&gt;#插桩生成.bc文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;llc update.bc -o update.s &lt;span class=&quot;comment&quot;&gt;#将插桩后得到的.bc变为.s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gcc -c update.s -o update.o &lt;span class=&quot;comment&quot;&gt;#将.s变为.o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gcc update.o ../../libmyprint.a -o update &lt;span class=&quot;comment&quot;&gt;#将.o与静态库.a生成可执行文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./update  &lt;span class=&quot;comment&quot;&gt;#运行可执行文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;获取指令的操作数和返回值&quot;&gt;&lt;a href=&quot;#获取指令的操作数和返回值&quot; class=&quot;headerlink&quot; title=&quot;获取指令的操作数和返回值&quot;&gt;&lt;/a&gt;获取指令的操作数和返回值&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;int operand_num = inst-&amp;gt;getNumOperands();           //获得所有的操作数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;outs() &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;总共&quot;&lt;/span&gt; &amp;lt;&amp;lt; operand_num &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;个操作数&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(int i=0; i&amp;lt;operand_num; ++i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    outs() &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;第&quot;&lt;/span&gt; &amp;lt;&amp;lt; i+1 &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;个操作数是：&quot;&lt;/span&gt; &amp;lt;&amp;lt; *inst-&amp;gt;getOperand(i) &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;;    //&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;的第2个操作数是字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;outs() &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;返回值是：&quot;&lt;/span&gt;  &amp;lt;&amp;lt; *inst &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;\n\n&quot;&lt;/span&gt;;   //返回值就是指令本身&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取函数的参数的位置和类型&quot;&gt;&lt;a href=&quot;#获取函数的参数的位置和类型&quot; class=&quot;headerlink&quot; title=&quot;获取函数的参数的位置和类型&quot;&gt;&lt;/a&gt;获取函数的参数的位置和类型&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(myfunc-&amp;gt;isVarArg())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    outs() &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;可变参数\n&quot;&lt;/span&gt;;   //如&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(i8*,...)，则是可变参数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(Function::arg_iterator start = myfunc-&amp;gt;arg_begin(), end = myfunc-&amp;gt;arg_end(); start != end; ++start)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    outs() &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;argument:&quot;&lt;/span&gt; &amp;lt;&amp;lt; *start &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;;   //获得参数类型和位置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //如&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(i8*,...)  则输出argument:i8* %0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;replaceAllUsesWith&quot;&gt;&lt;a href=&quot;#replaceAllUsesWith&quot; class=&quot;headerlink&quot; title=&quot;replaceAllUsesWith&quot;&gt;&lt;/a&gt;replaceAllUsesWith&lt;/h3&gt;&lt;p&gt;replaceUsesOfWith&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;先获取模块中的每个函数，再获取每个函数中的每个BasicBlock，再获取每个BasicBlock中的每条instruction（最常用）&quot;&gt;&lt;a href=&quot;#先获取模块中的每个函数，再获取每个函数中的每个BasicBlock，再获取每个BasicBlock中的每条instruction（最常用）&quot; class=&quot;headerlink&quot; title=&quot;先获取模块中的每个函数，再获取每个函数中的每个BasicBlock，再获取每个BasicBlock中的每条instruction（最常用）&quot;&gt;&lt;/a&gt;先获取模块中的每个函数，再获取每个函数中的每个BasicBlock，再获取每个BasicBlock中的每条instruction（最常用）&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Module::iterator FunIt = mod-&amp;gt;begin() ; FunIt != mod-&amp;gt;end() ; ++FunIt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Function::iterator b = FunIt-&amp;gt;begin(), e = FunIt-&amp;gt;end(); b != e; ++b)  //获取每个函数中的basic block&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cout&amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;Basic block name=&quot;&lt;/span&gt; &amp;lt;&amp;lt; b-&amp;gt;getName().str() &amp;lt;&amp;lt; endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (BasicBlock::iterator i = b-&amp;gt;begin(), e = b-&amp;gt;end(); i != e; ++i)  //获取每个basic block中的instruction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            outs() &amp;lt;&amp;lt; *i &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Instruction* inst = &amp;amp;(*i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="LLVM" scheme="http://hujun1413.github.io/categories/LLVM/"/>
    
    
  </entry>
  
  <entry>
    <title>ROS-Kobuki</title>
    <link href="http://hujun1413.github.io/2016/11/14/ROS/2.ROS-Kobuki/"/>
    <id>http://hujun1413.github.io/2016/11/14/ROS/2.ROS-Kobuki/</id>
    <published>2016-11-14T12:35:26.000Z</published>
    <updated>2018-08-27T08:52:32.665Z</updated>
    
    <content type="html">&lt;h2 id=&quot;First-Run&quot;&gt;&lt;a href=&quot;#First-Run&quot; class=&quot;headerlink&quot; title=&quot;First Run&quot;&gt;&lt;/a&gt;First Run&lt;/h2&gt;&lt;p&gt;we added a special random&lt;/p&gt;
&lt;p&gt;walker mode, which you can activate on startup:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Turn on Kobuki.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Within in the first 3 seconds press and hold button B0 for 2 seconds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;LED2 should* start blinking and Kobuki wandering around.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Status LED: Indicates Kobuki’s status&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Green: Kobuki is turned on and battery at high voltage level&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Orange: On Low battery voltage level (please charge soon)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Green blinking: On Battery charging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Off: Kobuki is turned off.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;安装Kobuki&quot;&gt;&lt;a href=&quot;#安装Kobuki&quot; class=&quot;headerlink&quot; title=&quot;安装Kobuki&quot;&gt;&lt;/a&gt;安装Kobuki&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-kobuki ros-indigo-kobuki-core&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get purge ros-indigo-kobuki ros-indigo-kobuki-core   //卸载&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get autoremove&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Install-Kobuki-Soft-Deb&quot;&gt;&lt;a href=&quot;#Install-Kobuki-Soft-Deb&quot; class=&quot;headerlink&quot; title=&quot;Install Kobuki Soft Deb&quot;&gt;&lt;/a&gt;Install Kobuki Soft Deb&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-kobuki-soft&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch kobuki_softnode full.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rviz rviz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch kobuki_keyop keyop.launch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Navigation-Demo&quot;&gt;&lt;a href=&quot;#Navigation-Demo&quot; class=&quot;headerlink&quot; title=&quot;Navigation Demo&quot;&gt;&lt;/a&gt;Navigation Demo&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-turtlebot-apps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-navigation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-yujin-maps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch kobuki_softapps nav_demo.launch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roscore&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun kobuki_ftdi create_udev_rules  &lt;span class=&quot;comment&quot;&gt;#使能USB连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch kobuki_node minimal.launch --screen&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;检查topic&quot;&gt;&lt;a href=&quot;#检查topic&quot; class=&quot;headerlink&quot; title=&quot;检查topic&quot;&gt;&lt;/a&gt;检查topic&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic list &lt;span class=&quot;comment&quot;&gt;#检查topic&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;node_name/sensor/: Continuous streams of the sensor’s data (note that /odom and /joints_states are remapped by default, since they are widley used at the highest level/namespace)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;node_name/events/: If a sensor changes its state, e.g. bumper pressed/released, the new state is published here.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;node_name/commands/: Use these topics to make Kobuki do things like switch on LEDs, playing sounds and driving around.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;node_name/debug/: Outputs detailed info about a lot of Kobuki’s internals.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;##检查sensors&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; /mobile_base/events/bumper&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#保险杠按压（撞击）为1，未撞击为0，左前0，正前1，右前2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#bumper: 0 state: 1   代表左前的保险杠被撞击&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; /mobile_base/events/wheel_drop &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#左轮0，右轮1；轮子抬起1，压着1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#state: 0 wheel: 1   代表左轮为抬起状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; /mobile_base/sensors/imu_data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;:&lt;span class=&quot;string&quot;&gt;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;orientation: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  x: 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  y: 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  z: -0.923076016497&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  w: 0.3846175604&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;orientation_covariance: [1.7976931348623157e+308, 0.0, 0.0, 0.0, 1.7976931348623157e+308, 0.0, 0.0, 0.0, 0.05]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;angular_velocity: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  x: 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  y: 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  z: -0.00872664625997     左转为正，右转为负&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;angular_velocity_covariance: [1.7976931348623157e+308, 0.0, 0.0, 0.0, 1.7976931348623157e+308, 0.0, 0.0, 0.0, 0.05]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;linear_acceleration: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  x: 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  y: 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  z: 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;linear_acceleration_covariance: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Trigger-stuff（触发）&quot;&gt;&lt;a href=&quot;#Trigger-stuff（触发）&quot; class=&quot;headerlink&quot; title=&quot;Trigger stuff（触发）&quot;&gt;&lt;/a&gt;Trigger stuff（触发）&lt;/h2&gt;&lt;h3 id=&quot;led操作-：0-off-1-green-2-orange-3-red&quot;&gt;&lt;a href=&quot;#led操作-：0-off-1-green-2-orange-3-red&quot; class=&quot;headerlink&quot; title=&quot;led操作 ：0 - off 1 - green 2 - orange 3 - red&quot;&gt;&lt;/a&gt;led操作 ：0 - off 1 - green 2 - orange 3 - red&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic pub /mobile_base/commands/led1 kobuki_msgs/Led &lt;span class=&quot;string&quot;&gt;&quot;value: 1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic pub /mobile_base/commands/led2 kobuki_msgs/Led &lt;span class=&quot;string&quot;&gt;&quot;value: 2&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;声音操作-：0-turn-on-1-turn-off-2-recharge-start-3-press-button-4-error-sound-5-start-cleaning-6-cleaning-end&quot;&gt;&lt;a href=&quot;#声音操作-：0-turn-on-1-turn-off-2-recharge-start-3-press-button-4-error-sound-5-start-cleaning-6-cleaning-end&quot; class=&quot;headerlink&quot; title=&quot;声音操作 ：0 - turn on   1 - turn off   2 - recharge start   3 - press button   4 - error sound   5 - start cleaning   6 - cleaning end&quot;&gt;&lt;/a&gt;声音操作 ：0 - turn on   1 - turn off   2 - recharge start   3 - press button   4 - error sound   5 - start cleaning   6 - cleaning end&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic pub /mobile_base/commands/sound kobuki_msgs/Sound &lt;span class=&quot;string&quot;&gt;&quot;value: 6&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;速度发布&quot;&gt;&lt;a href=&quot;#速度发布&quot; class=&quot;headerlink&quot; title=&quot;速度发布&quot;&gt;&lt;/a&gt;速度发布&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic pub /mobile_base/commands/velocity geometry_msgs/Twist &lt;span class=&quot;string&quot;&gt;&quot;linear:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  x: 1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  y: 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  z: 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;angular:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  x: 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  y: 0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  z: 0.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic pub -r 10 /mobile_base/commands/velocity geometry_msgs/Twist &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;linear: &amp;#123;x: 0.2, y: 0, z: 0&amp;#125;, angular: &amp;#123;x: 0, y: 0, z: 0&amp;#125;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic pub -1 /mobile_base/commands/velocity geometry_msgs/Twist &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;linear: &amp;#123;x: 0.2, y: 0, z: 0&amp;#125;, angular: &amp;#123;x: 0, y: 0, z: 0&amp;#125;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic pub -1 /mobile_base/commands/velocity geometry_msgs/Twist &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Robot-Monitor-GUI&quot;&gt;&lt;a href=&quot;#Robot-Monitor-GUI&quot; class=&quot;headerlink&quot; title=&quot;Robot Monitor GUI&quot;&gt;&lt;/a&gt;Robot Monitor GUI&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-rqt-robot-monitor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rqt_robot_monitor rqt_robot_monitor&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;键盘控制&quot;&gt;&lt;a href=&quot;#键盘控制&quot; class=&quot;headerlink&quot; title=&quot;键盘控制&quot;&gt;&lt;/a&gt;键盘控制&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roscore&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun kobuki_ftdi create_udev_rules  &lt;span class=&quot;comment&quot;&gt;#使能USB连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch kobuki_node minimal.launch --screen  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch kobuki_keyop safe_keyop.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch kobuki_keyop keyop.launch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Testing-Hardware&quot;&gt;&lt;a href=&quot;#Testing-Hardware&quot; class=&quot;headerlink&quot; title=&quot;Testing Hardware&quot;&gt;&lt;/a&gt;Testing Hardware&lt;/h2&gt;&lt;h3 id=&quot;测试电源：&quot;&gt;&lt;a href=&quot;#测试电源：&quot; class=&quot;headerlink&quot; title=&quot;测试电源：&quot;&gt;&lt;/a&gt;测试电源：&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-kobuki-qtestsuite &lt;span class=&quot;comment&quot;&gt;#安装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;. /opt/ros/indigo/setup.bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kobuki_qtestsuite&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;测试数字量输出口：&quot;&gt;&lt;a href=&quot;#测试数字量输出口：&quot; class=&quot;headerlink&quot; title=&quot;测试数字量输出口：&quot;&gt;&lt;/a&gt;测试数字量输出口：&lt;/h3&gt;&lt;h3 id=&quot;安装Kobuki源码：&quot;&gt;&lt;a href=&quot;#安装Kobuki源码：&quot; class=&quot;headerlink&quot; title=&quot;安装Kobuki源码：&quot;&gt;&lt;/a&gt;安装Kobuki源码：&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir ~/kobuki&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/kobuki&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wstool init src -j5 https://raw.github.com/yujinrobot/yujin_tools/master/rosinstalls/indigo/kobuki.rosinstall&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosdep install --from-paths src -i -y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;catkin_make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; ~/kobuki/devel/setup.bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rospack profile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中遇到问题，解决方案见&lt;a href=&quot;http://answers.ros.org/question/244937/cant-install-kobuki/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ROS Answer&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/kobuki/src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wstool &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; ecl_core --git https://github.com/stonier/ecl_core --version=release/0.61-indigo-kinetic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wstool &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; ecl_navigation --git https://github.com/stonier/ecl_navigation --version=release/0.60-indigo-kinetic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wstool update ecl_core&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wstool update ecl_navigation&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;catkin_make –pkg kobuki_keyop&lt;/p&gt;
&lt;p&gt;编译键盘控制&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;First-Run&quot;&gt;&lt;a href=&quot;#First-Run&quot; class=&quot;headerlink&quot; title=&quot;First Run&quot;&gt;&lt;/a&gt;First Run&lt;/h2&gt;&lt;p&gt;we added a special random&lt;/p&gt;
&lt;p&gt;walker mode, which you can activate on startup:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Turn on Kobuki.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Within in the first 3 seconds press and hold button B0 for 2 seconds.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;LED2 should* start blinking and Kobuki wandering around.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="ROS" scheme="http://hujun1413.github.io/categories/ROS/"/>
    
    
  </entry>
  
  <entry>
    <title>LLVM的函数</title>
    <link href="http://hujun1413.github.io/2016/11/14/LLVM/2.LLVM%E7%9A%84%E5%87%BD%E6%95%B0/"/>
    <id>http://hujun1413.github.io/2016/11/14/LLVM/2.LLVM的函数/</id>
    <published>2016-11-14T10:35:26.000Z</published>
    <updated>2018-08-27T08:54:25.295Z</updated>
    
    <content type="html">&lt;h3 id=&quot;参考文档&quot;&gt;&lt;a href=&quot;#参考文档&quot; class=&quot;headerlink&quot; title=&quot;参考文档&quot;&gt;&lt;/a&gt;参考文档&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/opensource/os-createcompilerllvm1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用LLVM框架创建一个工作编译器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;通过在doxygen的Classes中的Class Index来查找Function等类和里面的函数，然后点击右上角的List of all members&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Module&quot;&gt;&lt;a href=&quot;#Module&quot; class=&quot;headerlink&quot; title=&quot;Module&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://llvm.org/doxygen/classllvm_1_1Module-members.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Module&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;LLVM 模块类是其他所有 LLVM IR 对象的顶级容器。LLVM 模块类能够包含全局变量、函数、该模块所依赖的其他模块和符号表等对象的列表。这里将提供了 LLVM 模块的构造函数：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;explicit Module(StringRef ModuleID, LLVMContext&amp;amp; C);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 创建Context&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LLVMContext&amp;amp; context = getGlobalContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 创建Module&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Module* module = new Module(&lt;span class=&quot;string&quot;&gt;&quot;test&quot;&lt;/span&gt;, context);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Function&quot;&gt;&lt;a href=&quot;#Function&quot; class=&quot;headerlink&quot; title=&quot;Function&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://llvm.org/doxygen/classllvm_1_1Function-members.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Function&lt;/a&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//构造一个函数的类型：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FunctionType * FunctionType::get(Type* Result, ArrayRef&amp;lt; Type* &amp;gt; Params, bool isVarArg)	[static]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//声明一个函数(先判断是否存在，若不存在则create)：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;static Function* llvm::Function::Create(FunctionType* Ty, LinkageTypes 	Linkage, const Twine&amp;amp; N = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Module* M = nullptr)	[inline, static]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void llvm::Function::&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;CallingConv(CallingConv::ID CC)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Attributes(const AttrListPtr &amp;amp;attrs) //与4.0的文档不一样&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//4.0文档中是：Function::&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;Attributes(AttributeSet Attrs)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Instruction&quot;&gt;&lt;a href=&quot;#Instruction&quot; class=&quot;headerlink&quot; title=&quot;Instruction&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://llvm.org/doxygen/classllvm_1_1Instruction-members.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Instruction&lt;/a&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//返回Instruction所在的BasicBlock*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;BasicBlock* llvm::Instruction::getParent()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Loop&quot;&gt;&lt;a href=&quot;#Loop&quot; class=&quot;headerlink&quot; title=&quot;Loop&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://llvm.org/doxygen/classllvm_1_1Loop-members.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Loop&lt;/a&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//Return &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; the specified basic block is &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; this loop.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bool llvm::LoopBase&amp;lt; BlockT, LoopT &amp;gt;::contains	(	const BlockT * 	BB	)	const&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考文档&quot;&gt;&lt;a href=&quot;#参考文档&quot; class=&quot;headerlink&quot; title=&quot;参考文档&quot;&gt;&lt;/a&gt;参考文档&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/opensource/os-createcompilerllvm1/&quot;&gt;使用LLVM框架创建一个工作编译器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;通过在doxygen的Classes中的Class Index来查找Function等类和里面的函数，然后点击右上角的List of all members&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="LLVM" scheme="http://hujun1413.github.io/categories/LLVM/"/>
    
    
  </entry>
  
  <entry>
    <title>虚拟机中编译Linux内核</title>
    <link href="http://hujun1413.github.io/2016/11/13/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%AD%E7%BC%96%E8%AF%91Linux%E5%86%85%E6%A0%B8/"/>
    <id>http://hujun1413.github.io/2016/11/13/操作系统/虚拟机中编译Linux内核/</id>
    <published>2016-11-13T12:35:26.000Z</published>
    <updated>2018-08-27T08:53:23.199Z</updated>
    
    <content type="html">&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/zhangnn5/article/details/6766693&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/zhangnn5/article/details/6766693&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;下载Linux源码&quot;&gt;&lt;a href=&quot;#下载Linux源码&quot; class=&quot;headerlink&quot; title=&quot;下载Linux源码&quot;&gt;&lt;/a&gt;下载Linux源码&lt;/h3&gt;&lt;p&gt;安装编译内核所需软件包&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apt-get install build-essential kernel-package libncurses5-dev fakeroot 选择Y&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在官网下载源码包：&lt;br&gt;&lt;a href=&quot;http://www.kernel.org/pub/linux/kernel/v3.x/linux-1.1.1.tar.xz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.kernel.org/pub/linux/kernel/v3.x/linux-1.1.1.tar.xz&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;配置内核&quot;&gt;&lt;a href=&quot;#配置内核&quot; class=&quot;headerlink&quot; title=&quot;配置内核&quot;&gt;&lt;/a&gt;配置内核&lt;/h3&gt;&lt;h4 id=&quot;放到-usr-src文件夹下，解压：&quot;&gt;&lt;a href=&quot;#放到-usr-src文件夹下，解压：&quot; class=&quot;headerlink&quot; title=&quot;放到/usr/src文件夹下，解压：&quot;&gt;&lt;/a&gt;放到/usr/src文件夹下，解压：&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; /usr/src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar -Jxvf linux-3.19.3.tar.xz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;编译配置内核&quot;&gt;&lt;a href=&quot;#编译配置内核&quot; class=&quot;headerlink&quot; title=&quot;编译配置内核&quot;&gt;&lt;/a&gt;编译配置内核&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; linux-3.19.3  (&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt;命令进入源码目录)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make mrproper （得到源代码后,将其净化）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp /boot/config-&lt;span class=&quot;string&quot;&gt;&#39;uname -r&#39;&lt;/span&gt;-generic ./.config （&lt;span class=&quot;string&quot;&gt;&#39;uname -r&#39;&lt;/span&gt;-generic指现版本内核）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make menuconfig（对内核选项进行配置，不需要配置，直接enter）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#若make menuconfig失败，执行apt-get install libncurses5-dev&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make clean （删除配置时留下的一些不用的文件）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;编译内核（需要很长时间，我用了有两小时，请耐心等待）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make bzImage -j4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make modules -j4 （编译模块）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;安装新内核&quot;&gt;&lt;a href=&quot;#安装新内核&quot; class=&quot;headerlink&quot; title=&quot;安装新内核&quot;&gt;&lt;/a&gt;安装新内核&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;make modules_install   （安装模块）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;启动新内核&quot;&gt;&lt;a href=&quot;#启动新内核&quot; class=&quot;headerlink&quot; title=&quot;启动新内核&quot;&gt;&lt;/a&gt;启动新内核&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/etc/default/grub&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/boot/grub/grub.cfg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;制作启动盘&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo mkinitramfs 3.19.3 -o /boot/initrd.img-3.19.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;grep menuentry /boot/grub/grub.cfg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;根据内核的顺序选择第K个，赋值给/etc/default/grub中的GRUB_DEFAULT=K-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;更新grub2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo update-grub2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;更改grub启动项&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;‘GRUB_SAVEDEFAULT’&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;If this option is &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; to ‘&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;’, &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt;, when an entry is selected, save it as a new default entry &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; use by future runs of GRUB. This is only useful &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ‘GRUB_DEFAULT=saved’; it is a separate option because ‘GRUB_DEFAULT=saved’ is useful without this option, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; conjunction with grub2-set-default. Unset by default. This option relies on the environment block, &lt;span class=&quot;built_in&quot;&gt;which&lt;/span&gt; may not be available &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; all situations (see Environment block).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;‘GRUB_DEFAULT’&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;If you &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; this to ‘saved’, &lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; the default menu entry will be that saved by ‘GRUB_SAVEDEFAULT’ or grub2-set-default. This relies on the environment block, &lt;span class=&quot;built_in&quot;&gt;which&lt;/span&gt; may not be available &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; all situations (see Environment block). &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或者直接GRUB_DEFAULT=“Ubuntu, Linux 3.1.1”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;将自己写的驱动编译进内核&quot;&gt;&lt;a href=&quot;#将自己写的驱动编译进内核&quot; class=&quot;headerlink&quot; title=&quot;将自己写的驱动编译进内核&quot;&gt;&lt;/a&gt;将自己写的驱动编译进内核&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;将自己写的Monitor文件夹添加到/usr/src/linux-3.1.1/driver/net/&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改/driver/net/目录下的Kconfig文件，在E1000项的下面增加：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;config MONITOR&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tristate &amp;quot;OSLab(R) MyMonitor driver&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default m&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改/driver/net/Makefile为:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;obj-$(CONFIG_MONITOR) += Monitor/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改/driver/net/Monitor/Makefile为:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;obj-$(CONFIG_MONITOR) += MyMonitor.o&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;执行make menuconfig时找到MONITOR对应的描述“OSLab(R) MyMonitor driver”，选择y即可编译进内核，选m即可动态加载进内核&lt;/p&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;make menuconfig读取Kconfig的内容然后让用户选择编译方式，用户选择完毕后生成linux-3.1.1/.config文件&lt;/li&gt;
&lt;li&gt;linux-3.1.1/.config文件里面定义了如“CONFIG_SKY2=m”这样的行。&lt;/li&gt;
&lt;li&gt;/driver/net/Makefile文件里面定义了如”obj-$(CONFIG_SKY2) += sky2.o”这样的行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;文件介绍&quot;&gt;&lt;a href=&quot;#文件介绍&quot; class=&quot;headerlink&quot; title=&quot;文件介绍&quot;&gt;&lt;/a&gt;文件介绍&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;vmlinuz是可引导的、压缩的内核&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;initrd.img的作用：initrd.img是Linux启 动过程中很重要的一个文件，如果你编译内核时将一部分功能编译为可加载模块。如果系统的一些设备的驱动编译为可加载模，那么启动时如果没有指定 INITRD=/path_to_initrd.img，那么系统启动或者会失败，或者启动后会有设备无法使用（像网卡或者其它设备）。如果没指定initrd.img或者指定的initrd.img中并没有包含正确的驱动模块，则系统启动时会挂起，并报告”kernel panic: VFS: Unable to mount root fs on 08:06”的错误。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;make modules_install将把编译之后的模块放到/lib/modules/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;系统启动自动加载模块&quot;&gt;&lt;a href=&quot;#系统启动自动加载模块&quot; class=&quot;headerlink&quot; title=&quot;系统启动自动加载模块&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://blog.csdn.net/hunanchenxingyu/article/details/38867931&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;系统启动自动加载模块&lt;/a&gt;&lt;/h3&gt;vim /etc/modules，加入新的一行，写要自动加载的模块名&lt;br&gt;内核模块参考资料：&lt;br&gt;&lt;a href=&quot;http://blog.chinaunix.net/uid-20568790-id-1632313.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浅谈linux中的模块加载&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/Kernel_modules_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kernel modules (简体中文)&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/zhangnn5/article/details/6766693&quot;&gt;http://blog.csdn.net/zhangnn5/article/details/6766693&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="操作系统" scheme="http://hujun1413.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>LLVM的IR语言</title>
    <link href="http://hujun1413.github.io/2016/11/10/LLVM/1.LLVM%E7%9A%84IR%E8%AF%AD%E8%A8%80/"/>
    <id>http://hujun1413.github.io/2016/11/10/LLVM/1.LLVM的IR语言/</id>
    <published>2016-11-10T10:35:26.000Z</published>
    <updated>2018-08-27T08:54:45.498Z</updated>
    
    <content type="html">&lt;h2 id=&quot;LLVM-IR&quot;&gt;&lt;a href=&quot;#LLVM-IR&quot; class=&quot;headerlink&quot; title=&quot;LLVM IR&quot;&gt;&lt;/a&gt;LLVM IR&lt;/h2&gt;&lt;p&gt;根据编译原理知识，编译器不是直接将源语言翻译为目标语言，而是翻译为一种“中间语言”，我们编译器从业人员称之为“IR”&lt;br&gt;传统的静态编译器分为三个阶段：前端、优化和后端。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;LLVM IR主要有三种格式：一种是在内存中的编译中间语言(我们无法通过文件的形式得到)；一种是硬盘上存储的二进制中间语言（以.bc结尾），最后一种是可读的中间格式（以.ll结尾）。这三种中间格式是完全相等的。&lt;br&gt;&lt;a href=&quot;http://llvm.org/docs/LangRef.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LLVM Language Reference Manual&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_49b6b6d001011gik.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LLVM的IR基本语法简介&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/qq_17722211/article/details/49080191&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;llvm之IR手册翻译&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/starspringcloud/article/details/50782579&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LLVM Language Reference Manual翻译&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Module-Structure&quot;&gt;&lt;a href=&quot;#Module-Structure&quot; class=&quot;headerlink&quot; title=&quot;Module Structure&quot;&gt;&lt;/a&gt;Module Structure&lt;/h2&gt;&lt;p&gt;在一般情况下，一个模块的组成：函数和全局变量类的全局值、一个指向一个存储器位置指针（在本例，一个指向字符数组，和一个指针的函数），和linker type（详见下文）。&lt;/p&gt;
&lt;h2 id=&quot;Named-Metadata&quot;&gt;&lt;a href=&quot;#Named-Metadata&quot; class=&quot;headerlink&quot; title=&quot;Named Metadata&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://llvm.org/docs/LangRef.html#namedmetadatastructure&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Named Metadata&lt;/a&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;; Some unnamed metadata nodes, which are referenced by the named metadata.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;!0 = !&amp;#123;!&amp;quot;zero&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;!1 = !&amp;#123;!&amp;quot;one&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;!2 = !&amp;#123;!&amp;quot;two&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; A named metadata.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;!name = !&amp;#123;!0, !1, !2&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以通过!1 Metadata 获得 IR 指令对应的源代码的行数,文件名等信息。&lt;/p&gt;
&lt;h2 id=&quot;Linkage-Types&quot;&gt;&lt;a href=&quot;#Linkage-Types&quot; class=&quot;headerlink&quot; title=&quot;Linkage Types&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://llvm.org/docs/LangRef.html#linkage-types&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linkage Types&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;所有的全局变量和函数具有以下链接类型之一：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;private（私有）：全局值“私有”只能直接被当前模块中的对象访问。特别是，连接代码到一个存在私有全局值的模块可能导致私有全局值必须被重新命名，以避免冲突。因为该符号是该模块私有的，因此所有的引用可以被更新。这不会显示在对象文件的任何符号表中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;internal（内部）：类似于私有的，但该值在对象文件中作为本地符号（在ELF情况下是STB_LOCAL）。这对应于C的“static”关键字的概念。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;available_externally（外部可用）：。链接类型为“外部可用”的全局值不会被输出到对象文件，即对应于LLVM模块。它们的存在是为了当给定“全局定义”（它是被某个模块以外的地方所知道的）的知识时，允许内联和其他优化发生。全局值链接类型为外部可用时允许被随意丢弃，并且允许内联和其他优化。这种链接类型只允许定义，没有声明。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linkonce：链接类型为“linkonce”的全局值在链接时和其他同名的全局变量进行合并。这可以被用来实现某些形式的内联函数，模板，或其他必须在每个使用它的转换单元中生成的代码，这些代码可以被稍后更明确的定义覆盖（重写）。未引用的linkonce全局值允许被丢弃。Note that linkonce linkage does not actually allow the optimizer to inline the body of this function into callers。需要注意的是链接类型为linkonce的全局值实际上并不允许优化来使这个函数内联到调用者，因为它不知道函数的这个定义是在这个程序中最后的定义，还是将会被一个更强的定义所覆盖。为了enable（使能，启用）内联和其他优化，使用“linkonce odr”的链接类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;weak：“weak”链接类型和“linkonece”在合并的语义上是相同的，所不同的是未引用的”weak”全局变量可能不会被丢弃。这是用于C语言源代码中声明为“weak”的全局变量。&lt;/li&gt;
&lt;li&gt;common：“common”链接类型和“weak”最相似，但它在C中被用于在全局范围内试探性的定义，如“int X;”。“common”链接类型的符号和“weak”以同样的方式被合并，并且它们如果未被引用可能不被删除。”common”符号可能没有一个明确的值，必须有一个零初始化，并且可能不被标记为“常量”。函数和别名可能没有“common”链接类型。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;appending：“appending”链接类型仅可以被应用到指向数组类型的指针的全局变量。当两个“appending”链接类型的全局变量被链接在一起时，这两个全局数组附加在一起。这是LLVM，类型安全，相当于当.o文件链接时，其系统链接将具有完全相同的名称的“部分”附加在一起。&lt;br&gt;很不幸，这不对应.o文件中的任何特征，因此它只能用于像llvm.global_ctors这种被llvm专门解释的变量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;extern_weak：这种链接类型的语义遵循ELF目标文件模型：符号在被链接前是”weak”类型，如果没有被链接，该符号变为null，而不是作为一个未被定义的引用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;linkonce_odr, weak_odr：某些语言允许不同的全局值被合并，比如两个具有不同语义的函数。其他语言，如C++，确保只有相同的全局值可以被合并（即“one definition rule” - “ODR”）。这些语言可以使用linkonce_odr和weak_odr链接类型用来指示该全局值将只与相同的全局值合并。否则这些链接类型是非ODR版本。&lt;/li&gt;
&lt;li&gt;external：如果上述标识符都没有被使用，那么这个全局变量就是外部可见的，这意味着它参与链接，并可以用于解决外部符号引用。&lt;br&gt;对于一个函数只能声明为external或者extern_weak链接类型。&lt;h2 id=&quot;Calling-Conventions&quot;&gt;&lt;a href=&quot;#Calling-Conventions&quot; class=&quot;headerlink&quot; title=&quot;Calling Conventions&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://llvm.org/docs/LangRef.html#calling-conventions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Calling Conventions&lt;/a&gt;&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;“ccc”&lt;/li&gt;
&lt;li&gt;“fastcc”&lt;/li&gt;
&lt;li&gt;“coldcc”&lt;/li&gt;
&lt;li&gt;“cc 10”&lt;/li&gt;
&lt;li&gt;“cc 11”&lt;/li&gt;
&lt;li&gt;“webkit_jscc”&lt;/li&gt;
&lt;li&gt;“anyregcc”&lt;/li&gt;
&lt;li&gt;“preserve_mostcc”&lt;/li&gt;
&lt;li&gt;“preserve_allcc”&lt;/li&gt;
&lt;li&gt;“cxx_fast_tlscc”&lt;/li&gt;
&lt;li&gt;“swiftcc”&lt;/li&gt;
&lt;li&gt;“cc &lt;n&gt;“&lt;h2 id=&quot;Visibility-Styles&quot;&gt;&lt;a href=&quot;#Visibility-Styles&quot; class=&quot;headerlink&quot; title=&quot;Visibility Styles&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://llvm.org/docs/LangRef.html#visibility-styles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Visibility Styles&lt;/a&gt;&lt;/h2&gt;&lt;/n&gt;&lt;/li&gt;
&lt;li&gt;“default”&lt;/li&gt;
&lt;li&gt;“hidden”&lt;/li&gt;
&lt;li&gt;“protected”&lt;h2 id=&quot;DLL-Storage-Classes&quot;&gt;&lt;a href=&quot;#DLL-Storage-Classes&quot; class=&quot;headerlink&quot; title=&quot;DLL Storage Classes&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://llvm.org/docs/LangRef.html#dll-storage-classes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DLL Storage Classes&lt;/a&gt;&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;“dllimport”&lt;/li&gt;
&lt;li&gt;“dllexport”&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;简单举例：&quot;&gt;&lt;a href=&quot;#简单举例：&quot; class=&quot;headerlink&quot; title=&quot;简单举例：&quot;&gt;&lt;/a&gt;简单举例：&lt;/h2&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//hello.c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(count &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(a &amp;gt; b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            c = a+b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;c1 = %d\n&quot;&lt;/span&gt;,c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            c = a-b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;c2 = %d\n&quot;&lt;/span&gt;,c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        --count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//hello.ll&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; ModuleID = &#39;hello.c&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;target datalayout = &quot;e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;target triple = &quot;x86_64-unknown-linux-gnu&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@.str = private unnamed_addr constant [9 x i8] c&quot;c1 = %d\0A\00&quot;, align 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@.str1 = private unnamed_addr constant [9 x i8] c&quot;c2 = %d\0A\00&quot;, align 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;define i32 @main() nounwind uwtable &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;entry:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %retval = alloca i32, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %a = alloca i32, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %b = alloca i32, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %c = alloca i32, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %count = alloca i32, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  store i32 0, i32* %retval&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  store i32 1, i32* %a, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  store i32 2, i32* %b, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  store i32 3, i32* %count, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  br label %while.cond&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while.cond:                                       ; preds = %if.end, %entry&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %0 = load i32* %count, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %cmp = icmp sgt i32 %0, 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  br i1 %cmp, label %while.body, label %while.end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while.body:                                       ; preds = %while.cond&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %1 = load i32* %a, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %2 = load i32* %b, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %cmp1 = icmp sgt i32 %1, %2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  br i1 %cmp1, label %if.then, label %if.else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if.then:                                          ; preds = %while.body&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %3 = load i32* %a, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %4 = load i32* %b, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %add = add nsw i32 %3, %4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  store i32 %add, i32* %c, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %5 = load i32* %c, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str, i32 0, i32 0), i32 %5)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  br label %if.end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if.else:                                          ; preds = %while.body&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %6 = load i32* %a, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %7 = load i32* %b, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %sub = sub nsw i32 %6, %7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  store i32 %sub, i32* %c, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %8 = load i32* %c, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str1, i32 0, i32 0), i32 %8)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  br label %if.end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if.end:                                           ; preds = %if.else, %if.then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %9 = load i32* %count, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  %dec = add nsw i32 %9, -1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  store i32 %dec, i32* %count, align 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  br label %while.cond&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while.end:                                        ; preds = %while.cond&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ret i32 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;declare i32 @printf(i8*, ...)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;代表全局变量，-代表局部变量&quot;&gt;&lt;a href=&quot;#代表全局变量，-代表局部变量&quot; class=&quot;headerlink&quot; title=&quot;@代表全局变量，%代表局部变量&quot;&gt;&lt;/a&gt;@代表全局变量，%代表局部变量&lt;/h3&gt;&lt;h3 id=&quot;alloca&quot;&gt;&lt;a href=&quot;#alloca&quot; class=&quot;headerlink&quot; title=&quot;alloca&quot;&gt;&lt;/a&gt;alloca&lt;/h3&gt;&lt;p&gt;&lt;code&gt;%a = alloca i32, align 4&lt;/code&gt;&lt;br&gt;alloca指令用于分配内存堆栈给当前执行的函数,当这个函数返回其调用者（我自己对于caller的翻译）时自动释放。&lt;br&gt;i32表示32位，4字节，LLVM将整数类型定义为iN，其中N是整数占用的位数，位数为1到223-1&lt;br&gt;align 4表示向4“对齐”：即便数据没有占用4个字节，也要为其分配4字节，这样使得llvm  IR在保证了数据格式一致性的前提条件下，定义数据型时非常灵活，不仅可以任意定义整形和浮点型的长度(iX,iXX,iXXX………)，甚至还允许使用不同的数制，比如你需要使用64进制数字，那就只要i48, align 6即可。&lt;/p&gt;
&lt;h3 id=&quot;getelementptr&quot;&gt;&lt;a href=&quot;#getelementptr&quot; class=&quot;headerlink&quot; title=&quot;getelementptr&quot;&gt;&lt;/a&gt;getelementptr&lt;/h3&gt;&lt;p&gt;getelementptr 的第一个参数是全局字符串变量的指针。要单步执行全局变量的指针，则需要使用第一个索引，即 i32 0。因为 getelementptr 指令的第一个参数必须始终是 pointer 类型的值，所以第一个索引会单步调试该指针。0 值表示从该指针起偏移 0 元素偏移量。我的开发计算机运行的是 32 位 Linux®，所以该指针是 4 字节。第二个索引 (i32 0) 用于选择字符串的第 0 个元素，该元素是作为 printf 的参数来提供的。i32 %8表示传入参数是%8这个整数&lt;/p&gt;
&lt;h3 id=&quot;load-store&quot;&gt;&lt;a href=&quot;#load-store&quot; class=&quot;headerlink&quot; title=&quot;load/store&quot;&gt;&lt;/a&gt;load/store&lt;/h3&gt;&lt;p&gt;&lt;code&gt;%0 = load i32* %a, align 4&lt;/code&gt;&lt;br&gt;load是“装载”，即读出内容&lt;/p&gt;
&lt;p&gt;&lt;code&gt;store i32 1, i32* %a, align 4&lt;/code&gt;&lt;br&gt;store是写入内容&lt;/p&gt;
&lt;h3 id=&quot;判断及跳转icmp-br&quot;&gt;&lt;a href=&quot;#判断及跳转icmp-br&quot; class=&quot;headerlink&quot; title=&quot;判断及跳转icmp/br&quot;&gt;&lt;/a&gt;判断及跳转icmp/br&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;%cmp1 = icmp sgt i32 %1, %2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;br i1 %cmp1, label %if.then, label %if.else&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;二元运算-f-add-f-sub-f-mul-usf-div-usf-rem&quot;&gt;&lt;a href=&quot;#二元运算-f-add-f-sub-f-mul-usf-div-usf-rem&quot; class=&quot;headerlink&quot; title=&quot;二元运算( f)add/( f)sub/( f)mul/(usf)div/(usf)rem&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://llvm.org/docs/LangRef.html#binary-operations&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;二元运算( f)add/( f)sub/( f)mul/(usf)div/(usf)rem&lt;/a&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;result&amp;gt; = add nuw nsw &amp;lt;ty&amp;gt; &amp;lt;op1&amp;gt;, &amp;lt;op2&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%add = add nsw i32 %0, %1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;nsw:no signed wrap&lt;br&gt;nuw:no unsigned wrap&lt;br&gt;当溢出时，计算得到的值是&lt;a href=&quot;http://llvm.org/docs/LangRef.html#poison-values&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;poison value&lt;/a&gt;。&lt;br&gt;There is currently no way of representing a poison value in the IR; they only exist when produced by operations such as add with the nsw flag.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;result&amp;gt; = fadd [fast-math flags]* &amp;lt;ty&amp;gt; &amp;lt;op1&amp;gt;, &amp;lt;op2&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;result&amp;gt; = fadd float 4.0, %var&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;前头加f的是&lt;a href=&quot;http://llvm.org/docs/LangRef.html#t-floating&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;floating point&lt;/a&gt; or &lt;a href=&quot;http://llvm.org/docs/LangRef.html#t-vector&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vector&lt;/a&gt;&lt;br&gt;其中的参数&lt;a href=&quot;http://llvm.org/docs/LangRef.html#fastmath&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fast-math flags&lt;/a&gt;是最优化提示，用来enable otherwise unsafe floating point operations&lt;/p&gt;
&lt;p&gt;加u的返回结果是无符号的int型&lt;br&gt;加s的返回结果是有符号的int型&lt;/p&gt;
&lt;h3 id=&quot;Terminator-Instructions&quot;&gt;&lt;a href=&quot;#Terminator-Instructions&quot; class=&quot;headerlink&quot; title=&quot;Terminator Instructions&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://llvm.org/docs/LangRef.html#terminator-instructions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Terminator Instructions&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;每个basic block（基本块）以终结指令结束，表明下一个被执行的块&lt;/p&gt;
&lt;h4 id=&quot;ret&quot;&gt;&lt;a href=&quot;#ret&quot; class=&quot;headerlink&quot; title=&quot;ret&quot;&gt;&lt;/a&gt;ret&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ret i32 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ret void&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;br&quot;&gt;&lt;a href=&quot;#br&quot; class=&quot;headerlink&quot; title=&quot;br&quot;&gt;&lt;/a&gt;br&lt;/h4&gt;&lt;p&gt;分为跳转到条件分支和无条件分支&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;br i1 &amp;lt;cond&amp;gt;, label &amp;lt;iftrue&amp;gt;, label &amp;lt;iffalse&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;br label &amp;lt;dest&amp;gt;          ; Unconditional branch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;switch&quot;&gt;&lt;a href=&quot;#switch&quot; class=&quot;headerlink&quot; title=&quot;switch&quot;&gt;&lt;/a&gt;switch&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;switch &amp;lt;intty&amp;gt; &amp;lt;value&amp;gt;, label &amp;lt;defaultdest&amp;gt; [ &amp;lt;intty&amp;gt; &amp;lt;val&amp;gt;, label &amp;lt;dest&amp;gt; ... ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; Emulate a conditional br instruction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;%Val = zext i1 %value to i32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;switch i32 %Val, label %truedest [ i32 0, label %falsedest ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; Emulate an unconditional br instruction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;switch i32 0, label %dest [ ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;; Implement a jump table:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;switch i32 %val, label %otherwise [ i32 0, label %onzero&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    i32 1, label %onone&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    i32 2, label %ontwo ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;indiretbr&quot;&gt;&lt;a href=&quot;#indiretbr&quot; class=&quot;headerlink&quot; title=&quot;indiretbr&quot;&gt;&lt;/a&gt;indiretbr&lt;/h4&gt;&lt;h4 id=&quot;invoke&quot;&gt;&lt;a href=&quot;#invoke&quot; class=&quot;headerlink&quot; title=&quot;invoke&quot;&gt;&lt;/a&gt;invoke&lt;/h4&gt;&lt;h4 id=&quot;resume&quot;&gt;&lt;a href=&quot;#resume&quot; class=&quot;headerlink&quot; title=&quot;resume&quot;&gt;&lt;/a&gt;resume&lt;/h4&gt;&lt;h4 id=&quot;catchswitch&quot;&gt;&lt;a href=&quot;#catchswitch&quot; class=&quot;headerlink&quot; title=&quot;catchswitch&quot;&gt;&lt;/a&gt;catchswitch&lt;/h4&gt;&lt;h4 id=&quot;catchret&quot;&gt;&lt;a href=&quot;#catchret&quot; class=&quot;headerlink&quot; title=&quot;catchret&quot;&gt;&lt;/a&gt;catchret&lt;/h4&gt;&lt;h4 id=&quot;cleanupret&quot;&gt;&lt;a href=&quot;#cleanupret&quot; class=&quot;headerlink&quot; title=&quot;cleanupret&quot;&gt;&lt;/a&gt;cleanupret&lt;/h4&gt;&lt;h4 id=&quot;unreachable&quot;&gt;&lt;a href=&quot;#unreachable&quot; class=&quot;headerlink&quot; title=&quot;unreachable&quot;&gt;&lt;/a&gt;unreachable&lt;/h4&gt;&lt;h4 id=&quot;‘getelementptr‘-Instruction&quot;&gt;&lt;a href=&quot;#‘getelementptr‘-Instruction&quot; class=&quot;headerlink&quot; title=&quot;‘getelementptr‘ Instruction&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://llvm.org/docs/LangRef.html#getelementptr-instruction&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;‘getelementptr‘ Instruction&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://llvm.org/docs/GetElementPtr.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://llvm.org/docs/GetElementPtr.html&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Source-Level-Debugging-with-LLVM&quot;&gt;&lt;a href=&quot;#Source-Level-Debugging-with-LLVM&quot; class=&quot;headerlink&quot; title=&quot;Source Level Debugging with LLVM&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://llvm.org/docs/SourceLevelDebugging.html#source-level-debugging-with-llvm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Source Level Debugging with LLVM&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/wuhui_gdnt/article/details/68923937?locationNum=12&amp;amp;fps=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/wuhui_gdnt/article/details/68923937?locationNum=12&amp;amp;fps=1&lt;/a&gt;&lt;br&gt;clang -O0 -g可生成完整的调试信息&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;LLVM-IR&quot;&gt;&lt;a href=&quot;#LLVM-IR&quot; class=&quot;headerlink&quot; title=&quot;LLVM IR&quot;&gt;&lt;/a&gt;LLVM IR&lt;/h2&gt;&lt;p&gt;根据编译原理知识，编译器不是直接将源语言翻译为目标语言，而是翻译为一种“中间语言”，我们编译器从业人员称之为“IR”&lt;br&gt;传统的静态编译器分为三个阶段：前端、优化和后端。&lt;br&gt;
    
    </summary>
    
      <category term="LLVM" scheme="http://hujun1413.github.io/categories/LLVM/"/>
    
    
  </entry>
  
  <entry>
    <title>LLVM安装及工具链</title>
    <link href="http://hujun1413.github.io/2016/11/09/LLVM/0.LLVM%E5%AE%89%E8%A3%85%E5%8F%8A%E5%B7%A5%E5%85%B7%E9%93%BE/"/>
    <id>http://hujun1413.github.io/2016/11/09/LLVM/0.LLVM安装及工具链/</id>
    <published>2016-11-09T10:35:26.000Z</published>
    <updated>2018-08-27T08:54:53.665Z</updated>
    
    <content type="html">&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在&lt;a href=&quot;http://llvm.org/releases/download.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网下载页&lt;/a&gt;下载LLVM3.2版本的llvm3.2和clang3.2的source code压缩包&lt;/li&gt;
&lt;li&gt;解压后安装：./configure,make,sudo make install&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;什么是LLVM&quot;&gt;&lt;a href=&quot;#什么是LLVM&quot; class=&quot;headerlink&quot; title=&quot;什么是LLVM&quot;&gt;&lt;/a&gt;什么是LLVM&lt;/h3&gt;llvm是low level virtual machine的简称，其实是一个编译器框架。llvm随着这个项目的不断的发展，已经无法完全的代表这个项目了，只是这种叫法一直延续下来。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;llvm是一个开源的项目。它最早的时候是Illinois的一个研究项目，主要负责人是Chris Lattner，他现在就职于Apple. Apple 目前也是llvm项目的主要赞助者之一。&lt;/p&gt;
&lt;p&gt;llvm的主要作用是它可以作为多种语言的后端，它可以提供可编程语言无关的优化和针对很多种CPU的代码生成功能。此外llvm目前已经不仅仅是个编程框架，它目前还包含了很多的子项目，比如最具盛名的clang.&lt;/p&gt;
&lt;p&gt;llvm的优点是开源，有一个表达形式很好的IR语言，模块化作的特别好。&lt;/p&gt;
&lt;p&gt;llvm这个框架目前已经有基于这个框架的大量的工具可以使用。&lt;/p&gt;
&lt;h3 id=&quot;LLVM-Command-Guide&quot;&gt;&lt;a href=&quot;#LLVM-Command-Guide&quot; class=&quot;headerlink&quot; title=&quot;LLVM Command Guide&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://llvm.org/docs/CommandGuide/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LLVM Command Guide&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;llvm-as 将人类可读的 .ll 文件汇编成字节代码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;llvm-dis 将字节代码文件反编成人类可读的 .ll 文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;opt 在一个字节代码文件上运行一系列的 LLVM 到 LLVM 的优化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;llc 为一个字节代码文件生成本机器代码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;lli 直接运行使用 JIT 编译器或者解释器编译成字节代码的程序(运行.bc文件或.ll文件)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;llvm-link 将几个字节代码文件连接成一个&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;llvm-ar 打包字节代码文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;llvm-lib LLVM lib.exe compatible library tool&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;llvm-nm 在 打印出LLVM中间格式或者object文件的符号表（2014年5月14日更新）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;llvm-config 打印出配置时 LLVM 编译选项、库、等等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;llvm-diff 比较两个模块的结构&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;llvm-ranlib 为 llvm-ar 打包的文件创建索引&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;llvm-prof 将 ‘llvmprof.out’ raw 数据格式化成人类可读的报告&lt;/p&gt;
&lt;p&gt;llvm-ld 带有可装载的运行时优化支持的通用目标连接器&lt;/p&gt;
&lt;p&gt;llvmc 一个通用的可定制的编译器驱动&lt;/p&gt;
&lt;p&gt;bugpoint 自动案例测试减速器&lt;/p&gt;
&lt;p&gt;llvm-extract 从 LLVM 字节代码文件中解压出一个函数&lt;/p&gt;
&lt;p&gt;llvm-bcanalyzer 字节代码分析器 （分析二进制编码本身，而不是它代表的程序）&lt;/p&gt;
&lt;p&gt;FileCheck 灵活的文件验证器，广泛的被测试工具利用&lt;/p&gt;
&lt;p&gt;tblgen 目标描述阅读器和生成器&lt;/p&gt;
&lt;p&gt;lit        LLVM 集成测试器，用于运行测试&lt;/p&gt;
&lt;p&gt;AddressSanitizer  一个快速内存错误探测器&lt;/p&gt;
&lt;h3 id=&quot;LLVM工具链使用&quot;&gt;&lt;a href=&quot;#LLVM工具链使用&quot; class=&quot;headerlink&quot; title=&quot;LLVM工具链使用&quot;&gt;&lt;/a&gt;LLVM工具链使用&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/ggjucheng/archive/2011/12/14/2287738.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linuc GCC常用命令&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gcc test.c -o &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;                        &lt;span class=&quot;comment&quot;&gt;#直接从源代码生成可执行文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;实际流程：.c--&amp;gt;.i--&amp;gt;.s--&amp;gt;.o--&amp;gt;.elf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gcc -E test.c -o test.i 或 gcc -E test.c(不生成test.i，只在终端显示)   &lt;span class=&quot;comment&quot;&gt;#预处理Preprocessing（加入包含的库,生成中间文件.i）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gcc -S test.i -o test.s 或 gcc -S test.i(默认生成test.s)   &lt;span class=&quot;comment&quot;&gt;#编译为汇编Compilation（编译器生成汇编代码.s）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gcc -c test.s -o test.o 或 gcc -c test.s(默认生成test.o)  &lt;span class=&quot;comment&quot;&gt;#汇编Assembly（汇编器将汇编代码翻译成机器语言指令，把这些指令打包成一种叫做可重定位目标程序格式，并保存在.o文件中）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gcc test.o -o &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt; 或 gcc test.o(默认生成test.o)   &lt;span class=&quot;comment&quot;&gt;#链接Linking（将目标文件链接成可执行文件）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gcc test.i/test.s/test.o -o &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;#均生成可执行文件test.elf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gcc -O1 test.c -o &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#使用编译优化级别1编译程序。级别为1~3，级别越大优化效果越好，但编译时间越长。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vim hello.c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clang hello.c -o hello      &lt;span class=&quot;comment&quot;&gt;#生成可执行文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./hello&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#或者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clang -O3 -emit-llvm hello.c -c -o hello.bc    &lt;span class=&quot;comment&quot;&gt;#生成二进制中间表示语言.bc文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lli hello.bc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#或者：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;clang -03 -emit-llvm test.c -S -o test.ll &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#生成人类可读的 .ll 文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lli hello.ll&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;llvm-dis hello.bc -o hello.ll   &lt;span class=&quot;comment&quot;&gt;#.bc文件反汇编成.ll文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;或：llvm-dis &amp;lt; hello.bc (终端显示但不生成.ll文件)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    llvm-dis &amp;lt; hello.bc | less （less打开但不生成.ll文件）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    llvm-dis hello.bc (生成默认的hello.ll文件)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;llvm-as hello.ll -o hello.bc    &lt;span class=&quot;comment&quot;&gt;#.ll文件汇编成.bc文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;llc hello.bc -o hello.s  &lt;span class=&quot;comment&quot;&gt;#.bc或.ll文件生成汇编代码.s文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;llc hello.ll -o hello.s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gcc -c hello.s -o hello.o&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gcc hello.o -o hello&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;实际流程：.c--&amp;gt;.ll/.bc--&amp;gt;.s--&amp;gt;.o--&amp;gt;.elf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#.ll文件类似与汇编文件.s，而.bc文件类似于目标文件.o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://llvm.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LLVM官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/column/details/llvm.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LLVM零基础学习&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/column/details/llvm-study.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LLVM每日谈&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在&lt;a href=&quot;http://llvm.org/releases/download.html&quot;&gt;官网下载页&lt;/a&gt;下载LLVM3.2版本的llvm3.2和clang3.2的source code压缩包&lt;/li&gt;
&lt;li&gt;解压后安装：./configure,make,sudo make install
    
    </summary>
    
      <category term="LLVM" scheme="http://hujun1413.github.io/categories/LLVM/"/>
    
    
  </entry>
  
  <entry>
    <title>ROS-Nao</title>
    <link href="http://hujun1413.github.io/2016/11/07/ROS/1.ROS-Nao/"/>
    <id>http://hujun1413.github.io/2016/11/07/ROS/1.ROS-Nao/</id>
    <published>2016-11-07T12:35:26.000Z</published>
    <updated>2018-08-27T08:52:44.232Z</updated>
    
    <content type="html">&lt;h2 id=&quot;安装Naoqi-SDK&quot;&gt;&lt;a href=&quot;#安装Naoqi-SDK&quot; class=&quot;headerlink&quot; title=&quot;安装Naoqi SDK&quot;&gt;&lt;/a&gt;安装Naoqi SDK&lt;/h2&gt;&lt;h3 id=&quot;Naoqi&quot;&gt;&lt;a href=&quot;#Naoqi&quot; class=&quot;headerlink&quot; title=&quot;Naoqi&quot;&gt;&lt;/a&gt;Naoqi&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir ~/naoqi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/naoqi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar xzf naoqi-sdk-2.1.3.3-linux64.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar xzf pynaoqi-python2.7-2.1.3.3-linux64.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~/naoqi/naoqi-sdk-2.1.3.3-linux64/naoqi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;export PYTHONPATH=~/naoqi/pynaoqi-python2.7-2.1.3.3-linux64:$PYTHONPATH&#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from naoqi import ALProxy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;ROS-packages-for-the-Nao-robot&quot;&gt;&lt;a href=&quot;#ROS-packages-for-the-Nao-robot&quot; class=&quot;headerlink&quot; title=&quot;ROS packages for the Nao robot&quot;&gt;&lt;/a&gt;ROS packages for the Nao robot&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-driver-base ros-indigo-move-base-msgs ros-indigo-octomap ros-indigo-octomap-msgs ros-indigo-humanoid-msgs ros-indigo-humanoid-nav-msgs ros-indigo-camera-info-manager ros-indigo-camera-info-manager-py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-nao-robot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Installing-ROS-on-a-remote-PC-to-control-Nao&quot;&gt;&lt;a href=&quot;#Installing-ROS-on-a-remote-PC-to-control-Nao&quot; class=&quot;headerlink&quot; title=&quot;Installing ROS on a remote PC to control Nao&quot;&gt;&lt;/a&gt;Installing ROS on a remote PC to control Nao&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/catkin_ws/src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;vim .rosinstall&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wstool update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ..&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;catkin_make&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Starting-the-bridge-on-a-real-NAO&quot;&gt;&lt;a href=&quot;#Starting-the-bridge-on-a-real-NAO&quot; class=&quot;headerlink&quot; title=&quot;Starting the bridge on a real NAO&quot;&gt;&lt;/a&gt;Starting the bridge on a real NAO&lt;/h2&gt;&lt;h4 id=&quot;Displaying-NAO-in-RVIZ&quot;&gt;&lt;a href=&quot;#Displaying-NAO-in-RVIZ&quot; class=&quot;headerlink&quot; title=&quot;Displaying NAO in RVIZ&quot;&gt;&lt;/a&gt;Displaying NAO in RVIZ&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;roscore&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch nao_bringup nao_full_py.launch nao_ip:=127.0.0.1 roscore_ip:=127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rviz rviz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Launching-ROS-on-a-virtual-NAOqi&quot;&gt;&lt;a href=&quot;#Launching-ROS-on-a-virtual-NAOqi&quot; class=&quot;headerlink&quot; title=&quot;Launching ROS on a virtual NAOqi&quot;&gt;&lt;/a&gt;Launching ROS on a virtual NAOqi&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;roscore&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~/naoqi/naoqi-sdk-2.1.3.3-linux64/naoqi --verbose --broker-ip 127.0.0.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LD_LIBRARY_PATH=~/naoqi/naoqi-sdk-2.1.3.3-linux64/lib:&lt;span class=&quot;variable&quot;&gt;$LD_LIBRARY_PATH&lt;/span&gt; NAO_IP=127.0.0.1 roslaunch naoqi_driver_py naoqi_driver.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#动关节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch nao_description robot_state_publisher.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch nao_description display.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#展示模型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun naoqi_driver_py naoqi_moveto.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun naoqi_driver_py naoqi_node.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rqt_console rqt_console   &lt;span class=&quot;comment&quot;&gt;#控制台显示日志&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rqt_graph  &lt;span class=&quot;comment&quot;&gt;#显示节点信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic pub -1 /cmd_vel geometry_msgs/Twist &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;linear: &amp;#123;x: 1.0, y: 0.0, z: 0.0&amp;#125;, angular: &amp;#123;x: 0.0, y: 0.0, z: 0.0&amp;#125;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic pub -1 /cmd_vel geometry_msgs/Twist &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;linear: &amp;#123;x: 0.0, y: 0.0, z: 0.0&amp;#125;, angular: &amp;#123;x: 0.0, y: 0.0, z: 0.0&amp;#125;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Node: /base_footprint&lt;br&gt;Time: 13:40:56.072809725 (2016-11-11)&lt;br&gt;Severity: Warn&lt;br&gt;Published Topics: /rosout, /tf&lt;/p&gt;
&lt;p&gt;MessageFilter [target=r_sole odom ]: Discarding message from [/joint_state_publisher] due to empty frame_id.  This message will only print once.&lt;/p&gt;
&lt;p&gt;Location:&lt;br&gt;/opt/ros/indigo/include/tf/message_filter.h:MessageFilter&lt;m&gt;::testMessage:354&lt;/m&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装Naoqi-SDK&quot;&gt;&lt;a href=&quot;#安装Naoqi-SDK&quot; class=&quot;headerlink&quot; title=&quot;安装Naoqi SDK&quot;&gt;&lt;/a&gt;安装Naoqi SDK&lt;/h2&gt;&lt;h3 id=&quot;Naoqi&quot;&gt;&lt;a href=&quot;#Naoqi&quot; class=&quot;headerlink&quot; title=&quot;Naoqi&quot;&gt;&lt;/a&gt;Naoqi&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir ~/naoqi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/naoqi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar xzf naoqi-sdk-2.1.3.3-linux64.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar xzf pynaoqi-python2.7-2.1.3.3-linux64.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~/naoqi/naoqi-sdk-2.1.3.3-linux64/naoqi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;export PYTHONPATH=~/naoqi/pynaoqi-python2.7-2.1.3.3-linux64:$PYTHONPATH&#39;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from naoqi import ALProxy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="ROS" scheme="http://hujun1413.github.io/categories/ROS/"/>
    
    
  </entry>
  
  <entry>
    <title>CNCC讲座记录</title>
    <link href="http://hujun1413.github.io/2016/10/25/Informal_essay/CNCC%E8%AE%B2%E5%BA%A7%E8%AE%B0%E5%BD%95/"/>
    <id>http://hujun1413.github.io/2016/10/25/Informal_essay/CNCC讲座记录/</id>
    <published>2016-10-25T10:35:26.000Z</published>
    <updated>2017-06-09T02:37:48.574Z</updated>
    
    <content type="html">&lt;h3 id=&quot;张晓东教授&quot;&gt;&lt;a href=&quot;#张晓东教授&quot; class=&quot;headerlink&quot; title=&quot;张晓东教授&quot;&gt;&lt;/a&gt;张晓东教授&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;ACM Felllow&lt;/li&gt;
&lt;li&gt;俄亥俄州立大学&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;《对社会和他人的贡献是检验成功的重要标准》&quot;&gt;&lt;a href=&quot;#《对社会和他人的贡献是检验成功的重要标准》&quot; class=&quot;headerlink&quot; title=&quot;《对社会和他人的贡献是检验成功的重要标准》&quot;&gt;&lt;/a&gt;《对社会和他人的贡献是检验成功的重要标准》&lt;/h3&gt;&lt;h4 id=&quot;“价值”比“成功”更重要&quot;&gt;&lt;a href=&quot;#“价值”比“成功”更重要&quot; class=&quot;headerlink&quot; title=&quot;“价值”比“成功”更重要&quot;&gt;&lt;/a&gt;“价值”比“成功”更重要&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;不成功但很有价值的人：孔子，贝多芬，叔本华，卡尔 马克思，梵高，怀特兄弟&lt;/li&gt;
&lt;li&gt;有价值又成功的中国科学家：袁隆平，屠呦呦，王选&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;原因：&quot;&gt;&lt;a href=&quot;#原因：&quot; class=&quot;headerlink&quot; title=&quot;原因：&quot;&gt;&lt;/a&gt;原因：&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;攻克在高需求领域的难题&lt;/li&gt;
&lt;li&gt;有独特的竞争优势&lt;/li&gt;
&lt;li&gt;长时间的努力&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;社会流动性是价值与成功的基础&quot;&gt;&lt;a href=&quot;#社会流动性是价值与成功的基础&quot; class=&quot;headerlink&quot; title=&quot;社会流动性是价值与成功的基础&quot;&gt;&lt;/a&gt;社会流动性是价值与成功的基础&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;社会流动性是公民平等和社会生机活力的基础&lt;/li&gt;
&lt;li&gt;巨大的社会贡献后所带来的个人成功和社会流动：Microsoft, Apple, Google, Facebook&lt;/li&gt;
&lt;li&gt;很多主要的计算机技术来源于大学的基础研究&lt;/li&gt;
&lt;li&gt;计算机科学的开发与研究改变了世界&lt;/li&gt;
&lt;li&gt;计算机系引以为自豪的科研成果&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;创造价值第一，成功第二&quot;&gt;&lt;a href=&quot;#创造价值第一，成功第二&quot; class=&quot;headerlink&quot; title=&quot;创造价值第一，成功第二&quot;&gt;&lt;/a&gt;创造价值第一，成功第二&lt;/h4&gt;&lt;h4 id=&quot;大学的教育太分离了，最具有创新的结果是三种教育的交集&quot;&gt;&lt;a href=&quot;#大学的教育太分离了，最具有创新的结果是三种教育的交集&quot; class=&quot;headerlink&quot; title=&quot;大学的教育太分离了，最具有创新的结果是三种教育的交集&quot;&gt;&lt;/a&gt;大学的教育太分离了，最具有创新的结果是三种教育的交集&lt;/h4&gt;&lt;h4 id=&quot;我在大学有哪些事让我难忘并影响了我一生：&quot;&gt;&lt;a href=&quot;#我在大学有哪些事让我难忘并影响了我一生：&quot; class=&quot;headerlink&quot; title=&quot;我在大学有哪些事让我难忘并影响了我一生：&quot;&gt;&lt;/a&gt;我在大学有哪些事让我难忘并影响了我一生：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;老师们的治学精神和对我们的关照&lt;br&gt;“Excellence is not an act but habit.”亚里士多德&lt;/li&gt;
&lt;li&gt;中央交响乐团指挥李德伦在北京各高校讲解古典音乐&lt;/li&gt;
&lt;li&gt;在激烈的争论中度过了4年&lt;/li&gt;
&lt;li&gt;每日的体育锻炼&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;教育的目的：多维智慧&quot;&gt;&lt;a href=&quot;#教育的目的：多维智慧&quot; class=&quot;headerlink&quot; title=&quot;教育的目的：多维智慧&quot;&gt;&lt;/a&gt;教育的目的：多维智慧&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Frame of Minds(Howard Gardner)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Peter Dannier&lt;br&gt;《Concurrency Control》&lt;/p&gt;
&lt;h3 id=&quot;吴甘沙&quot;&gt;&lt;a href=&quot;#吴甘沙&quot; class=&quot;headerlink&quot; title=&quot;吴甘沙&quot;&gt;&lt;/a&gt;吴甘沙&lt;/h3&gt;&lt;p&gt;驭势科技联合创始人，CEO&lt;br&gt;前英特尔中国研究院院长&lt;/p&gt;
&lt;h3 id=&quot;2016：时代的应许&quot;&gt;&lt;a href=&quot;#2016：时代的应许&quot; class=&quot;headerlink&quot; title=&quot;2016：时代的应许&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://t.qianzhan.com/daka/detail/161014-e0d91faf.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2016：时代的应许&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;一台老“计算机”的升级之旅&lt;/p&gt;
&lt;h4 id=&quot;创造了连接&quot;&gt;&lt;a href=&quot;#创造了连接&quot; class=&quot;headerlink&quot; title=&quot;创造了连接&quot;&gt;&lt;/a&gt;创造了连接&lt;/h4&gt;&lt;p&gt;人与信息：搜索&lt;br&gt;人与人：社交&lt;br&gt;人与商品：电商&lt;br&gt;人与服务：O2O&lt;/p&gt;
&lt;h4 id=&quot;终日与对手缠斗，醒来发现营帐外&quot;&gt;&lt;a href=&quot;#终日与对手缠斗，醒来发现营帐外&quot; class=&quot;headerlink&quot; title=&quot;终日与对手缠斗，醒来发现营帐外&quot;&gt;&lt;/a&gt;终日与对手缠斗，醒来发现营帐外&lt;/h4&gt;&lt;p&gt;领悟一：&lt;br&gt;在时代的滚滚铁流面前，随时清空硬盘–永远保持空杯心态&lt;br&gt;非线性&lt;br&gt;颠覆性&lt;br&gt;不连续性（范式切换）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;渐进式思维（连续性思维）：我以前做过什么，现在会什么，未来由以前决定&lt;br&gt;案例：铱星计划&lt;/li&gt;
&lt;li&gt;变革性思维（非连续性思维）：遇见未来，以终为始&lt;br&gt;案例：美国登月计划&lt;br&gt;领悟二：&lt;br&gt;在数字时代要改变命运，必须改变思维方式。如果我是一台老计算机，我必须得重新刷机，必须得重装操作系统，必须得有变革性思维。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;你现在应该做什么，你现在会什么，你真正想做什么（现实，能力，理想）&quot;&gt;&lt;a href=&quot;#你现在应该做什么，你现在会什么，你真正想做什么（现实，能力，理想）&quot; class=&quot;headerlink&quot; title=&quot;你现在应该做什么，你现在会什么，你真正想做什么（现实，能力，理想）&quot;&gt;&lt;/a&gt;你现在应该做什么，你现在会什么，你真正想做什么（现实，能力，理想）&lt;/h4&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;张晓东教授&quot;&gt;&lt;a href=&quot;#张晓东教授&quot; class=&quot;headerlink&quot; title=&quot;张晓东教授&quot;&gt;&lt;/a&gt;张晓东教授&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;ACM Felllow&lt;/li&gt;
&lt;li&gt;俄亥俄州立大学&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;《对社会和他人的贡献是检验成功的重要标准》&quot;&gt;&lt;a href=&quot;#《对社会和他人的贡献是检验成功的重要标准》&quot; class=&quot;headerlink&quot; title=&quot;《对社会和他人的贡献是检验成功的重要标准》&quot;&gt;&lt;/a&gt;《对社会和他人的贡献是检验成功的重要标准》&lt;/h3&gt;&lt;h4 id=&quot;“价值”比“成功”更重要&quot;&gt;&lt;a href=&quot;#“价值”比“成功”更重要&quot; class=&quot;headerlink&quot; title=&quot;“价值”比“成功”更重要&quot;&gt;&lt;/a&gt;“价值”比“成功”更重要&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;不成功但很有价值的人：孔子，贝多芬，叔本华，卡尔 马克思，梵高，怀特兄弟&lt;/li&gt;
&lt;li&gt;有价值又成功的中国科学家：袁隆平，屠呦呦，王选
    
    </summary>
    
      <category term="随笔" scheme="http://hujun1413.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
  <entry>
    <title>CNCC2016总结</title>
    <link href="http://hujun1413.github.io/2016/10/25/Informal_essay/CNCC2016%E6%80%BB%E7%BB%93/"/>
    <id>http://hujun1413.github.io/2016/10/25/Informal_essay/CNCC2016总结/</id>
    <published>2016-10-25T08:25:26.000Z</published>
    <updated>2017-03-05T03:59:18.587Z</updated>
    
    <content type="html">&lt;p&gt;很荣幸能在今年获得“2016年CCF优秀大学生奖”和这次来太原参加2016中国计算机大会（CNCC）的机会，CNCC是我国计算机领域规模最大、级别最高的学术会议，而本届大会的主题是“计算改变未来”。&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/CNCC2016.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;CNCC2016&quot;&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;&lt;br&gt;从10月19日抵达太原，再到10月23日离开太原，这短短四天给我的感觉却像经历了很久，期间发生的事情至今仍旧萦绕在心头。抬起头想找人倾诉，却发现大家都早已各奔东西，长叹了口气，大概这就是所谓的举目惘然吧。&lt;br&gt;昨天收到很多大家的合影，想起了和大家一起发生的故事，心里越发舍不得大家。为了让这段记忆不被岁月侵蚀，也为了重逢的那天还能一起笑着回忆这段美好时光，把关于大家的记忆和合影放在了这篇博文里。&lt;/p&gt;
&lt;h3 id=&quot;19日下午纯阳宫之行&quot;&gt;&lt;a href=&quot;#19日下午纯阳宫之行&quot; class=&quot;headerlink&quot; title=&quot;19日下午纯阳宫之行&quot;&gt;&lt;/a&gt;19日下午纯阳宫之行&lt;/h3&gt;&lt;p&gt;和叔欣，丛祥报道完，下楼时在电梯里遇到刘鹤，三言两语间四人就约了中饭，在顺溜面馆吃了一碗地道的山西刀削面。慢慢熟络起来后四人相约下午去附近的纯阳宫转转。&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/%E7%BA%AF%E9%98%B3%E5%AE%AB.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;纯阳宫之行&quot;&gt;&lt;br&gt;一下午的时间让我们对刘鹤有了一定的了解，原来他是东北大学的计科第一名，而且是院学生会主席，保研去了清华人智的直博（这波帮他的征友广告我给满分，有意向的妹子我给联系方式）。&lt;/p&gt;
&lt;h3 id=&quot;19日晚上食品街炉边琴音&quot;&gt;&lt;a href=&quot;#19日晚上食品街炉边琴音&quot; class=&quot;headerlink&quot; title=&quot;19日晚上食品街炉边琴音&quot;&gt;&lt;/a&gt;19日晚上食品街炉边琴音&lt;/h3&gt;&lt;p&gt;由于晚上刘鹤去找她的高中女同学吃饭（啧啧啧），我们剩下的三个人在群里找人约饭的时候，在楼下碰见疑似在等人的王琦学妹，上前约谈后决定和之后即将到来的子豪和羽桐一起找地方吃饭。和曾经去过的杭州河坊街和苏州七里山塘街一样，太原也有一条类似的食品街，我们六人寻寻觅觅最后在炉边琴音这家店吃饭。&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/%E7%82%89%E8%BE%B9%E7%90%B4%E9%9F%B3.jpg&quot; class=&quot;img-topic&quot;&gt;&lt;br&gt;店里环境很好，驻场歌手也唱得不错，人均消费才40而且最后还送了我们一张附近KTV的2小时欢唱券。大家都不是很想去K歌的前提下本来打算在大群里将券送给想去唱歌的人，无奈最后因为事情太多忘记了。浪费一张券是小事，但你们没有机会现场欣赏到我的歌喉实乃人生一大憾事，别问那为什么不在颁奖时上台展示，因为怂（捂脸），hhh…&lt;/p&gt;
&lt;h3 id=&quot;20日晚上颁奖典礼&quot;&gt;&lt;a href=&quot;#20日晚上颁奖典礼&quot; class=&quot;headerlink&quot; title=&quot;20日晚上颁奖典礼&quot;&gt;&lt;/a&gt;20日晚上颁奖典礼&lt;/h3&gt;&lt;p&gt;颁奖典礼上，有新疆大学帅小伙的舞蹈，也有山东大学的吉他天空之城，更有厦门大学妹子英语口语棒到不行的获奖感言，不禁让我感慨优秀的人总是那么的多。不仅成绩优秀，而且其他方面也有令人称赞之处的人，一直是我努力的目标。这次遇到这么多优秀的人，又一次提醒我之后的路还有很长，There is still a long way to go, carry on my boy~&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/%E9%A2%81%E5%A5%96.JPG&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;颁奖&quot;&gt;&lt;br&gt;颁奖后成功蹭到了和&lt;a href=&quot;http://www.cs.virginia.edu/people/faculty/davidson.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jack Davidson&lt;/a&gt;教授（弗吉尼亚大学教授，ACM Fellow，IEEE 2008 Taylor L. Booth Education Award）的合影，心中暗爽，hhh…&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/%E5%9B%BD%E5%A4%96%E5%90%88%E5%BD%B1.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;与Jack Davidson教授的合影&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/%E5%A4%A7%E5%90%88%E5%BD%B1.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;颁奖大合影&quot;&gt;&lt;br&gt;大合影结束后，我们的小团体也顺势来了一张，hhh…&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/%E9%A2%81%E5%A5%96%E5%90%88%E5%BD%B1.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;颁奖小合影&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;21日中午老太原菜馆&quot;&gt;&lt;a href=&quot;#21日中午老太原菜馆&quot; class=&quot;headerlink&quot; title=&quot;21日中午老太原菜馆&quot;&gt;&lt;/a&gt;21日中午老太原菜馆&lt;/h3&gt;&lt;p&gt;中午由于种种原因只有四个人吃饭的情况下，我们找到了一家地道的太原菜馆，可惜太原菜过于清淡，最后除了糖醋丸子全部吃完以外，其他的菜都剩了下来，不过对这张合影我们是满意的。&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/%E8%80%81%E5%A4%AA%E5%8E%9F%E8%8F%9C%E9%A6%86.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;四人组合影&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;21日晚上食品街小吃&quot;&gt;&lt;a href=&quot;#21日晚上食品街小吃&quot; class=&quot;headerlink&quot; title=&quot;21日晚上食品街小吃&quot;&gt;&lt;/a&gt;21日晚上食品街小吃&lt;/h3&gt;&lt;p&gt;本来打算在柳巷找地方吃饭的，到了之后发现柳巷只是一条商业街，都是婚纱摄影买衣服的地方，最后还是辗转到食品街，这一次吃的却是小吃了。&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/%E9%A3%9F%E5%93%81%E8%A1%97.jpg&quot; class=&quot;img-topic&quot;&gt;&lt;br&gt;记得一路上大家吃过的有麻花（居然是软的），正新鸡排，涮牛肚，岩烧乳酪，香蕉竹（一开始以为是一种可以吃的竹子，后来发现只是在竹子里塞了点米饭，美其名曰吃竹子里的一层膜，简直欺骗我感情），臭豆腐，鸡翅包饭，当然还有传说中的灌肠，我可以告诉你这只是一种莜麦做成的面食，味道就呵呵了。&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/%E7%81%8C%E8%82%A0.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;传说中的灌肠&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;22日晋祠之行&quot;&gt;&lt;a href=&quot;#22日晋祠之行&quot; class=&quot;headerlink&quot; title=&quot;22日晋祠之行&quot;&gt;&lt;/a&gt;22日晋祠之行&lt;/h3&gt;&lt;p&gt;最后一天的行程是在晋祠，从市区打车40分钟，在晋祠外一如既往要来一张大合影，hhh…&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/%E6%99%8B%E7%A5%A0%E5%A4%A7%E5%90%88%E5%BD%B1.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;晋祠大合影&quot;&gt;&lt;br&gt;在还没到售票处的地方，我就觉得这个地方是真的美，花花草草让人心旷神怡。&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/%E6%99%8B%E7%A5%A0%E5%A4%96%E8%8A%B1%E8%8D%89.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;晋祠花草&quot;&gt;&lt;br&gt;在里面听导游说晋祠是家祠，是为纪念周武王姬发的儿子晋王而建。其中的难老泉还有一个“柳氏坐瓮，饮马抽鞭”的民间故事，还有鱼沼飞梁，盘在柱子上的龙…晋祠三绝和建筑三绝还有其他诸多称号我都记不清了，总之晋祠值得一去。因为中午就下雨了，尽兴而归后找地方吃饭然后折腾到4点才吃完中饭也是没谁了。&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/%E6%99%8B%E7%A5%A0%E5%90%88%E5%BD%B1.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;晋祠小合影&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;23日机场&quot;&gt;&lt;a href=&quot;#23日机场&quot; class=&quot;headerlink&quot; title=&quot;23日机场&quot;&gt;&lt;/a&gt;23日机场&lt;/h3&gt;&lt;p&gt;经过这几天每天晚上狼人杀的学习，我从完全不会到能看懂一些套路了，感觉第二个晚上玩的比较好。然而有趣的是最后一晚状态不好，每次抽狼人牌都一眼被大家发现，选择当上帝也闹出了看不懂数字手势的笑话，哈哈，尽管江西人表示7的手势和你们确实不一样。&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/%E7%8B%BC%E4%BA%BA%E6%9D%80.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;狼人杀&quot;&gt;&lt;br&gt;在机场的最后一把狼人杀，临走前还要抽一把狼人，so sad，不过合影很强势。&lt;/p&gt;
&lt;h3 id=&quot;后记&quot;&gt;&lt;a href=&quot;#后记&quot; class=&quot;headerlink&quot; title=&quot;后记&quot;&gt;&lt;/a&gt;后记&lt;/h3&gt;&lt;p&gt;这次的旅途有你们很开心，尽管很舍不得，但生活还要继续，希望今后咱们都能线上线下多联系。朋友们，有缘再见，而且我相信我们一定会再见，惟愿再次聚首时你我都已成长不少，再会。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;很荣幸能在今年获得“2016年CCF优秀大学生奖”和这次来太原参加2016中国计算机大会（CNCC）的机会，CNCC是我国计算机领域规模最大、级别最高的学术会议，而本届大会的主题是“计算改变未来”。&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/CNCC2016%E6%80%BB%E7%BB%93/CNCC2016.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;CNCC2016&quot; /&gt;&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://hujun1413.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="总结" scheme="http://hujun1413.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>ROS_By_Example笔记</title>
    <link href="http://hujun1413.github.io/2016/10/13/ROS/ROS_By_Example/"/>
    <id>http://hujun1413.github.io/2016/10/13/ROS/ROS_By_Example/</id>
    <published>2016-10-13T12:35:26.000Z</published>
    <updated>2018-08-27T08:49:43.779Z</updated>
    
    <content type="html">&lt;h3 id=&quot;网址记录&quot;&gt;&lt;a href=&quot;#网址记录&quot; class=&quot;headerlink&quot; title=&quot;网址记录&quot;&gt;&lt;/a&gt;网址记录&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/ROS/Tutorials&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Beginner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/tf/Tutorials&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/actionlib/Tutorials&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;actionlib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.ros.org/indigo/api/rviz/html/user_guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RViz User’s Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ros.org/browse/list.php?package_type=package&amp;amp;distro=indigo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Browsing packages for indigo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/catkin/CMakeLists.txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;catkin/CMakeLists.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/zyh821351004/article/details/52143309&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; ROS中nodelet的使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/zqxf123456789/article/details/52497833&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;launch文件介绍&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;源码下载&quot;&gt;&lt;a href=&quot;#源码下载&quot; class=&quot;headerlink&quot; title=&quot;源码下载&quot;&gt;&lt;/a&gt;源码下载&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/catkin_ws/src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/pirobot/rbx1.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; rbx1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git checkout indigo-devel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/catkin_ws&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;catkin_make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; ~/catkin_ws/devel/setup.bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rospack profile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;TurtleBot机器人底盘的模拟&quot;&gt;&lt;a href=&quot;#TurtleBot机器人底盘的模拟&quot; class=&quot;headerlink&quot; title=&quot;TurtleBot机器人底盘的模拟&quot;&gt;&lt;/a&gt;TurtleBot机器人底盘的模拟&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roscore&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch rbx1_bringup fake_turtlebot.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rviz rviz &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; `rospack find rbx1_nav`/sim.rviz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic pub -r 10 /cmd_vel geometry_msgs/Twist &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;linear: &amp;#123;x: 0.2, y: 0, z: 0&amp;#125;, angular: &amp;#123;x: 0, y: 0, z: 0.5&amp;#125;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic pub -1 /cmd_vel geometry_msgs/Twist &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;linear: &amp;#123;x: 0.2, y: 0, z: 0&amp;#125;, angular: &amp;#123;x: 0, y: 0, z: 0&amp;#125;&amp;#125;&#39;&lt;/span&gt;; rostopic pub -r 10 /cmd_vel geometry_msgs/Twist &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;linear: &amp;#123;x: 0.2, y: 0, z: 0&amp;#125;, angular: &amp;#123;x: 0, y: 0, z: 0.5&amp;#125;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic pub -1 /cmd_vel geometry_msgs/Twist &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rbx1_nav timed_out_and_back.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rbx1_nav odom_out_and_back.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rbx1_nav nav_square.py&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#键盘或者手柄控制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-joystick-drivers \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ros-indigo-turtlebot-teleop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch rbx1_nav keyboard_teleop.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#虚拟摇杆&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arbotix_gui&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#Interactive Markers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install ros-indigo-turtlebot-interactive-markers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch rbx1_bringup fake_turtlebot.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rviz rviz &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; `rospack find rbx1_nav`/interactive_markers.rviz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch rbx1_nav interactive_markers.launch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;SLAM-Map-Building-with-TurtleBot&quot;&gt;&lt;a href=&quot;#SLAM-Map-Building-with-TurtleBot&quot; class=&quot;headerlink&quot; title=&quot;SLAM Map Building with TurtleBot&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://wiki.ros.org/turtlebot_navigation/Tutorials/Build%20a%20map%20with%20SLAM&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SLAM Map Building with TurtleBot&lt;/a&gt;&lt;/h3&gt;&lt;h3 id=&quot;Testing-move-base-in-the-ArbotiX-Simulator（路径规划）&quot;&gt;&lt;a href=&quot;#Testing-move-base-in-the-ArbotiX-Simulator（路径规划）&quot; class=&quot;headerlink&quot; title=&quot;Testing move_base in the ArbotiX Simulator（路径规划）&quot;&gt;&lt;/a&gt;Testing move_base in the ArbotiX Simulator（路径规划）&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch rbx1_bringup fake_turtlebot.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch rbx1_nav fake_move_base_blank_map.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rviz rviz &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; `rospack find rbx1_nav`/nav.rviz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic pub /move_base_simple/goal geometry_msgs/PoseStamped \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123; header: &amp;#123; frame_id: &quot;map&quot; &amp;#125;, pose: &amp;#123; position: &amp;#123; x: 1.0, y: 0, z: 0 &amp;#125;, orientation: &amp;#123; x: 0, y: 0, z: 0, w: 1 &amp;#125; &amp;#125; &amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rostopic pub /move_base_simple/goal geometry_msgs/PoseStamped \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123; header: &amp;#123; frame_id: &quot;map&quot; &amp;#125;, pose: &amp;#123; position: &amp;#123; x: 0, y: 0, z: 0 &amp;#125;, orientation: &amp;#123; x: 0, y: 0, z: 0, w: 1 &amp;#125; &amp;#125; &amp;#125;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#动态修改参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rqt_reconfigure rqt_reconfigure&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Navigating-a-Square-using-move-base（走正方形）&quot;&gt;&lt;a href=&quot;#Navigating-a-Square-using-move-base（走正方形）&quot; class=&quot;headerlink&quot; title=&quot;Navigating a Square using move_base（走正方形）&quot;&gt;&lt;/a&gt;Navigating a Square using move_base（走正方形）&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch rbx1_bringup fake_turtlebot.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch rbx1_nav fake_move_base_blank_map.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rviz rviz &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; `rospack find rbx1_nav`/nav.rviz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rbx1_nav move_base_square.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Avoiding-Simulated-Obstacles（避障）&quot;&gt;&lt;a href=&quot;#Avoiding-Simulated-Obstacles（避障）&quot; class=&quot;headerlink&quot; title=&quot;Avoiding Simulated Obstacles（避障）&quot;&gt;&lt;/a&gt;Avoiding Simulated Obstacles（避障）&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch rbx1_bringup fake_turtlebot.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosparam delete /move_base&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch rbx1_nav fake_move_base_map_with_obstacles.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rviz rviz &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; `rospack find rbx1_nav`/nav_obstacles.rviz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rbx1_nav move_base_square.py&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Navigation-and-Localization-using-a-Map-and-amcl（即时定位与建图，导航与定位）&quot;&gt;&lt;a href=&quot;#Navigation-and-Localization-using-a-Map-and-amcl（即时定位与建图，导航与定位）&quot; class=&quot;headerlink&quot; title=&quot;Navigation and Localization using a Map and amcl（即时定位与建图，导航与定位）&quot;&gt;&lt;/a&gt;Navigation and Localization using a Map and amcl（即时定位与建图，导航与定位）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://wiki.ros.org/move_base&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;move_base&lt;/a&gt; for moving the robot to a goal pose within a given reference frame&lt;br&gt;路径规划，移动机器人到指定帧的目标位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://wiki.ros.org/gmapping&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;gmapping&lt;/a&gt; for creating a map from laser scan data (or simulated laser data from a depth camera)&lt;br&gt;从激光扫描数据建图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://wiki.ros.org/amcl&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;amcl&lt;/a&gt; for localization using an existing map&lt;br&gt;用已有地图进行定位&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch rbx1_bringup fake_turtlebot.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch rbx1_nav fake_amcl.launch map:=&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;_map.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rviz rviz &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; `rospack find rbx1_nav`/amcl.rviz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Fully-Autonomous-Navigation（随机位置自动漫游）&quot;&gt;&lt;a href=&quot;#Fully-Autonomous-Navigation（随机位置自动漫游）&quot; class=&quot;headerlink&quot; title=&quot;Fully Autonomous Navigation（随机位置自动漫游）&quot;&gt;&lt;/a&gt;Fully Autonomous Navigation（随机位置自动漫游）&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roscore&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rqt_console &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roslaunch rbx1_nav fake_nav_test.launch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rosrun rviz rviz &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; `rospack find rbx1_nav`/amcl.rviz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;所用节点：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/arbotix&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/fake_localization&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/map_server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/move_base&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/nav_&lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/robot_state_publisher&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/rosout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/rviz_1476674751821829778&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ROS的node和node之间的消息缓冲区管理由谁负责&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;网址记录&quot;&gt;&lt;a href=&quot;#网址记录&quot; class=&quot;headerlink&quot; title=&quot;网址记录&quot;&gt;&lt;/a&gt;网址记录&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/ROS/Tutorials&quot;&gt;Beginner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/tf/Tutorials&quot;&gt;tf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/actionlib/Tutorials&quot;&gt;actionlib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.ros.org/indigo/api/rviz/html/user_guide/&quot;&gt;RViz User’s Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ros.org/browse/list.php?package_type=package&amp;amp;distro=indigo&quot;&gt;Browsing packages for indigo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.ros.org/catkin/CMakeLists.txt&quot;&gt;catkin/CMakeLists.txt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/zyh821351004/article/details/52143309&quot;&gt; ROS中nodelet的使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/zqxf123456789/article/details/52497833&quot;&gt;launch文件介绍&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="ROS" scheme="http://hujun1413.github.io/categories/ROS/"/>
    
    
  </entry>
  
  <entry>
    <title>ROS是什么</title>
    <link href="http://hujun1413.github.io/2016/09/26/ROS/0.%E4%BB%80%E4%B9%88%E6%98%AFROS/"/>
    <id>http://hujun1413.github.io/2016/09/26/ROS/0.什么是ROS/</id>
    <published>2016-09-26T12:33:26.000Z</published>
    <updated>2018-08-27T08:52:54.848Z</updated>
    
    <content type="html">&lt;h2 id=&quot;ROS是什么&quot;&gt;&lt;a href=&quot;#ROS是什么&quot; class=&quot;headerlink&quot; title=&quot;ROS是什么&quot;&gt;&lt;/a&gt;ROS是什么&lt;/h2&gt;&lt;p&gt;ROS系统是起源于2007年斯坦福大学人工智能实验室的项目与机器人技术公司Willow Garage的个人机器人项目(Personal Robots Program)之间的合作，2008年之后就由Willow Garage来进行推动。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;ROS 是一个适用于机器人的开源的元操作系统。它提供了操作系统应有的服务，包括硬件抽象，底层设备控制，常用函数的实现，进程间消息传递，以及包管理。它也提供用于获取、编译、编写、和跨计算机运行代码所需的工具和库函数。在某些方面ROS相当于一种“机器人框架（robot frameworks）”类似的“机器人框架”有：&lt;font color=&quot;red&quot;&gt;Player，YARP，Orocos，CARMEN，Orca，MOOS和 Microsoft Robotics Studio&lt;/font&gt;。&lt;/p&gt;
&lt;p&gt;ROS 运行时的“蓝图”是一种基于ROS通信基础结构的松耦合点对点进程网络。ROS实现了几种不同的通信方式，包括&lt;font color=&quot;red&quot;&gt;基于同步RPC样式通信&lt;/font&gt;的服务（services）机制，&lt;font color=&quot;red&quot;&gt;基于异步流媒体数据&lt;/font&gt;的话题（topics）机制以及&lt;font color=&quot;red&quot;&gt;用于数据存储&lt;/font&gt;的参数服务器（Parameter Server）。想更加深入的解释这些概念，请参见概念综述。&lt;/p&gt;
&lt;p&gt;ROS并不是一个实时的框架，但ROS可以嵌入实时程序。Willow Garage的PR2机器人使用了一种叫做pr2_etherCAT的系统来实时发送或接收ROS消息。ROS也可以与Orocos实时工具包无缝集成。&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/0.%E4%BB%80%E4%B9%88%E6%98%AFROS/whyROS.png&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;为什么要有ROS&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/0.%E4%BB%80%E4%B9%88%E6%98%AFROS/ROSis.png&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;ROS是什么&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/0.%E4%BB%80%E4%B9%88%E6%98%AFROS/ROSisnot.png&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;ROS不是什么&quot;&gt;&lt;br&gt;简单的说，ros就是一个分布式操作系统，通过节点node，主题topic，服务service等进行通信和控制。&lt;/p&gt;
&lt;p&gt;ROS真正的吸引力不在于它自己发布或订阅的中间件，而在于ROS为世界各地的开发者提供了一种标准机制来分享他们的代码。ROS最大的特色在于庞大的社区。&lt;/p&gt;
&lt;h2 id=&quot;ROS的目的&quot;&gt;&lt;a href=&quot;#ROS的目的&quot; class=&quot;headerlink&quot; title=&quot;ROS的目的&quot;&gt;&lt;/a&gt;ROS的目的&lt;/h2&gt;&lt;p&gt;ROS 是建立在Linux特别是Ubuntu系统上的一套软件系统，它具有操作系统的特征，负责管理各个模块的协同运行。设计初衷主要是面向机器人软硬件开发的特点：多点运行，随时增删模块，各模块独立开发，便于机器人多样功能的自由组合。通过拆解成不同节点和建立节点间的通信的方式，使得本来是非标准的机器人功能开发变得标准化和可维护。&lt;/p&gt;
&lt;p&gt;ROS不是一个集成了大多数功能或特征的框架。事实上，&lt;font color=&quot;red&quot;&gt;ROS 的主要目标是为机器人研究和开发提供代码复用的支持&lt;/font&gt;。ROS是一个分布式的进程（也就是节点）框架，这些进程被封装在易于被分享和发布的程序包和功能包集中。ROS也支持一种类似于代码储存库的联合系统，这个系统也可以实现工程的协作及发布。这个设计可以使一个工程的开发和实现从文件系统到用户接口完全独立决策（不受ROS限制）。同时，所有的工程都可以被ROS的基础工具整合在一起。&lt;/p&gt;
&lt;p&gt;为了支持分享和协作的主要目的，ROS框架也有其它几个目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;小型化：ROS尽可能设计的很小 – 我们不封装您的 main() 函数 – 所以为ROS编写的代码可以轻松的在其它机器人软件平台上使用。 由此得出的必然结论是ROS可以轻松集成在其它机器人软件平台：ROS已经可以与OpenRAVE，Orocos和Player集成。&lt;/li&gt;
&lt;li&gt;ROS不敏感库：ROS的首选开发模型都是用不依赖ROS的干净的库函数编写而成。&lt;/li&gt;
&lt;li&gt;语言独立：ROS框架可以简单地使用任何的现代编程语言实现。我们已经实现了Python版本，C++版本和 Lisp版本。同时，我们也拥有Java 和 Lua版本的实验库。&lt;/li&gt;
&lt;li&gt;方便测试：ROS内建一个了叫做rostest的单元/集成测试框架，可以轻松安装或卸载测试模块。&lt;/li&gt;
&lt;li&gt;可扩展：ROS可以适用于大型运行时系统和大型开发进程。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;ROS的工作机制&quot;&gt;&lt;a href=&quot;#ROS的工作机制&quot; class=&quot;headerlink&quot; title=&quot;ROS的工作机制&quot;&gt;&lt;/a&gt;ROS的工作机制&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;这个机制就好比 两个人聊天微信，每个人都是一个节点node，微信这个软件的聊天功能就是Topic，两个人只有都通过微信才能聊天，如果一个人用whatsup，另一个人用微信，是收不到对方信息的。 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对于ros topic，更像是我们在qq群中不同人说话一样 说话的人(talker)不知道是否都有谁接收（subscribe）了自己刚刚说的话（message）。&lt;br&gt;service相比则更像是新闻访谈中一问一答的形式，两个特点，一对一，有反馈。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以学好ROS就是不断的了解这种通信和交流的机制，然后应用在自己的项目上就好了。&lt;/p&gt;
&lt;p&gt;就好比你通过opencv采集到了一个物体的坐标，然后用这个坐标去驱动一个马达。以往的方式是要把他们都放在同一个ide中如visual studio，但是通过ros，opencv可以放到一个ide里执行，马达控制可以在arduino里执行，彼此通过ros的topic通信就好了。(打个比方，以前生产和销售要在同一个办公室，但是现在可以分隔两地。彼此用电话交流)&lt;/p&gt;
&lt;h2 id=&quot;ROS的概念&quot;&gt;&lt;a href=&quot;#ROS的概念&quot; class=&quot;headerlink&quot; title=&quot;ROS的概念&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://wiki.ros.org/ROS/Concepts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ROS的概念&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;ROS的概念分为三个级别：文件系统级（the Filesystem level）、计算图级（the Computation Graph level）、社区级（the Community level）。&lt;br&gt;Note: since ROS Groovy these wiki pages describe concepts as they relate to the new catkin buildsystem. For older versions of ROS or when using the rosbuild buildsystem, see: &lt;a href=&quot;http://wiki.ros.org/rosbuild/ROS/Concepts&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rosbuild/ROS/Concepts&lt;/a&gt;&lt;br&gt;&lt;strong&gt;1.文件系统级：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;包(Packages)：ROS的软件以包的方式组织起来。包包含节点、ROS依赖库、数据集、配置文件、第三方软件、或者任何其他逻辑构成。包的目标是提供一种易于使用的结构以便于软件的重复使用。总得来说，ROS的包短小精干，是您在ROS中能建立及分享的最小单元。。&lt;/li&gt;
&lt;li&gt;Metapackages：Metapackages 是一组具体的服务相关的功能包。大部分的metpackages 只作为转换rosbuild Stacks的向后兼容的备选。&lt;/li&gt;
&lt;li&gt;Package Manifests&lt;/li&gt;
&lt;li&gt;Repositories&lt;/li&gt;
&lt;li&gt;Message (msg) types&lt;/li&gt;
&lt;li&gt;Service (srv) types:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2.计算图级：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nodes、Master(控制器)、Parameter Server、Messages、Topics、Services、 Bags &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3.社区级：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Distributions:Repositories、The ROS Wiki、Bug Ticket System、 Mailing Lists、ROS Answers、Blog&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;4.Names:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Graph Resource Names&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Graph Resource Names provide a hierarchical naming structure that is used for all resources in a ROS Computation Graph, such as Nodes, Parameters, Topics, and Services. &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Node&lt;/th&gt;
&lt;th&gt;Relative(default)&lt;/th&gt;
&lt;th&gt;Global&lt;/th&gt;
&lt;th&gt;Private&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;/node1&lt;/td&gt;
&lt;td&gt;bar -&amp;gt; /bar&lt;/td&gt;
&lt;td&gt;/bar -&amp;gt; /bar&lt;/td&gt;
&lt;td&gt;~bar -&amp;gt; /node1/bar   &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/wg/node2&lt;/td&gt;
&lt;td&gt;bar -&amp;gt; /wg/bar&lt;/td&gt;
&lt;td&gt;/bar -&amp;gt; /bar&lt;/td&gt;
&lt;td&gt;~bar -&amp;gt; /wg/node2/bar&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Package Resource Names&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of the ROS-related files that may be referred to using Package Resource Names include:&lt;br&gt;Message (msg) 、typesService (srv) 、typesNode types&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ROS是什么&quot;&gt;&lt;a href=&quot;#ROS是什么&quot; class=&quot;headerlink&quot; title=&quot;ROS是什么&quot;&gt;&lt;/a&gt;ROS是什么&lt;/h2&gt;&lt;p&gt;ROS系统是起源于2007年斯坦福大学人工智能实验室的项目与机器人技术公司Willow Garage的个人机器人项目(Personal Robots Program)之间的合作，2008年之后就由Willow Garage来进行推动。&lt;br&gt;
    
    </summary>
    
      <category term="ROS" scheme="http://hujun1413.github.io/categories/ROS/"/>
    
    
  </entry>
  
  <entry>
    <title>大创总结</title>
    <link href="http://hujun1413.github.io/2016/04/12/Informal_essay/%E5%A4%A7%E5%88%9B%E6%80%BB%E7%BB%93/"/>
    <id>http://hujun1413.github.io/2016/04/12/Informal_essay/大创总结/</id>
    <published>2016-04-12T08:25:26.000Z</published>
    <updated>2017-03-05T03:59:19.368Z</updated>
    
    <content type="html">&lt;p&gt;刚听说要在周三前finish大创总结的通知时，我手头上还有一堆的事情，叫我写总结其实我的内心是拒绝的。然而今晚猛然发现要是再不写就真的要gg了，于是提起多年没写过的笔（哦错了，这次是抄起键盘），用令人捉急的文字写这个不知道将要给谁看的总结。&lt;br&gt;&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/%E5%A4%A7%E5%88%9B%E6%80%BB%E7%BB%93/fenghuangling.jpgfenghuangling.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;登山之凤凰岭&quot;&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;谈谈写总结的初衷&quot;&gt;&lt;a href=&quot;#谈谈写总结的初衷&quot; class=&quot;headerlink&quot; title=&quot;谈谈写总结的初衷&quot;&gt;&lt;/a&gt;谈谈写总结的初衷&lt;/h2&gt;&lt;p&gt;我向来是个很懒的人，这个懒倒不是说自己干活不积极，相反我自认为是一个执行力比较强的人，但是我却懒得花时间对自己所做的一些事情进行总结。我知道这不是个好的做法，于是很早就想过要改变，然而时间就像个无情的戏子，过了这么久我还是老样子，对此我只能给自己呵呵。&lt;/p&gt;
&lt;p&gt;不过前段时间发现很多大神都有自己搭建的技术博客，上面有他们平时学习的积累，也有对生活点滴的记录，这种酷炫的方式比我之前在CSDN上copy别人的博文高大上多了。终于，我想着如果我也有一个漂亮的个人博客，也许就会有写技术总结和生活记录的动力了吧。（坐等打脸）&lt;/p&gt;
&lt;p&gt;于是本着一颗装逼的心，我在上周用hexo（一种基于Node.js的静态博客框架）在&lt;a href=&quot;http://github.com/hujun1413&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;上搭建了自己的&lt;a href=&quot;https://hujun1413.github.io/&quot;&gt;个人博客&lt;/a&gt;（不要问我为什么有闲工夫弄这个，一个没有女朋友的人在学不动的时候还不允许跟风怒装一逼吗，真是愚蠢）那么既然环境都搭好了，看着基本空荡荡的主页也怪难受的，于是这篇总结是不是就可以放在上面装点门面了呢，嗯，真是机智如我。&lt;/p&gt;
&lt;p&gt;呵呵，要不是这样你们怎么可能有机会看到这个交上去就不知道被丢在哪儿的总结。&lt;/p&gt;
&lt;h2 id=&quot;大创的开始&quot;&gt;&lt;a href=&quot;#大创的开始&quot; class=&quot;headerlink&quot; title=&quot;大创的开始&quot;&gt;&lt;/a&gt;大创的开始&lt;/h2&gt;&lt;p&gt;前面说了一堆废话，都没有提到大创的事，想必你们只有用呵呵才能表达对我的直触灵魂的敬意。好了，言归正传，记得大创是在去年4，5月份组队的，那时还在机器人队，每天都忙成狗，晚上回到宿舍都已经熄灯了。那时我们还是会偶尔抽出些时间来开会讨论大创要做的东西，一开始我灵光一现（后来证明这就是个笑话）说咱们做个交通指挥机器人吧，巴拉巴拉讲了一堆，队友也觉得行，找四海和梁老师也觉得可以，于是就风风火火地写项目计划书去了，写完后找郭老师一瞧，然后几个问题把我们问倒，事实证明我们还是too young too simple，于是只好重新讨论。&lt;/p&gt;
&lt;p&gt;后来仝霸提出做个智能储物柜，于是又巴拉巴拉说一堆最后决定就做这个（不要说我们随意，其实这些都是经过深思熟虑的决定，嗯，呕，编不下去了），然后终于过了郭老师那一关。&lt;/p&gt;
&lt;h2 id=&quot;暑期学校做大创&quot;&gt;&lt;a href=&quot;#暑期学校做大创&quot; class=&quot;headerlink&quot; title=&quot;暑期学校做大创&quot;&gt;&lt;/a&gt;暑期学校做大创&lt;/h2&gt;&lt;p&gt;暑假刚开始的时候，我跟着大家一起做，主要负责树莓派的开发，把所有相关资料都download好，需要用的软件装好后，又学习了几天python，写了树莓派网络通信的部分。测通之后刚好数学建模的模拟开始了，实在没办法抛开大创，去做了5天的模拟，之所以做这么久很大一部分原因是自己太渣。&lt;/p&gt;
&lt;p&gt;等做完建模回到大创，我惊奇地发现树莓派的工作已经被乐纯接管了，而且我回来也插不上手了。这时学苇也笑着说以后我可以专门负责写文档了，我一听，那可不行，我可是要做点有技术含量的活儿。但是也不好反驳大家，只好含糊的说写文档也行。果然，夏霸那边的安卓开发压力有点大，一个人写一个APP还是很困难，于是决定我和他一起写安卓。后来在学校的时间学了一些简单的安卓开发，对夏霸写了一部分的APP架构和代码都基本了解了。&lt;/p&gt;
&lt;h2 id=&quot;暑假家里调bug学安卓&quot;&gt;&lt;a href=&quot;#暑假家里调bug学安卓&quot; class=&quot;headerlink&quot; title=&quot;暑假家里调bug学安卓&quot;&gt;&lt;/a&gt;暑假家里调bug学安卓&lt;/h2&gt;&lt;p&gt;暑假做完机器人擂台赛已经8月中旬了，回到家为了不拖大创进度，耐着性子把APP中的一些bug给调了一些。然后继续熟悉整个APP工程，加深对安卓开发的认识。可以说，暑假让我有了追赶大家的机会。就这样，短短的15天假期就结束了，又要回学校了。&lt;/p&gt;
&lt;h2 id=&quot;大三上写送餐员版APP&quot;&gt;&lt;a href=&quot;#大三上写送餐员版APP&quot; class=&quot;headerlink&quot; title=&quot;大三上写送餐员版APP&quot;&gt;&lt;/a&gt;大三上写送餐员版APP&lt;/h2&gt;&lt;p&gt;大三刚开学其他专业在上小学期，而我们专业刚开始的一个星期是没有课的，于是我正好利用这一个星期，开始了百度地图API的研究，一开始的密钥和jar包环境配置就折腾了好久，终于花两天时间写完了自动定位。但是之后写百度云存储却遇到很大的问题，记得当时好像是云存储的代码量太大，网上例程就好几千行代码，硬着头皮花两天时间看懂了准备开始写时，发现jar包的版本好像不对。好不容易找到云存储能用的jar包之后，惊奇地发现定位功能在这个jar包下不能用，本来就已经心力交瘁的我真的当时要放弃了。&lt;/p&gt;
&lt;p&gt;连续一个星期每天早上9点开始写代码到晚上11点，终于扛不住去找仝霸商量云存储她那边能不能帮忙做，上天保佑，她那边访问百度云的代码很简单，于是我们通过APP把坐标发给服务器，然后服务器去操作百度云实现了原本应该客户端直接操作百度云的功能。在这点上我一直都很感激仝霸。&lt;/p&gt;
&lt;p&gt;当我开发完百度地图相关的功能后，我们发现要做两个APP，已经安卓上手的我负责送餐员版APP。之前夏霸的APP是针对用户版使用的，我在原本框架下干掉一些没用的然后增加自己需要的功能和界面，然后和仝霸将网络传输测通，解决诸如编码问题和传输内容匹配的两方协调，终于将送餐员版APP的基本功能实现了。&lt;/p&gt;
&lt;h2 id=&quot;队友篇&quot;&gt;&lt;a href=&quot;#队友篇&quot; class=&quot;headerlink&quot; title=&quot;队友篇&quot;&gt;&lt;/a&gt;队友篇&lt;/h2&gt;&lt;p&gt;这时大创的大部分工作算是完成了，之后的时间就是偶尔一起调调出现的bug和应付各种大创检查。总的来说我还是比预期付出了更多的时间和精力，不仅学到了很多诸如python，安卓开发的技术，还学会了如何与优秀的团队相处。说实话，我们大创的所有队友都非常优秀，每个人都能保研，而且仝霸和夏霸都是网工的第一和第二，这样的团队我觉得已经能够秒杀很多组了。当然，最重要的一点是我们每个人都很靠谱。&lt;/p&gt;
&lt;p&gt;学苇，每次都要花时间组织大家开会或者一起调bug，这是非常辛苦的，需要考虑每个阶段团队的任务和产出，作为组长你是称职的。不仅要考虑开会、通知、报销这些事情，你还要负责服务器这边的工作，作为队友你是负责的。&lt;/p&gt;
&lt;p&gt;乐纯，本来只需要负责自己份内的机械设计和画图工作，但是你却毅然决然的接收了原本属于我的树莓派工作，一个女生去倒腾硬件其实是很辛苦的，而我也因为对树莓派接触的少，没有怎么在这上面帮到你，对此我深表歉意。&lt;/p&gt;
&lt;p&gt;仝霸，我觉得你是我遇到过最厉害靠谱的女生，每次和你商量的事都能认真的做到，多次接触下来我对你就有了迷一般的敬佩。你负责了服务器端很多的工作，不仅要花时间和我调通服务器和APP端的交互，还要和乐纯那边的树莓派交互。有时我遇到问题会浮躁没耐心，但是却从来没有看见你埋怨过，永远都是默默地在做着。&lt;/p&gt;
&lt;p&gt;夏霸，团队里除我以外的唯一一位男生，APP一开始的工作都是你承担的，在这点上我要感谢你，如果不是你，光安卓的入门我就要花很多倍的时间。你的编程功底很强，成绩也很棒，而且热爱运动，记得你叫我一起跑步去奥森，但是我却因为怂没有去，下次有时间有机会一定和你跑一次。你立志要出国读博，我衷心的祝福你实现自己的梦想。&lt;/p&gt;
&lt;h2 id=&quot;娱乐篇&quot;&gt;&lt;a href=&quot;#娱乐篇&quot; class=&quot;headerlink&quot; title=&quot;娱乐篇&quot;&gt;&lt;/a&gt;娱乐篇&lt;/h2&gt;&lt;p&gt;这里回忆下我们一起玩耍过的时光。我们一起在楼上楼吃饭（美其名曰，开会讨论），去游泳馆游泳（那还是我在北京的处女游），去爆米花K歌（记得学苇没去，没机会欣赏我的歌喉那可真是你的遗憾，希望下次补回来），去看《大圣归来》，去凤凰岭爬山（一样是我在北京的处女爬）……这么多的故事都是和你们一起发生，想起来还真是有点感动。&lt;/p&gt;
&lt;h2 id=&quot;老师篇&quot;&gt;&lt;a href=&quot;#老师篇&quot; class=&quot;headerlink&quot; title=&quot;老师篇&quot;&gt;&lt;/a&gt;老师篇&lt;/h2&gt;&lt;p&gt;四海老师，特别热情，而且对我们总是有一种迷一般的自信，常挂在嘴边的一句话就是“你们都很优秀，项目和今后发展都一定好”。哈哈，希望我们都不要辜负您的厚望~&lt;/p&gt;
&lt;p&gt;梁洪亮老师，第一次见时就能很快地和我们商量项目的细节，而且非常的专业负责。当您在会议室的黑板上将我们项目的流程图画出来然后商量具体实现细节时，我就知道，跟着您一定有前途。&lt;/p&gt;
&lt;p&gt;郭莉老师，第一次见面时觉得您十分干练，一看就是和我一样追求效率的人，说话句句到点，一针见血，总是能找到我们存在的问题。到后来，项目快做完的时候，您在我们心中的形象变得更加亲切起来，肯定我们的付出，但警醒我们不能松懈，您真的是一位值得我们尊敬的优秀的老师。&lt;/p&gt;
&lt;h2 id=&quot;结束语&quot;&gt;&lt;a href=&quot;#结束语&quot; class=&quot;headerlink&quot; title=&quot;结束语&quot;&gt;&lt;/a&gt;结束语&lt;/h2&gt;&lt;p&gt;不知不觉写了3000多字（哎呀我擦，说好的300字要求呢），也不知道自己都说了些什么，都是想到啥说啥。煽情的话我也不会说，但愿我们以后也能常聚，一起度过今后更多的时光。愿我们都能实现自己的梦想，时光不老，我们不散！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;刚听说要在周三前finish大创总结的通知时，我手头上还有一堆的事情，叫我写总结其实我的内心是拒绝的。然而今晚猛然发现要是再不写就真的要gg了，于是提起多年没写过的笔（哦错了，这次是抄起键盘），用令人捉急的文字写这个不知道将要给谁看的总结。&lt;br&gt;&lt;!-- 标签 方式，要求版本在0.4.5或以上 --&gt;&lt;br&gt;&lt;img src=&quot;http://ofl6ycl3e.bkt.clouddn.com/images/%E5%A4%A7%E5%88%9B%E6%80%BB%E7%BB%93/fenghuangling.jpgfenghuangling.jpg&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;登山之凤凰岭&quot; /&gt;&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://hujun1413.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="总结" scheme="http://hujun1413.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://hujun1413.github.io/2016/04/07/Informal_essay/hello-world/"/>
    <id>http://hujun1413.github.io/2016/04/07/Informal_essay/hello-world/</id>
    <published>2016-04-07T08:25:26.000Z</published>
    <updated>2017-03-05T03:59:14.836Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考：&quot;&gt;&lt;a href=&quot;#参考：&quot; class=&quot;headerlink&quot; title=&quot;参考：&quot;&gt;&lt;/a&gt;参考：&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.linuxdiyf.com/linux/18320.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ubuntu15.04安装hexo&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://lovenight.github.io/2015/11/10/Hexo-3-1-1-静态博客搭建指南/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo 3.1.1 静态博客搭建指南&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000007385345&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo不同电脑之间同步写博客&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Requirements&quot;&gt;&lt;a href=&quot;#Requirements&quot; class=&quot;headerlink&quot; title=&quot;Requirements&quot;&gt;&lt;/a&gt;Requirements&lt;/h2&gt;&lt;h3 id=&quot;nodejs&quot;&gt;&lt;a href=&quot;#nodejs&quot; class=&quot;headerlink&quot; title=&quot;nodejs&quot;&gt;&lt;/a&gt;nodejs&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget -qO- https://raw.githubusercontent.com/creationix/nvm/master/install.sh | sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nvm install stable&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;git&quot;&gt;&lt;a href=&quot;#git&quot; class=&quot;headerlink&quot; title=&quot;git&quot;&gt;&lt;/a&gt;git&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get install git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;install-hexo&quot;&gt;&lt;a href=&quot;#install-hexo&quot; class=&quot;headerlink&quot; title=&quot;install hexo&quot;&gt;&lt;/a&gt;install hexo&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;init&quot;&gt;&lt;a href=&quot;#init&quot; class=&quot;headerlink&quot; title=&quot;init&quot;&gt;&lt;/a&gt;init&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install  &lt;span class=&quot;comment&quot;&gt;#安装依赖包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://hujun1413.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="hexo" scheme="http://hujun1413.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Markdown基本用法</title>
    <link href="http://hujun1413.github.io/2016/04/07/Informal_essay/Markdown%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
    <id>http://hujun1413.github.io/2016/04/07/Informal_essay/Markdown基本用法/</id>
    <published>2016-04-07T03:25:26.000Z</published>
    <updated>2017-06-09T02:37:01.764Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Markdown语法学习&quot;&gt;&lt;a href=&quot;#Markdown语法学习&quot; class=&quot;headerlink&quot; title=&quot;Markdown语法学习&quot;&gt;&lt;/a&gt;Markdown语法学习&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.appinn.com/markdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown中文版语法说明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/1e402922ee32/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown——入门指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/0b257de21eb5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown进阶语法整理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cmd Markdown 简明语法手册&lt;/a&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;插入目录&quot;&gt;&lt;a href=&quot;#插入目录&quot; class=&quot;headerlink&quot; title=&quot;插入目录&quot;&gt;&lt;/a&gt;插入目录&lt;/h2&gt;使用[TOC]引用目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;[TOC]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;插入图片&quot;&gt;&lt;a href=&quot;#插入图片&quot; class=&quot;headerlink&quot; title=&quot;插入图片&quot;&gt;&lt;/a&gt;插入图片&lt;/h2&gt;&lt;p&gt;&lt;code&gt;![](link &amp;quot;图片名1&amp;quot;)&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;link&quot; alt=&quot;&quot; title=&quot;图片名1&quot;&gt;&lt;br&gt;hexo在图片下方显示图片描述：&lt;br&gt;&lt;code&gt;&lt;img src=&quot;link&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;图片描述&quot;&gt;&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;link&quot; class=&quot;full-image&quot; alt=&quot;alt&quot; title=&quot;图片描述&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h2&gt;&lt;p&gt;&lt;code&gt;&amp;gt; 这是引用&lt;/code&gt;&lt;br&gt;注意&amp;gt;与文字之间的空格&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是引用&lt;/p&gt;
&lt;p&gt;这是一级引用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是二级引用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是三级引用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是一级引用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; 这是一级引用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt; 这是二级引用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; 这是三级引用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; 这是一级引用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; 这是一级引用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt; 这是二级引用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; 这是三级引用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; 这是一级引用&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;这是一级引用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是二级引用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是三级引用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;这是一级引用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注意&amp;gt;与文字之间的空格&lt;/p&gt;
&lt;h2 id=&quot;粗体与斜体&quot;&gt;&lt;a href=&quot;#粗体与斜体&quot; class=&quot;headerlink&quot; title=&quot;粗体与斜体&quot;&gt;&lt;/a&gt;粗体与斜体&lt;/h2&gt;&lt;p&gt;&lt;code&gt;**这是粗体** or __这是粗体__&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这是粗体&lt;/strong&gt; or &lt;strong&gt;这是粗体&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*这是斜体* or _这是斜体_&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;这是斜体&lt;/em&gt; or &lt;em&gt;这是斜体&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;反斜杠\表示不想显示Markdown标记：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\*这里不会显示斜体\*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;*这里不会显示斜体*&lt;/p&gt;
&lt;h2 id=&quot;标题一&quot;&gt;&lt;a href=&quot;#标题一&quot; class=&quot;headerlink&quot; title=&quot;标题一&quot;&gt;&lt;/a&gt;标题一&lt;/h2&gt;&lt;h3 id=&quot;标题二&quot;&gt;&lt;a href=&quot;#标题二&quot; class=&quot;headerlink&quot; title=&quot;标题二&quot;&gt;&lt;/a&gt;标题二&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;## 标题一&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### 标题二&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;这是一级标题&quot;&gt;&lt;a href=&quot;#这是一级标题&quot; class=&quot;headerlink&quot; title=&quot;这是一级标题&quot;&gt;&lt;/a&gt;这是一级标题&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这是一级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;===&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;这是二级标题&quot;&gt;&lt;a href=&quot;#这是二级标题&quot; class=&quot;headerlink&quot; title=&quot;这是二级标题&quot;&gt;&lt;/a&gt;这是二级标题&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;这是二级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-------------&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;分割线&quot;&gt;&lt;a href=&quot;#分割线&quot; class=&quot;headerlink&quot; title=&quot;分割线&quot;&gt;&lt;/a&gt;分割线&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-----&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h2&gt;&lt;h3 id=&quot;无序列表&quot;&gt;&lt;a href=&quot;#无序列表&quot; class=&quot;headerlink&quot; title=&quot;无序列表&quot;&gt;&lt;/a&gt;无序列表&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;* 列表一&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 列表二&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 1. 有序列表一&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  2. 有序列表二&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;列表一&lt;/li&gt;
&lt;li&gt;列表二&lt;/li&gt;
&lt;li&gt;&lt;ol&gt;
&lt;li&gt;有序列表一&lt;/li&gt;
&lt;li&gt;有序列表二&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ 呵呵&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * 嘉嘉&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - 嘻嘻&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - 吼吼&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - 嘎嘎&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        + 桀桀&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;呵呵&lt;ul&gt;
&lt;li&gt;嘉嘉&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;嘻嘻&lt;/li&gt;
&lt;li&gt;吼吼&lt;ul&gt;
&lt;li&gt;嘎嘎&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;桀桀&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;有序列表&quot;&gt;&lt;a href=&quot;#有序列表&quot; class=&quot;headerlink&quot; title=&quot;有序列表&quot;&gt;&lt;/a&gt;有序列表&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1. * 有序一&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   * 呵呵&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   * 和哈&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2. 有序二&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3. 有序三&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;有序一&lt;/li&gt;
&lt;li&gt;呵呵&lt;/li&gt;
&lt;li&gt;和哈&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有序二&lt;/li&gt;
&lt;li&gt;有序三&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;表格&quot;&gt;&lt;a href=&quot;#表格&quot; class=&quot;headerlink&quot; title=&quot;表格&quot;&gt;&lt;/a&gt;表格&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| Tables        | Are           | Cool  |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| ------------- |:-------------:| -----:|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| col 3 is      | right-aligned | $1600 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| col 2 is      | centered      |   $12 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| zebra stripes | are neat      |    $1 |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------: 为右对齐。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;:------ 为左对齐。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;:------: 为居中对齐。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------- 为使用默认居中对齐。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tables&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Are&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;Cool&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;right-aligned&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col 2 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;centered&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zebra stripes&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;are neat&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dog | bird | cat&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;----|------|----&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo | foo  | foo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar | bar  | bar&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baz | baz  | baz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;dog&lt;/th&gt;
&lt;th&gt;bird&lt;/th&gt;
&lt;th&gt;cat&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;foo&lt;/td&gt;
&lt;td&gt;foo&lt;/td&gt;
&lt;td&gt;foo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bar&lt;/td&gt;
&lt;td&gt;bar&lt;/td&gt;
&lt;td&gt;bar&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;baz&lt;/td&gt;
&lt;td&gt;baz&lt;/td&gt;
&lt;td&gt;baz&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h2&gt;&lt;h3 id=&quot;行内代码-inline-code&quot;&gt;&lt;a href=&quot;#行内代码-inline-code&quot; class=&quot;headerlink&quot; title=&quot;行内代码(inline code)&quot;&gt;&lt;/a&gt;行内代码(inline code)&lt;/h3&gt;&lt;p&gt;&lt;code&gt;cd ~/kobuki/src&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;块代码&quot;&gt;&lt;a href=&quot;#块代码&quot; class=&quot;headerlink&quot; title=&quot;块代码&quot;&gt;&lt;/a&gt;块代码&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/kobuki/src&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wstool &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; ecl_core --git https://github.com/stonier/ecl_core --version=release/0.61-indigo-kinetic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wstool &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; ecl_navigation --git https://github.com/stonier/ecl_navigation --version=release/0.60-indigo-kinetic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wstool update ecl_core&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wstool update ecl_navigation&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[胡君的个人博客](http://hujun1413.github.io/ &amp;quot;胡君博客&amp;quot;)[](link &amp;quot;Optional title&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;Optional title&amp;quot;为显示标题。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在你将鼠标放到链接上后，会显示一个小框提示Optional title 里的内容。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~~胡君的个人博客&amp;lt;http://hujun1413.github.io/&amp;gt;~~&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;胡君的邮箱&amp;lt;359328242@qq.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[之后定义链接][id]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;cool one like this.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[id]: http://hujun1413.github.io/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;http://hujun1413.github.io/&quot; title=&quot;胡君博客&quot;&gt;胡君的个人博客&lt;/a&gt;&lt;a href=&quot;link&quot; title=&quot;Optional title&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;“Optional title”为显示标题。&lt;br&gt;在你将鼠标放到链接上后，会显示一个小框提示Optional title 里的内容。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;胡君的个人博客&lt;a href=&quot;http://hujun1413.github.io/&quot;&gt;http://hujun1413.github.io/&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;胡君的邮箱&lt;a href=&quot;&amp;#109;&amp;#97;&amp;#x69;&amp;#108;&amp;#116;&amp;#x6f;&amp;#x3a;&amp;#51;&amp;#x35;&amp;#x39;&amp;#x33;&amp;#50;&amp;#56;&amp;#50;&amp;#52;&amp;#50;&amp;#x40;&amp;#x71;&amp;#113;&amp;#46;&amp;#x63;&amp;#111;&amp;#x6d;&quot;&gt;&amp;#51;&amp;#x35;&amp;#x39;&amp;#x33;&amp;#50;&amp;#56;&amp;#50;&amp;#52;&amp;#50;&amp;#x40;&amp;#x71;&amp;#113;&amp;#46;&amp;#x63;&amp;#111;&amp;#x6d;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://hujun1413.github.io/&quot;&gt;之后定义链接&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cool one like this.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;脚注&quot;&gt;&lt;a href=&quot;#脚注&quot; class=&quot;headerlink&quot; title=&quot;脚注&quot;&gt;&lt;/a&gt;脚注&lt;/h2&gt;&lt;p&gt;使用 [^num] 表示注脚&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;正文[^1]文字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[^1]: 脚注内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;正文[^2]文字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[^2]: 脚注内容&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;正文&lt;a href=&quot;脚注内容&quot;&gt;^1&lt;/a&gt;文字&lt;/p&gt;
&lt;p&gt;正文&lt;a href=&quot;脚注内容&quot;&gt;^2&lt;/a&gt;文字&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;备注：关于注脚每个编辑器表示方式会有所不用，hexo的Markdown中不支持这种&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;待办事宜-Todo&quot;&gt;&lt;a href=&quot;#待办事宜-Todo&quot; class=&quot;headerlink&quot; title=&quot;待办事宜 Todo&quot;&gt;&lt;/a&gt;待办事宜 Todo&lt;/h2&gt;&lt;p&gt;使用带有- [ ] 或- [x]（未完成或已完成）项的列表语法撰写一个待办事宜列表&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- [ ] works as a framework (all components running in one process, no threads)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- [ ] redis&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;[ ] works as a framework (all components running in one process, no threads)&lt;/li&gt;
&lt;li&gt;[ ] redis&lt;/li&gt;
&lt;li&gt;[ ]&lt;br&gt;hexo的Markdown中不支持，采用以下方法替代&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;input type=&amp;apos;checkbox&amp;apos; onclick=&amp;apos;return false;&amp;apos; checked&amp;gt; works as a framework &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;input type=&amp;apos;checkbox&amp;apos; onclick=&amp;apos;return false;&amp;apos; unchecked&amp;gt; redis&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;input type=&quot;checkbox&quot; onclick=&quot;return false;&quot; checked&gt; works as a framework&lt;/p&gt;
&lt;p&gt;&lt;input type=&quot;checkbox&quot; onclick=&quot;return false;&quot; unchecked=&quot;&quot;&gt; redis&lt;/p&gt;
&lt;h2 id=&quot;空格和空行&quot;&gt;&lt;a href=&quot;#空格和空行&quot; class=&quot;headerlink&quot; title=&quot;空格和空行&quot;&gt;&lt;/a&gt;空格和空行&lt;/h2&gt;&lt;h3 id=&quot;空格&quot;&gt;&lt;a href=&quot;#空格&quot; class=&quot;headerlink&quot; title=&quot;空格&quot;&gt;&lt;/a&gt;空格&lt;/h3&gt;&lt;p&gt;Markdown语法会忽略首行开头的空格，如果要体现出首行开头空两个的效果，可以使用 全角符号下的空格 ，windows下使用 shift+空格 切换。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;胡君的个人博客&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 胡君的个人博客１(半角空格)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　胡君的个人博客２（全角空格）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;空格&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　空格&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;胡君的个人博客&lt;br&gt; 胡君的个人博客１(半角空格)&lt;br&gt;　胡君的个人博客２（全角空格）&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;空格&lt;br&gt;　空格&lt;/p&gt;
&lt;h3 id=&quot;空行&quot;&gt;&lt;a href=&quot;#空行&quot; class=&quot;headerlink&quot; title=&quot;空行&quot;&gt;&lt;/a&gt;空行&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;内容一&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;br/&amp;gt;内容二&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;br&amp;gt;内容二&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;br /&amp;gt;内容二&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;内容一&lt;br&gt;&lt;br&gt;内容二&lt;br&gt;&lt;br&gt;内容二&lt;br&gt;&lt;br&gt;内容二&lt;/p&gt;
&lt;h2 id=&quot;页内跳转&quot;&gt;&lt;a href=&quot;#页内跳转&quot; class=&quot;headerlink&quot; title=&quot;页内跳转&quot;&gt;&lt;/a&gt;页内跳转&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[你好](#jump)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;span id = &amp;quot;jump&amp;quot;&amp;gt;hehe&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;#jump&quot;&gt;你好&lt;/a&gt;&lt;br&gt;&lt;span id=&quot;jump&quot;&gt;hehe&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;LaTeX公式&quot;&gt;&lt;a href=&quot;#LaTeX公式&quot; class=&quot;headerlink&quot; title=&quot;LaTeX公式&quot;&gt;&lt;/a&gt;LaTeX公式&lt;/h2&gt;&lt;h3 id=&quot;表示行内公式&quot;&gt;&lt;a href=&quot;#表示行内公式&quot; class=&quot;headerlink&quot; title=&quot;$ 表示行内公式&quot;&gt;&lt;/a&gt;$ 表示行内公式&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。&lt;/p&gt;
&lt;h3 id=&quot;表示整行公式&quot;&gt;&lt;a href=&quot;#表示整行公式&quot; class=&quot;headerlink&quot; title=&quot;$$ 表示整行公式&quot;&gt;&lt;/a&gt;$$ 表示整行公式&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$$\sum_&amp;#123;i=1&amp;#125;^n a_i=0$$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$$\sum^&amp;#123;j-1&amp;#125;_&amp;#123;k=0&amp;#125;&amp;#123;\widehat&amp;#123;\gamma&amp;#125;_&amp;#123;kj&amp;#125; z_k&amp;#125;$$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;$$\sum_{i=1}^n a_i=0$$&lt;br&gt;$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x&lt;em&gt;n^2 $$&lt;br&gt;$$\sum^{j-1}&lt;/em&gt;{k=0}{\widehat{\gamma}_{kj} z_k}$$&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Markdown语法学习&quot;&gt;&lt;a href=&quot;#Markdown语法学习&quot; class=&quot;headerlink&quot; title=&quot;Markdown语法学习&quot;&gt;&lt;/a&gt;Markdown语法学习&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.appinn.com/markdown/&quot;&gt;Markdown中文版语法说明&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/1e402922ee32/&quot;&gt;Markdown——入门指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/0b257de21eb5&quot;&gt;Markdown进阶语法整理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown&quot;&gt;Cmd Markdown 简明语法手册&lt;/a&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://hujun1413.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
</feed>
